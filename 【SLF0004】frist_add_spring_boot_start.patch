Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/pad-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/pad-end.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/pad-end.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.pad-end');
+module.exports = require('../../../modules/_entry-virtual')('String').padEnd;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/at.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.at');
+module.exports = require('../../../modules/_entry-virtual')('String').at;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-left.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-left.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-left.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-left');
+module.exports = require('../../../modules/_entry-virtual')('String').trimLeft;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/anchor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/anchor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/anchor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.anchor');
+module.exports = require('../../../modules/_entry-virtual')('String').anchor;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/pad-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/pad-start.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/pad-start.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.pad-start');
+module.exports = require('../../../modules/_entry-virtual')('String').padStart;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-right.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-right.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-right');
+module.exports = require('../../../modules/_entry-virtual')('String').trimRight;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/blink.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/blink.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/blink.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.blink');
+module.exports = require('../../../modules/_entry-virtual')('String').blink;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/match-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/match-all.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/match-all.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.match-all');
+module.exports = require('../../../modules/_entry-virtual')('String').matchAll;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/escape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/escape-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/escape-html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/core.string.escape-html');
+module.exports = require('../../../modules/_entry-virtual')('String').escapeHTML;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/code-point-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/code-point-at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/code-point-at.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.code-point-at');
+module.exports = require('../../../modules/_entry-virtual')('String').codePointAt;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/unescape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/unescape-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/unescape-html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/core.string.unescape-html');
+module.exports = require('../../../modules/_entry-virtual')('String').unescapeHTML;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/starts-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/starts-with.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/starts-with.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.starts-with');
+module.exports = require('../../../modules/_entry-virtual')('String').startsWith;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/link.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/link.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/link.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.link');
+module.exports = require('../../../modules/_entry-virtual')('String').link;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-start.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/trim-start.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-left');
+module.exports = require('../../../modules/_entry-virtual')('String').trimLeft;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/fixed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/fixed.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.fixed');
+module.exports = require('../../../modules/_entry-virtual')('String').fixed;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/sub.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/sub.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/sub.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.sub');
+module.exports = require('../../../modules/_entry-virtual')('String').sub;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/species.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/species.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('species');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/is-concat-spreadable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/is-concat-spreadable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/is-concat-spreadable.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('isConcatSpreadable');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/match.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/match.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.match');
+module.exports = require('../../modules/_wks-ext').f('match');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/replace.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/replace.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/replace.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.replace');
+module.exports = require('../../modules/_wks-ext').f('replace');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/ends-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/ends-with.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/ends-with.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.ends-with');
+module.exports = require('../../../modules/_entry-virtual')('String').endsWith;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/includes.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.includes');
+module.exports = require('../../../modules/_entry-virtual')('String').includes;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/italics.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/italics.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/italics.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.italics');
+module.exports = require('../../../modules/_entry-virtual')('String').italics;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/bold.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/bold.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/string/virtual/bold.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.bold');
+module.exports = require('../../../modules/_entry-virtual')('String').bold;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/observable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/observable.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.symbol.observable');
+module.exports = require('../../modules/_wks-ext').f('observable');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/has-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/has-instance.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/has-instance.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.function.has-instance');
+module.exports = require('../../modules/_wks-ext').f('hasInstance');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/search.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/search.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.search');
+module.exports = require('../../modules/_wks-ext').f('search');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/split.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/split.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/split.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.split');
+module.exports = require('../../modules/_wks-ext').f('split');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/for.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/for.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/for.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.symbol');
+module.exports = require('../../modules/_core').Symbol['for'];
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.symbol');
+require('../../modules/es6.object.to-string');
+require('../../modules/es7.symbol.async-iterator');
+require('../../modules/es7.symbol.observable');
+module.exports = require('../../modules/_core').Symbol;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/key-for.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/key-for.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/key-for.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.symbol');
+module.exports = require('../../modules/_core').Symbol.keyFor;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es6.string.iterator');
+require('../../modules/web.dom.iterable');
+module.exports = require('../../modules/_wks-ext').f('iterator');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/index.js	(date 499162500000)
@@ -0,0 +1,7 @@
+require('../../modules/es6.object.to-string');
+require('../../modules/es6.string.iterator');
+require('../../modules/web.dom.iterable');
+require('../../modules/es6.promise');
+require('../../modules/es7.promise.finally');
+require('../../modules/es7.promise.try');
+module.exports = require('../../modules/_core').Promise;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/finally.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/finally.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/finally.js	(date 499162500000)
@@ -0,0 +1,4 @@
+'use strict';
+require('../../modules/es6.promise');
+require('../../modules/es7.promise.finally');
+module.exports = require('../../modules/_core').Promise['finally'];
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/system/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/system/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/system/index.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.system.global');
+module.exports = require('../../modules/_core').System;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/system/global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/system/global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/system/global.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.system.global');
+module.exports = require('../../modules/_core').System.global;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/to-string-tag.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/to-string-tag.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/to-string-tag.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.to-string');
+module.exports = require('../../modules/_wks-ext').f('toStringTag');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/unscopables.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/unscopables.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/unscopables.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('unscopables');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/to-primitive.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('toPrimitive');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/async-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/async-iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/async-iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.symbol.async-iterator');
+module.exports = require('../../modules/_wks-ext').f('asyncIterator');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/delete-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/delete-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/delete-property.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.delete-property');
+module.exports = require('../../modules/_core').Reflect.deleteProperty;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/enumerate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/enumerate.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/enumerate.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.enumerate');
+module.exports = require('../../modules/_core').Reflect.enumerate;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.get-own-metadata');
+module.exports = require('../../modules/_core').Reflect.getOwnMetadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has-own-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has-own-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has-own-metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.has-own-metadata');
+module.exports = require('../../modules/_core').Reflect.hasOwnMetadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/own-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/own-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/own-keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.own-keys');
+module.exports = require('../../modules/_core').Reflect.ownKeys;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/construct.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/construct.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/construct.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.construct');
+module.exports = require('../../modules/_core').Reflect.construct;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/try.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/try.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/promise/try.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.promise');
+require('../../modules/es7.promise.try');
+var $Promise = require('../../modules/_core').Promise;
+var $try = $Promise['try'];
+module.exports = { 'try': function (callbackfn) {
+  return $try.call(typeof this === 'function' ? this : $Promise, callbackfn);
+} }['try'];
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has-metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.has-metadata');
+module.exports = require('../../modules/_core').Reflect.hasMetadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/apply.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/apply.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/apply.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.apply');
+module.exports = require('../../modules/_core').Reflect.apply;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/define-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/define-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/define-metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.define-metadata');
+module.exports = require('../../modules/_core').Reflect.defineMetadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-metadata-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-metadata-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-metadata-keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.get-metadata-keys');
+module.exports = require('../../modules/_core').Reflect.getMetadataKeys;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.metadata');
+module.exports = require('../../modules/_core').Reflect.metadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/set-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/set-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/set-prototype-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.set-prototype-of');
+module.exports = require('../../modules/_core').Reflect.setPrototypeOf;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/set.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.set');
+module.exports = require('../../modules/_core').Reflect.set;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-metadata-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-metadata-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-metadata-keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.get-own-metadata-keys');
+module.exports = require('../../modules/_core').Reflect.getOwnMetadataKeys;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/index.js	(date 499162500000)
@@ -0,0 +1,24 @@
+require('../../modules/es6.reflect.apply');
+require('../../modules/es6.reflect.construct');
+require('../../modules/es6.reflect.define-property');
+require('../../modules/es6.reflect.delete-property');
+require('../../modules/es6.reflect.enumerate');
+require('../../modules/es6.reflect.get');
+require('../../modules/es6.reflect.get-own-property-descriptor');
+require('../../modules/es6.reflect.get-prototype-of');
+require('../../modules/es6.reflect.has');
+require('../../modules/es6.reflect.is-extensible');
+require('../../modules/es6.reflect.own-keys');
+require('../../modules/es6.reflect.prevent-extensions');
+require('../../modules/es6.reflect.set');
+require('../../modules/es6.reflect.set-prototype-of');
+require('../../modules/es7.reflect.define-metadata');
+require('../../modules/es7.reflect.delete-metadata');
+require('../../modules/es7.reflect.get-metadata');
+require('../../modules/es7.reflect.get-metadata-keys');
+require('../../modules/es7.reflect.get-own-metadata');
+require('../../modules/es7.reflect.get-own-metadata-keys');
+require('../../modules/es7.reflect.has-metadata');
+require('../../modules/es7.reflect.has-own-metadata');
+require('../../modules/es7.reflect.metadata');
+module.exports = require('../../modules/_core').Reflect;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/is-extensible.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/is-extensible.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/is-extensible.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.is-extensible');
+module.exports = require('../../modules/_core').Reflect.isExtensible;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-property-descriptor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-property-descriptor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-own-property-descriptor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.get-own-property-descriptor');
+module.exports = require('../../modules/_core').Reflect.getOwnPropertyDescriptor;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.get');
+module.exports = require('../../modules/_core').Reflect.get;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/define-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/define-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/define-property.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.define-property');
+module.exports = require('../../modules/_core').Reflect.defineProperty;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/prevent-extensions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/prevent-extensions.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/prevent-extensions.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.prevent-extensions');
+module.exports = require('../../modules/_core').Reflect.preventExtensions;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.get-metadata');
+module.exports = require('../../modules/_core').Reflect.getMetadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/get-prototype-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.get-prototype-of');
+module.exports = require('../../modules/_core').Reflect.getPrototypeOf;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/has.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.has');
+module.exports = require('../../modules/_core').Reflect.has;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/part.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/part.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/part.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.function.part');
+module.exports = require('../../modules/_core').Function.part;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/bind.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/bind.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/bind.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.function.bind');
+module.exports = require('../../../modules/_entry-virtual')('Function').bind;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/has-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/has-instance.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/has-instance.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.function.has-instance');
+module.exports = Function[require('../../modules/_wks')('hasInstance')];
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/name.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/name.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/name.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('../../modules/es6.function.name');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/index.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.function.bind');
+require('../../modules/es6.function.name');
+require('../../modules/es6.function.has-instance');
+require('../../modules/core.function.part');
+module.exports = require('../../modules/_core').Function;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/delete-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/delete-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/reflect/delete-metadata.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.reflect.delete-metadata');
+module.exports = require('../../modules/_core').Reflect.deleteMetadata;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/bind.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/bind.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/bind.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.function.bind');
+module.exports = require('../../modules/_core').Function.bind;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/of.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.weak-set');
+require('../../modules/es7.weak-set.of');
+var $WeakSet = require('../../modules/_core').WeakSet;
+var $of = $WeakSet.of;
+module.exports = function of() {
+  return $of.apply(typeof this === 'function' ? this : $WeakSet, arguments);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/from.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.weak-set');
+require('../../modules/es7.weak-set.from');
+var $WeakSet = require('../../modules/_core').WeakSet;
+var $from = $WeakSet.from;
+module.exports = function from(source, mapFn, thisArg) {
+  return $from.call(typeof this === 'function' ? this : $WeakSet, source, mapFn, thisArg);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/from.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.weak-map');
+require('../../modules/es7.weak-map.from');
+var $WeakMap = require('../../modules/_core').WeakMap;
+var $from = $WeakMap.from;
+module.exports = function from(source, mapFn, thisArg) {
+  return $from.call(typeof this === 'function' ? this : $WeakMap, source, mapFn, thisArg);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-set/index.js	(date 499162500000)
@@ -0,0 +1,6 @@
+require('../../modules/es6.object.to-string');
+require('../../modules/web.dom.iterable');
+require('../../modules/es6.weak-set');
+require('../../modules/es7.weak-set.of');
+require('../../modules/es7.weak-set.from');
+module.exports = require('../../modules/_core').WeakSet;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/index.js	(date 499162500000)
@@ -0,0 +1,6 @@
+require('../../modules/es6.object.to-string');
+require('../../modules/web.dom.iterable');
+require('../../modules/es6.weak-map');
+require('../../modules/es7.weak-map.of');
+require('../../modules/es7.weak-map.from');
+module.exports = require('../../modules/_core').WeakMap;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/weak-map/of.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.weak-map');
+require('../../modules/es7.weak-map.of');
+var $WeakMap = require('../../modules/_core').WeakMap;
+var $of = $WeakMap.of;
+module.exports = function of() {
+  return $of.apply(typeof this === 'function' ? this : $WeakMap, arguments);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/index.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../../modules/es6.function.bind');
+require('../../../modules/core.function.part');
+module.exports = require('../../../modules/_entry-virtual')('Function');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/part.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/part.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/function/virtual/part.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/core.function.part');
+module.exports = require('../../../modules/_entry-virtual')('Function').part;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/function.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/function.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/function.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es6.function.bind');
+require('../modules/es6.function.name');
+require('../modules/es6.function.has-instance');
+module.exports = require('../modules/_core').Function;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/weak-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/weak-map.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.array.iterator');
+require('../modules/es6.weak-map');
+module.exports = require('../modules/_core').WeakMap;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/symbol.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/symbol.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/symbol.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/es6.symbol');
+require('../modules/es6.object.to-string');
+module.exports = require('../modules/_core').Symbol;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/weak-set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/weak-set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/weak-set.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es6.object.to-string');
+require('../modules/web.dom.iterable');
+require('../modules/es6.weak-set');
+module.exports = require('../modules/_core').WeakSet;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es5/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es5/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es5/index.js	(date 499162500000)
@@ -0,0 +1,37 @@
+require('../modules/es6.object.create');
+require('../modules/es6.object.define-property');
+require('../modules/es6.object.define-properties');
+require('../modules/es6.object.get-own-property-descriptor');
+require('../modules/es6.object.get-prototype-of');
+require('../modules/es6.object.keys');
+require('../modules/es6.object.get-own-property-names');
+require('../modules/es6.object.freeze');
+require('../modules/es6.object.seal');
+require('../modules/es6.object.prevent-extensions');
+require('../modules/es6.object.is-frozen');
+require('../modules/es6.object.is-sealed');
+require('../modules/es6.object.is-extensible');
+require('../modules/es6.function.bind');
+require('../modules/es6.array.is-array');
+require('../modules/es6.array.join');
+require('../modules/es6.array.slice');
+require('../modules/es6.array.sort');
+require('../modules/es6.array.for-each');
+require('../modules/es6.array.map');
+require('../modules/es6.array.filter');
+require('../modules/es6.array.some');
+require('../modules/es6.array.every');
+require('../modules/es6.array.reduce');
+require('../modules/es6.array.reduce-right');
+require('../modules/es6.array.index-of');
+require('../modules/es6.array.last-index-of');
+require('../modules/es6.number.to-fixed');
+require('../modules/es6.number.to-precision');
+require('../modules/es6.date.now');
+require('../modules/es6.date.to-iso-string');
+require('../modules/es6.date.to-json');
+require('../modules/es6.parse-int');
+require('../modules/es6.parse-float');
+require('../modules/es6.string.trim');
+require('../modules/es6.regexp.to-string');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/parse-float.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es6.parse-float');
+module.exports = require('../modules/_core').parseFloat;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/dom-collections/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/dom-collections/iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/dom-collections/iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/web.dom.iterable');
+module.exports = require('../../modules/_core').Array.values;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/dom-collections/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/dom-collections/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/fn/dom-collections/index.js	(date 499162500000)
@@ -0,0 +1,8 @@
+require('../../modules/web.dom.iterable');
+var $iterators = require('../../modules/es6.array.iterator');
+module.exports = {
+  keys: $iterators.keys,
+  values: $iterators.values,
+  entries: $iterators.entries,
+  iterator: $iterators.values
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/map.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.map');
+module.exports = require('../modules/_core').Map;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/string.js	(date 499162500000)
@@ -0,0 +1,27 @@
+require('../modules/es6.string.from-code-point');
+require('../modules/es6.string.raw');
+require('../modules/es6.string.trim');
+require('../modules/es6.string.iterator');
+require('../modules/es6.string.code-point-at');
+require('../modules/es6.string.ends-with');
+require('../modules/es6.string.includes');
+require('../modules/es6.string.repeat');
+require('../modules/es6.string.starts-with');
+require('../modules/es6.string.anchor');
+require('../modules/es6.string.big');
+require('../modules/es6.string.blink');
+require('../modules/es6.string.bold');
+require('../modules/es6.string.fixed');
+require('../modules/es6.string.fontcolor');
+require('../modules/es6.string.fontsize');
+require('../modules/es6.string.italics');
+require('../modules/es6.string.link');
+require('../modules/es6.string.small');
+require('../modules/es6.string.strike');
+require('../modules/es6.string.sub');
+require('../modules/es6.string.sup');
+require('../modules/es6.regexp.match');
+require('../modules/es6.regexp.replace');
+require('../modules/es6.regexp.search');
+require('../modules/es6.regexp.split');
+module.exports = require('../modules/_core').String;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/array.js	(date 499162500000)
@@ -0,0 +1,23 @@
+require('../modules/es6.string.iterator');
+require('../modules/es6.array.is-array');
+require('../modules/es6.array.from');
+require('../modules/es6.array.of');
+require('../modules/es6.array.join');
+require('../modules/es6.array.slice');
+require('../modules/es6.array.sort');
+require('../modules/es6.array.for-each');
+require('../modules/es6.array.map');
+require('../modules/es6.array.filter');
+require('../modules/es6.array.some');
+require('../modules/es6.array.every');
+require('../modules/es6.array.reduce');
+require('../modules/es6.array.reduce-right');
+require('../modules/es6.array.index-of');
+require('../modules/es6.array.last-index-of');
+require('../modules/es6.array.copy-within');
+require('../modules/es6.array.fill');
+require('../modules/es6.array.find');
+require('../modules/es6.array.find-index');
+require('../modules/es6.array.species');
+require('../modules/es6.array.iterator');
+module.exports = require('../modules/_core').Array;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/index.js	(date 499162500000)
@@ -0,0 +1,139 @@
+require('../modules/es6.symbol');
+require('../modules/es6.object.create');
+require('../modules/es6.object.define-property');
+require('../modules/es6.object.define-properties');
+require('../modules/es6.object.get-own-property-descriptor');
+require('../modules/es6.object.get-prototype-of');
+require('../modules/es6.object.keys');
+require('../modules/es6.object.get-own-property-names');
+require('../modules/es6.object.freeze');
+require('../modules/es6.object.seal');
+require('../modules/es6.object.prevent-extensions');
+require('../modules/es6.object.is-frozen');
+require('../modules/es6.object.is-sealed');
+require('../modules/es6.object.is-extensible');
+require('../modules/es6.object.assign');
+require('../modules/es6.object.is');
+require('../modules/es6.object.set-prototype-of');
+require('../modules/es6.object.to-string');
+require('../modules/es6.function.bind');
+require('../modules/es6.function.name');
+require('../modules/es6.function.has-instance');
+require('../modules/es6.parse-int');
+require('../modules/es6.parse-float');
+require('../modules/es6.number.constructor');
+require('../modules/es6.number.to-fixed');
+require('../modules/es6.number.to-precision');
+require('../modules/es6.number.epsilon');
+require('../modules/es6.number.is-finite');
+require('../modules/es6.number.is-integer');
+require('../modules/es6.number.is-nan');
+require('../modules/es6.number.is-safe-integer');
+require('../modules/es6.number.max-safe-integer');
+require('../modules/es6.number.min-safe-integer');
+require('../modules/es6.number.parse-float');
+require('../modules/es6.number.parse-int');
+require('../modules/es6.math.acosh');
+require('../modules/es6.math.asinh');
+require('../modules/es6.math.atanh');
+require('../modules/es6.math.cbrt');
+require('../modules/es6.math.clz32');
+require('../modules/es6.math.cosh');
+require('../modules/es6.math.expm1');
+require('../modules/es6.math.fround');
+require('../modules/es6.math.hypot');
+require('../modules/es6.math.imul');
+require('../modules/es6.math.log10');
+require('../modules/es6.math.log1p');
+require('../modules/es6.math.log2');
+require('../modules/es6.math.sign');
+require('../modules/es6.math.sinh');
+require('../modules/es6.math.tanh');
+require('../modules/es6.math.trunc');
+require('../modules/es6.string.from-code-point');
+require('../modules/es6.string.raw');
+require('../modules/es6.string.trim');
+require('../modules/es6.string.iterator');
+require('../modules/es6.string.code-point-at');
+require('../modules/es6.string.ends-with');
+require('../modules/es6.string.includes');
+require('../modules/es6.string.repeat');
+require('../modules/es6.string.starts-with');
+require('../modules/es6.string.anchor');
+require('../modules/es6.string.big');
+require('../modules/es6.string.blink');
+require('../modules/es6.string.bold');
+require('../modules/es6.string.fixed');
+require('../modules/es6.string.fontcolor');
+require('../modules/es6.string.fontsize');
+require('../modules/es6.string.italics');
+require('../modules/es6.string.link');
+require('../modules/es6.string.small');
+require('../modules/es6.string.strike');
+require('../modules/es6.string.sub');
+require('../modules/es6.string.sup');
+require('../modules/es6.date.now');
+require('../modules/es6.date.to-json');
+require('../modules/es6.date.to-iso-string');
+require('../modules/es6.date.to-string');
+require('../modules/es6.date.to-primitive');
+require('../modules/es6.array.is-array');
+require('../modules/es6.array.from');
+require('../modules/es6.array.of');
+require('../modules/es6.array.join');
+require('../modules/es6.array.slice');
+require('../modules/es6.array.sort');
+require('../modules/es6.array.for-each');
+require('../modules/es6.array.map');
+require('../modules/es6.array.filter');
+require('../modules/es6.array.some');
+require('../modules/es6.array.every');
+require('../modules/es6.array.reduce');
+require('../modules/es6.array.reduce-right');
+require('../modules/es6.array.index-of');
+require('../modules/es6.array.last-index-of');
+require('../modules/es6.array.copy-within');
+require('../modules/es6.array.fill');
+require('../modules/es6.array.find');
+require('../modules/es6.array.find-index');
+require('../modules/es6.array.species');
+require('../modules/es6.array.iterator');
+require('../modules/es6.regexp.constructor');
+require('../modules/es6.regexp.exec');
+require('../modules/es6.regexp.to-string');
+require('../modules/es6.regexp.flags');
+require('../modules/es6.regexp.match');
+require('../modules/es6.regexp.replace');
+require('../modules/es6.regexp.search');
+require('../modules/es6.regexp.split');
+require('../modules/es6.promise');
+require('../modules/es6.map');
+require('../modules/es6.set');
+require('../modules/es6.weak-map');
+require('../modules/es6.weak-set');
+require('../modules/es6.typed.array-buffer');
+require('../modules/es6.typed.data-view');
+require('../modules/es6.typed.int8-array');
+require('../modules/es6.typed.uint8-array');
+require('../modules/es6.typed.uint8-clamped-array');
+require('../modules/es6.typed.int16-array');
+require('../modules/es6.typed.uint16-array');
+require('../modules/es6.typed.int32-array');
+require('../modules/es6.typed.uint32-array');
+require('../modules/es6.typed.float32-array');
+require('../modules/es6.typed.float64-array');
+require('../modules/es6.reflect.apply');
+require('../modules/es6.reflect.construct');
+require('../modules/es6.reflect.define-property');
+require('../modules/es6.reflect.delete-property');
+require('../modules/es6.reflect.enumerate');
+require('../modules/es6.reflect.get');
+require('../modules/es6.reflect.get-own-property-descriptor');
+require('../modules/es6.reflect.get-prototype-of');
+require('../modules/es6.reflect.has');
+require('../modules/es6.reflect.is-extensible');
+require('../modules/es6.reflect.own-keys');
+require('../modules/es6.reflect.prevent-extensions');
+require('../modules/es6.reflect.set');
+require('../modules/es6.reflect.set-prototype-of');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/date.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/date.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/date.js	(date 499162500000)
@@ -0,0 +1,6 @@
+require('../modules/es6.date.now');
+require('../modules/es6.date.to-json');
+require('../modules/es6.date.to-iso-string');
+require('../modules/es6.date.to-string');
+require('../modules/es6.date.to-primitive');
+module.exports = Date;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/math.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/math.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/math.js	(date 499162500000)
@@ -0,0 +1,18 @@
+require('../modules/es6.math.acosh');
+require('../modules/es6.math.asinh');
+require('../modules/es6.math.atanh');
+require('../modules/es6.math.cbrt');
+require('../modules/es6.math.clz32');
+require('../modules/es6.math.cosh');
+require('../modules/es6.math.expm1');
+require('../modules/es6.math.fround');
+require('../modules/es6.math.hypot');
+require('../modules/es6.math.imul');
+require('../modules/es6.math.log10');
+require('../modules/es6.math.log1p');
+require('../modules/es6.math.log2');
+require('../modules/es6.math.sign');
+require('../modules/es6.math.sinh');
+require('../modules/es6.math.tanh');
+require('../modules/es6.math.trunc');
+module.exports = require('../modules/_core').Math;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/promise.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/promise.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/promise.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.promise');
+module.exports = require('../modules/_core').Promise;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/object.js	(date 499162500000)
@@ -0,0 +1,20 @@
+require('../modules/es6.symbol');
+require('../modules/es6.object.create');
+require('../modules/es6.object.define-property');
+require('../modules/es6.object.define-properties');
+require('../modules/es6.object.get-own-property-descriptor');
+require('../modules/es6.object.get-prototype-of');
+require('../modules/es6.object.keys');
+require('../modules/es6.object.get-own-property-names');
+require('../modules/es6.object.freeze');
+require('../modules/es6.object.seal');
+require('../modules/es6.object.prevent-extensions');
+require('../modules/es6.object.is-frozen');
+require('../modules/es6.object.is-sealed');
+require('../modules/es6.object.is-extensible');
+require('../modules/es6.object.assign');
+require('../modules/es6.object.is');
+require('../modules/es6.object.set-prototype-of');
+require('../modules/es6.object.to-string');
+
+module.exports = require('../modules/_core').Object;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/symbol.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/symbol.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/symbol.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/es7.symbol.async-iterator');
+require('../modules/es7.symbol.observable');
+module.exports = require('../modules/_core').Symbol;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/system.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/system.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/system.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es7.system.global');
+module.exports = require('../modules/_core').System;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/number.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/number.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/number.js	(date 499162500000)
@@ -0,0 +1,13 @@
+require('../modules/es6.number.constructor');
+require('../modules/es6.number.to-fixed');
+require('../modules/es6.number.to-precision');
+require('../modules/es6.number.epsilon');
+require('../modules/es6.number.is-finite');
+require('../modules/es6.number.is-integer');
+require('../modules/es6.number.is-nan');
+require('../modules/es6.number.is-safe-integer');
+require('../modules/es6.number.max-safe-integer');
+require('../modules/es6.number.min-safe-integer');
+require('../modules/es6.number.parse-float');
+require('../modules/es6.number.parse-int');
+module.exports = require('../modules/_core').Number;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/typed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/typed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/typed.js	(date 499162500000)
@@ -0,0 +1,13 @@
+require('../modules/es6.typed.array-buffer');
+require('../modules/es6.typed.data-view');
+require('../modules/es6.typed.int8-array');
+require('../modules/es6.typed.uint8-array');
+require('../modules/es6.typed.uint8-clamped-array');
+require('../modules/es6.typed.int16-array');
+require('../modules/es6.typed.uint16-array');
+require('../modules/es6.typed.int32-array');
+require('../modules/es6.typed.uint32-array');
+require('../modules/es6.typed.float32-array');
+require('../modules/es6.typed.float64-array');
+require('../modules/es6.object.to-string');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/reflect.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/reflect.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/reflect.js	(date 499162500000)
@@ -0,0 +1,15 @@
+require('../modules/es6.reflect.apply');
+require('../modules/es6.reflect.construct');
+require('../modules/es6.reflect.define-property');
+require('../modules/es6.reflect.delete-property');
+require('../modules/es6.reflect.enumerate');
+require('../modules/es6.reflect.get');
+require('../modules/es6.reflect.get-own-property-descriptor');
+require('../modules/es6.reflect.get-prototype-of');
+require('../modules/es6.reflect.has');
+require('../modules/es6.reflect.is-extensible');
+require('../modules/es6.reflect.own-keys');
+require('../modules/es6.reflect.prevent-extensions');
+require('../modules/es6.reflect.set');
+require('../modules/es6.reflect.set-prototype-of');
+module.exports = require('../modules/_core').Reflect;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/set.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.set');
+module.exports = require('../modules/_core').Set;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/parse-int.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es6.parse-int');
+module.exports = require('../modules/_core').parseInt;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/regexp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/regexp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es6/regexp.js	(date 499162500000)
@@ -0,0 +1,9 @@
+require('../modules/es6.regexp.constructor');
+require('../modules/es6.regexp.exec');
+require('../modules/es6.regexp.to-string');
+require('../modules/es6.regexp.flags');
+require('../modules/es6.regexp.match');
+require('../modules/es6.regexp.replace');
+require('../modules/es6.regexp.search');
+require('../modules/es6.regexp.split');
+module.exports = require('../modules/_core').RegExp;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/array.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es7.array.includes');
+require('../modules/es7.array.flat-map');
+require('../modules/es7.array.flatten');
+module.exports = require('../modules/_core').Array;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/index.js	(date 499162500000)
@@ -0,0 +1,56 @@
+require('../modules/es7.array.includes');
+require('../modules/es7.array.flat-map');
+require('../modules/es7.array.flatten');
+require('../modules/es7.string.at');
+require('../modules/es7.string.pad-start');
+require('../modules/es7.string.pad-end');
+require('../modules/es7.string.trim-left');
+require('../modules/es7.string.trim-right');
+require('../modules/es7.string.match-all');
+require('../modules/es7.symbol.async-iterator');
+require('../modules/es7.symbol.observable');
+require('../modules/es7.object.get-own-property-descriptors');
+require('../modules/es7.object.values');
+require('../modules/es7.object.entries');
+require('../modules/es7.object.define-getter');
+require('../modules/es7.object.define-setter');
+require('../modules/es7.object.lookup-getter');
+require('../modules/es7.object.lookup-setter');
+require('../modules/es7.map.to-json');
+require('../modules/es7.set.to-json');
+require('../modules/es7.map.of');
+require('../modules/es7.set.of');
+require('../modules/es7.weak-map.of');
+require('../modules/es7.weak-set.of');
+require('../modules/es7.map.from');
+require('../modules/es7.set.from');
+require('../modules/es7.weak-map.from');
+require('../modules/es7.weak-set.from');
+require('../modules/es7.global');
+require('../modules/es7.system.global');
+require('../modules/es7.error.is-error');
+require('../modules/es7.math.clamp');
+require('../modules/es7.math.deg-per-rad');
+require('../modules/es7.math.degrees');
+require('../modules/es7.math.fscale');
+require('../modules/es7.math.iaddh');
+require('../modules/es7.math.isubh');
+require('../modules/es7.math.imulh');
+require('../modules/es7.math.rad-per-deg');
+require('../modules/es7.math.radians');
+require('../modules/es7.math.scale');
+require('../modules/es7.math.umulh');
+require('../modules/es7.math.signbit');
+require('../modules/es7.promise.try');
+require('../modules/es7.reflect.define-metadata');
+require('../modules/es7.reflect.delete-metadata');
+require('../modules/es7.reflect.get-metadata');
+require('../modules/es7.reflect.get-metadata-keys');
+require('../modules/es7.reflect.get-own-metadata');
+require('../modules/es7.reflect.get-own-metadata-keys');
+require('../modules/es7.reflect.has-metadata');
+require('../modules/es7.reflect.has-own-metadata');
+require('../modules/es7.reflect.metadata');
+require('../modules/es7.asap');
+require('../modules/es7.observable');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/object.js	(date 499162500000)
@@ -0,0 +1,8 @@
+require('../modules/es7.object.get-own-property-descriptors');
+require('../modules/es7.object.values');
+require('../modules/es7.object.entries');
+require('../modules/es7.object.define-getter');
+require('../modules/es7.object.define-setter');
+require('../modules/es7.object.lookup-getter');
+require('../modules/es7.object.lookup-setter');
+module.exports = require('../modules/_core').Object;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/math.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/math.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/math.js	(date 499162500000)
@@ -0,0 +1,13 @@
+require('../modules/es7.math.clamp');
+require('../modules/es7.math.deg-per-rad');
+require('../modules/es7.math.degrees');
+require('../modules/es7.math.fscale');
+require('../modules/es7.math.iaddh');
+require('../modules/es7.math.isubh');
+require('../modules/es7.math.imulh');
+require('../modules/es7.math.rad-per-deg');
+require('../modules/es7.math.radians');
+require('../modules/es7.math.scale');
+require('../modules/es7.math.umulh');
+require('../modules/es7.math.signbit');
+module.exports = require('../modules/_core').Math;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/promise.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/promise.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/promise.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/es7.promise.finally');
+require('../modules/es7.promise.try');
+module.exports = require('../modules/_core').Promise;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/global.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es7.global');
+module.exports = require('../modules/_core').global;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/weak-set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/weak-set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/weak-set.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/es7.weak-set.of');
+require('../modules/es7.weak-set.from');
+module.exports = require('../modules/_core').WeakSet;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/weak-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/weak-map.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/es7.weak-map.of');
+require('../modules/es7.weak-map.from');
+module.exports = require('../modules/_core').WeakMap;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/error.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/error.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/error.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es7.error.is-error');
+module.exports = require('../modules/_core').Error;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/timers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/timers.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/timers.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.timers');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/observable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/observable.js	(date 499162500000)
@@ -0,0 +1,7 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.promise');
+require('../modules/es7.symbol.observable');
+require('../modules/es7.observable');
+module.exports = require('../modules/_core').Observable;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/set.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es7.set.to-json');
+require('../modules/es7.set.of');
+require('../modules/es7.set.from');
+module.exports = require('../modules/_core').Set;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/asap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/asap.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/asap.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es7.asap');
+module.exports = require('../modules/_core').asap;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/reflect.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/reflect.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/reflect.js	(date 499162500000)
@@ -0,0 +1,10 @@
+require('../modules/es7.reflect.define-metadata');
+require('../modules/es7.reflect.delete-metadata');
+require('../modules/es7.reflect.get-metadata');
+require('../modules/es7.reflect.get-metadata-keys');
+require('../modules/es7.reflect.get-own-metadata');
+require('../modules/es7.reflect.get-own-metadata-keys');
+require('../modules/es7.reflect.has-metadata');
+require('../modules/es7.reflect.has-own-metadata');
+require('../modules/es7.reflect.metadata');
+module.exports = require('../modules/_core').Reflect;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/map.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es7.map.to-json');
+require('../modules/es7.map.of');
+require('../modules/es7.map.from');
+module.exports = require('../modules/_core').Map;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/es7/string.js	(date 499162500000)
@@ -0,0 +1,7 @@
+require('../modules/es7.string.at');
+require('../modules/es7.string.pad-start');
+require('../modules/es7.string.pad-end');
+require('../modules/es7.string.trim-left');
+require('../modules/es7.string.trim-right');
+require('../modules/es7.string.match-all');
+module.exports = require('../modules/_core').String;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/_.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/_.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/_.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.function.part');
+module.exports = require('../modules/_core')._;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/regexp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/regexp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/regexp.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.regexp.escape');
+module.exports = require('../modules/_core').RegExp;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/index.js	(date 499162500000)
@@ -0,0 +1,15 @@
+require('../modules/core.dict');
+require('../modules/core.get-iterator-method');
+require('../modules/core.get-iterator');
+require('../modules/core.is-iterable');
+require('../modules/core.delay');
+require('../modules/core.function.part');
+require('../modules/core.object.is-object');
+require('../modules/core.object.classof');
+require('../modules/core.object.define');
+require('../modules/core.object.make');
+require('../modules/core.number.iterator');
+require('../modules/core.regexp.escape');
+require('../modules/core.string.escape-html');
+require('../modules/core.string.unescape-html');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/string.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/core.string.escape-html');
+require('../modules/core.string.unescape-html');
+module.exports = require('../modules/_core').String;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/immediate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/immediate.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/immediate.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.immediate');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/delay.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/delay.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/delay.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.delay');
+module.exports = require('../modules/_core').delay;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/index.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/web.timers');
+require('../modules/web.immediate');
+require('../modules/web.dom.iterable');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/dom-collections.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/dom-collections.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/web/dom-collections.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.dom.iterable');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/index.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./pre');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/2.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/2.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/2.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es7.string.trim-left');
+require('../modules/es7.string.trim-right');
+require('../modules/es7.symbol.async-iterator');
+module.exports = require('./3');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/0.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/0.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/0.js	(date 499162500000)
@@ -0,0 +1,10 @@
+require('../modules/es7.string.at');
+require('../modules/es7.map.to-json');
+require('../modules/es7.set.to-json');
+require('../modules/es7.error.is-error');
+require('../modules/es7.math.iaddh');
+require('../modules/es7.math.isubh');
+require('../modules/es7.math.imulh');
+require('../modules/es7.math.umulh');
+require('../modules/es7.asap');
+module.exports = require('./1');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/1.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/1.js	(date 499162500000)
@@ -0,0 +1,23 @@
+require('../modules/es7.map.of');
+require('../modules/es7.set.of');
+require('../modules/es7.weak-map.of');
+require('../modules/es7.weak-set.of');
+require('../modules/es7.map.from');
+require('../modules/es7.set.from');
+require('../modules/es7.weak-map.from');
+require('../modules/es7.weak-set.from');
+require('../modules/es7.math.clamp');
+require('../modules/es7.math.deg-per-rad');
+require('../modules/es7.math.degrees');
+require('../modules/es7.math.fscale');
+require('../modules/es7.math.rad-per-deg');
+require('../modules/es7.math.radians');
+require('../modules/es7.math.scale');
+require('../modules/es7.math.signbit');
+require('../modules/es7.promise.try');
+require('../modules/es7.string.match-all');
+require('../modules/es7.symbol.observable');
+require('../modules/es7.observable');
+require('../modules/es7.array.flat-map');
+require('../modules/es7.array.flatten');
+module.exports = require('./2');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/number.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/number.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/number.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.number.iterator');
+module.exports = require('../modules/_core').Number;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/object.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../modules/core.object.is-object');
+require('../modules/core.object.classof');
+require('../modules/core.object.define');
+require('../modules/core.object.make');
+module.exports = require('../modules/_core').Object;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/dict.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/dict.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/dict.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.dict');
+module.exports = require('../modules/_core').Dict;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/function.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/function.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/core/function.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.function.part');
+module.exports = require('../modules/_core').Function;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_wks-define')('observable');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_flatten-into-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_flatten-into-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_flatten-into-array.js	(date 499162500000)
@@ -0,0 +1,39 @@
+'use strict';
+// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
+var isArray = require('./_is-array');
+var isObject = require('./_is-object');
+var toLength = require('./_to-length');
+var ctx = require('./_ctx');
+var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');
+
+function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
+  var targetIndex = start;
+  var sourceIndex = 0;
+  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
+  var element, spreadable;
+
+  while (sourceIndex < sourceLen) {
+    if (sourceIndex in source) {
+      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
+
+      spreadable = false;
+      if (isObject(element)) {
+        spreadable = element[IS_CONCAT_SPREADABLE];
+        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
+      }
+
+      if (spreadable && depth > 0) {
+        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
+      } else {
+        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
+        target[targetIndex] = element;
+      }
+
+      targetIndex++;
+    }
+    sourceIndex++;
+  }
+  return targetIndex;
+}
+
+module.exports = flattenIntoArray;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.parse-float.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseFloat = require('./_parse-float');
+// 20.1.2.12 Number.parseFloat(string)
+$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js	(date 499162500000)
@@ -0,0 +1,25 @@
+// Works with __proto__ only. Old v8 can't work with null proto objects.
+/* eslint-disable no-proto */
+var isObject = require('./_is-object');
+var anObject = require('./_an-object');
+var check = function (O, proto) {
+  anObject(O);
+  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
+};
+module.exports = {
+  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
+    function (test, buggy, set) {
+      try {
+        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
+        set(test, []);
+        buggy = !(test instanceof Array);
+      } catch (e) { buggy = true; }
+      return function setPrototypeOf(O, proto) {
+        check(O, proto);
+        if (buggy) O.__proto__ = proto;
+        else set(O, proto);
+        return O;
+      };
+    }({}, false) : undefined),
+  check: check
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/4.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/4.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/4.js	(date 499162500000)
@@ -0,0 +1,11 @@
+require('../modules/es7.object.define-getter');
+require('../modules/es7.object.define-setter');
+require('../modules/es7.object.lookup-getter');
+require('../modules/es7.object.lookup-setter');
+require('../modules/es7.object.values');
+require('../modules/es7.object.entries');
+require('../modules/es7.object.get-own-property-descriptors');
+require('../modules/es7.array.includes');
+require('../modules/es7.string.pad-start');
+require('../modules/es7.string.pad-end');
+module.exports = require('../modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js	(date 499162500000)
@@ -0,0 +1,3 @@
+module.exports = function (it) {
+  return typeof it === 'object' ? it !== null : typeof it === 'function';
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/3.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/3.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/3.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../modules/es7.global');
+require('../modules/es7.system.global');
+require('../modules/es7.promise.finally');
+module.exports = require('./4');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/pre.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/pre.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/stage/pre.js	(date 499162500000)
@@ -0,0 +1,10 @@
+require('../modules/es7.reflect.define-metadata');
+require('../modules/es7.reflect.delete-metadata');
+require('../modules/es7.reflect.get-metadata');
+require('../modules/es7.reflect.get-metadata-keys');
+require('../modules/es7.reflect.get-own-metadata');
+require('../modules/es7.reflect.get-own-metadata-keys');
+require('../modules/es7.reflect.has-metadata');
+require('../modules/es7.reflect.has-own-metadata');
+require('../modules/es7.reflect.metadata');
+module.exports = require('./0');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 19.1.3.1 Object.assign(target, source)
+var $export = require('./_export');
+
+$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-index.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// https://tc39.github.io/ecma262/#sec-toindex
+var toInteger = require('./_to-integer');
+var toLength = require('./_to-length');
+module.exports = function (it) {
+  if (it === undefined) return 0;
+  var number = toInteger(it);
+  var length = toLength(number);
+  if (number !== length) throw RangeError('Wrong length!');
+  return length;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.enumerate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.enumerate.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.enumerate.js	(date 499162500000)
@@ -0,0 +1,26 @@
+'use strict';
+// 26.1.5 Reflect.enumerate(target)
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var Enumerate = function (iterated) {
+  this._t = anObject(iterated); // target
+  this._i = 0;                  // next index
+  var keys = this._k = [];      // keys
+  var key;
+  for (key in iterated) keys.push(key);
+};
+require('./_iter-create')(Enumerate, 'Object', function () {
+  var that = this;
+  var keys = that._k;
+  var key;
+  do {
+    if (that._i >= keys.length) return { value: undefined, done: true };
+  } while (!((key = keys[that._i++]) in that._t));
+  return { value: key, done: false };
+});
+
+$export($export.S, 'Reflect', {
+  enumerate: function enumerate(target) {
+    return new Enumerate(target);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.string.unescape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.string.unescape-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.string.unescape-html.js	(date 499162500000)
@@ -0,0 +1,11 @@
+'use strict';
+var $export = require('./_export');
+var $re = require('./_replacer')(/&(?:amp|lt|gt|quot|apos);/g, {
+  '&amp;': '&',
+  '&lt;': '<',
+  '&gt;': '>',
+  '&quot;': '"',
+  '&apos;': "'"
+});
+
+$export($export.P + $export.F, 'String', { unescapeHTML: function unescapeHTML() { return $re(this); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_user-agent.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_user-agent.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_user-agent.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var global = require('./_global');
+var navigator = global.navigator;
+
+module.exports = navigator && navigator.userAgent || '';
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int32-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int32-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Int32', 4, function (init) {
+  return function Int32Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.define-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.define-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.define-property.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
+var dP = require('./_object-dp');
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var toPrimitive = require('./_to-primitive');
+
+// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
+$export($export.S + $export.F * require('./_fails')(function () {
+  // eslint-disable-next-line no-undef
+  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
+}), 'Reflect', {
+  defineProperty: function defineProperty(target, propertyKey, attributes) {
+    anObject(target);
+    propertyKey = toPrimitive(propertyKey, true);
+    anObject(attributes);
+    try {
+      dP.f(target, propertyKey, attributes);
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js	(date 499162500000)
@@ -0,0 +1,11 @@
+var store = require('./_shared')('wks');
+var uid = require('./_uid');
+var Symbol = require('./_global').Symbol;
+var USE_SYMBOL = typeof Symbol == 'function';
+
+var $exports = module.exports = function (name) {
+  return store[name] || (store[name] =
+    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
+};
+
+$exports.store = store;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.italics.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.italics.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.italics.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.9 String.prototype.italics()
+require('./_string-html')('italics', function (createHTML) {
+  return function italics() {
+    return createHTML(this, 'i', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.some.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.some.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.some.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $some = require('./_array-methods')(3);
+
+$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
+  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
+  some: function some(callbackfn /* , thisArg */) {
+    return $some(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// all enumerable object keys, includes symbols
+var getKeys = require('./_object-keys');
+var gOPS = require('./_object-gops');
+var pIE = require('./_object-pie');
+module.exports = function (it) {
+  var result = getKeys(it);
+  var getSymbols = gOPS.f;
+  if (getSymbols) {
+    var symbols = getSymbols(it);
+    var isEnum = pIE.f;
+    var i = 0;
+    var key;
+    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
+  } return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.exec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.exec.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.exec.js	(date 499162500000)
@@ -0,0 +1,1 @@
+// empty
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.small.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.small.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.small.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.11 String.prototype.small()
+require('./_string-html')('small', function (createHTML) {
+  return function small() {
+    return createHTML(this, 'small', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_native-weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_native-weak-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_native-weak-map.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var nativeFunctionToString = require('./_function-to-string');
+var WeakMap = require('./_global').WeakMap;
+
+module.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-own-metadata-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-own-metadata-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-own-metadata-keys.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var ordinaryOwnMetadataKeys = metadata.keys;
+var toMetaKey = metadata.key;
+
+metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
+  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_microtask.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_microtask.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_microtask.js	(date 499162500000)
@@ -0,0 +1,69 @@
+var global = require('./_global');
+var macrotask = require('./_task').set;
+var Observer = global.MutationObserver || global.WebKitMutationObserver;
+var process = global.process;
+var Promise = global.Promise;
+var isNode = require('./_cof')(process) == 'process';
+
+module.exports = function () {
+  var head, last, notify;
+
+  var flush = function () {
+    var parent, fn;
+    if (isNode && (parent = process.domain)) parent.exit();
+    while (head) {
+      fn = head.fn;
+      head = head.next;
+      try {
+        fn();
+      } catch (e) {
+        if (head) notify();
+        else last = undefined;
+        throw e;
+      }
+    } last = undefined;
+    if (parent) parent.enter();
+  };
+
+  // Node.js
+  if (isNode) {
+    notify = function () {
+      process.nextTick(flush);
+    };
+  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
+  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
+    var toggle = true;
+    var node = document.createTextNode('');
+    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
+    notify = function () {
+      node.data = toggle = !toggle;
+    };
+  // environments with maybe non-completely correct, but existent Promise
+  } else if (Promise && Promise.resolve) {
+    // Promise.resolve without an argument throws an error in LG WebOS 2
+    var promise = Promise.resolve(undefined);
+    notify = function () {
+      promise.then(flush);
+    };
+  // for other environments - macrotask based on:
+  // - setImmediate
+  // - MessageChannel
+  // - window.postMessag
+  // - onreadystatechange
+  // - setTimeout
+  } else {
+    notify = function () {
+      // strange IE + webpack dev server bug - use .call(global)
+      macrotask.call(global, flush);
+    };
+  }
+
+  return function (fn) {
+    var task = { fn: fn, next: undefined };
+    if (last) last.next = task;
+    if (!head) {
+      head = task;
+      notify();
+    } last = task;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js	(date 499162500000)
@@ -0,0 +1,3 @@
+module.exports = !require('./_descriptors') && !require('./_fails')(function () {
+  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.define-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.define-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.define-metadata.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var toMetaKey = metadata.key;
+var ordinaryDefineOwnMetadata = metadata.set;
+
+metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
+  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js	(date 499162500000)
@@ -0,0 +1,62 @@
+var global = require('./_global');
+var core = require('./_core');
+var ctx = require('./_ctx');
+var hide = require('./_hide');
+var has = require('./_has');
+var PROTOTYPE = 'prototype';
+
+var $export = function (type, name, source) {
+  var IS_FORCED = type & $export.F;
+  var IS_GLOBAL = type & $export.G;
+  var IS_STATIC = type & $export.S;
+  var IS_PROTO = type & $export.P;
+  var IS_BIND = type & $export.B;
+  var IS_WRAP = type & $export.W;
+  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
+  var expProto = exports[PROTOTYPE];
+  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
+  var key, own, out;
+  if (IS_GLOBAL) source = name;
+  for (key in source) {
+    // contains in native
+    own = !IS_FORCED && target && target[key] !== undefined;
+    if (own && has(exports, key)) continue;
+    // export native or passed
+    out = own ? target[key] : source[key];
+    // prevent global pollution for namespaces
+    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
+    // bind timers to global for call from export context
+    : IS_BIND && own ? ctx(out, global)
+    // wrap global constructors for prevent change them in library
+    : IS_WRAP && target[key] == out ? (function (C) {
+      var F = function (a, b, c) {
+        if (this instanceof C) {
+          switch (arguments.length) {
+            case 0: return new C();
+            case 1: return new C(a);
+            case 2: return new C(a, b);
+          } return new C(a, b, c);
+        } return C.apply(this, arguments);
+      };
+      F[PROTOTYPE] = C[PROTOTYPE];
+      return F;
+    // make static versions for prototype methods
+    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
+    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
+    if (IS_PROTO) {
+      (exports.virtual || (exports.virtual = {}))[key] = out;
+      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
+      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
+    }
+  }
+};
+// type bitmap
+$export.F = 1;   // forced
+$export.G = 2;   // global
+$export.S = 4;   // static
+$export.P = 8;   // proto
+$export.B = 16;  // bind
+$export.W = 32;  // wrap
+$export.U = 64;  // safe
+$export.R = 128; // real proto method for `library`
+module.exports = $export;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.2.2 IsArray(argument)
+var cof = require('./_cof');
+module.exports = Array.isArray || function isArray(arg) {
+  return cof(arg) == 'Array';
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
+require('./_set-collection-from')('Map');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.from.js	(date 499162500000)
@@ -0,0 +1,37 @@
+'use strict';
+var ctx = require('./_ctx');
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var call = require('./_iter-call');
+var isArrayIter = require('./_is-array-iter');
+var toLength = require('./_to-length');
+var createProperty = require('./_create-property');
+var getIterFn = require('./core.get-iterator-method');
+
+$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
+  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
+  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
+    var O = toObject(arrayLike);
+    var C = typeof this == 'function' ? this : Array;
+    var aLen = arguments.length;
+    var mapfn = aLen > 1 ? arguments[1] : undefined;
+    var mapping = mapfn !== undefined;
+    var index = 0;
+    var iterFn = getIterFn(O);
+    var length, result, step, iterator;
+    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
+    // if object isn't iterable or it's array with default iterator - use simple case
+    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
+      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
+        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
+      }
+    } else {
+      length = toLength(O.length);
+      for (result = new C(length); length > index; index++) {
+        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
+      }
+    }
+    result.length = index;
+    return result;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js	(date 499162500000)
@@ -0,0 +1,1 @@
+exports.f = require('./_wks');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-extensible.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-extensible.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-extensible.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 19.1.2.11 Object.isExtensible(O)
+var isObject = require('./_is-object');
+
+require('./_object-sap')('isExtensible', function ($isExtensible) {
+  return function isExtensible(it) {
+    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.weak-set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.weak-set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.weak-set.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+var weak = require('./_collection-weak');
+var validate = require('./_validate-collection');
+var WEAK_SET = 'WeakSet';
+
+// 23.4 WeakSet Objects
+require('./_collection')(WEAK_SET, function (get) {
+  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
+}, {
+  // 23.4.3.1 WeakSet.prototype.add(value)
+  add: function add(value) {
+    return weak.def(validate(this, WEAK_SET), value, true);
+  }
+}, weak, false, true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.search.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.search.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
+var toIObject = require('./_to-iobject');
+var $getOwnPropertyDescriptor = require('./_object-gopd').f;
+
+require('./_object-sap')('getOwnPropertyDescriptor', function () {
+  return function getOwnPropertyDescriptor(it, key) {
+    return $getOwnPropertyDescriptor(toIObject(it), key);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.sub.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.sub.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.sub.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.13 String.prototype.sub()
+require('./_string-html')('sub', function (createHTML) {
+  return function sub() {
+    return createHTML(this, 'sub', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.match-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.match-all.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.match-all.js	(date 499162500000)
@@ -0,0 +1,30 @@
+'use strict';
+// https://tc39.github.io/String.prototype.matchAll/
+var $export = require('./_export');
+var defined = require('./_defined');
+var toLength = require('./_to-length');
+var isRegExp = require('./_is-regexp');
+var getFlags = require('./_flags');
+var RegExpProto = RegExp.prototype;
+
+var $RegExpStringIterator = function (regexp, string) {
+  this._r = regexp;
+  this._s = string;
+};
+
+require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {
+  var match = this._r.exec(this._s);
+  return { value: match, done: match === null };
+});
+
+$export($export.P, 'String', {
+  matchAll: function matchAll(regexp) {
+    defined(this);
+    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
+    var S = String(this);
+    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
+    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
+    rx.lastIndex = toLength(regexp.lastIndex);
+    return new $RegExpStringIterator(rx, S);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_entry-virtual.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_entry-virtual.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_entry-virtual.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var core = require('./_core');
+module.exports = function (CONSTRUCTOR) {
+  var C = core[CONSTRUCTOR];
+  return (C.virtual || C.prototype);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-scale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-scale.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-scale.js	(date 499162500000)
@@ -0,0 +1,18 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
+  if (
+    arguments.length === 0
+      // eslint-disable-next-line no-self-compare
+      || x != x
+      // eslint-disable-next-line no-self-compare
+      || inLow != inLow
+      // eslint-disable-next-line no-self-compare
+      || inHigh != inHigh
+      // eslint-disable-next-line no-self-compare
+      || outLow != outLow
+      // eslint-disable-next-line no-self-compare
+      || outHigh != outHigh
+  ) return NaN;
+  if (x === Infinity || x === -Infinity) return x;
+  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_inherit-if-required.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_inherit-if-required.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_inherit-if-required.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var isObject = require('./_is-object');
+var setPrototypeOf = require('./_set-proto').set;
+module.exports = function (that, target, C) {
+  var S = target.constructor;
+  var P;
+  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
+    setPrototypeOf(that, P);
+  } return that;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-properties.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-properties.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-properties.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
+$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.parse-float.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseFloat = require('./_parse-float');
+// 18.2.4 parseFloat(string)
+$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.system.global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.system.global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.system.global.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/tc39/proposal-global
+var $export = require('./_export');
+
+$export($export.S, 'System', { global: require('./_global') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_promise-resolve.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var newPromiseCapability = require('./_new-promise-capability');
+
+module.exports = function (C, x) {
+  anObject(C);
+  if (isObject(x) && x.constructor === C) return x;
+  var promiseCapability = newPromiseCapability.f(C);
+  var resolve = promiseCapability.resolve;
+  resolve(x);
+  return promiseCapability.promise;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_metadata.js	(date 499162500000)
@@ -0,0 +1,51 @@
+var Map = require('./es6.map');
+var $export = require('./_export');
+var shared = require('./_shared')('metadata');
+var store = shared.store || (shared.store = new (require('./es6.weak-map'))());
+
+var getOrCreateMetadataMap = function (target, targetKey, create) {
+  var targetMetadata = store.get(target);
+  if (!targetMetadata) {
+    if (!create) return undefined;
+    store.set(target, targetMetadata = new Map());
+  }
+  var keyMetadata = targetMetadata.get(targetKey);
+  if (!keyMetadata) {
+    if (!create) return undefined;
+    targetMetadata.set(targetKey, keyMetadata = new Map());
+  } return keyMetadata;
+};
+var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
+  var metadataMap = getOrCreateMetadataMap(O, P, false);
+  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
+};
+var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
+  var metadataMap = getOrCreateMetadataMap(O, P, false);
+  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
+};
+var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
+  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
+};
+var ordinaryOwnMetadataKeys = function (target, targetKey) {
+  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
+  var keys = [];
+  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
+  return keys;
+};
+var toMetaKey = function (it) {
+  return it === undefined || typeof it == 'symbol' ? it : String(it);
+};
+var exp = function (O) {
+  $export($export.S, 'Reflect', O);
+};
+
+module.exports = {
+  store: store,
+  map: getOrCreateMetadataMap,
+  has: ordinaryHasOwnMetadata,
+  get: ordinaryGetOwnMetadata,
+  set: ordinaryDefineOwnMetadata,
+  keys: ordinaryOwnMetadataKeys,
+  key: toMetaKey,
+  exp: exp
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.iaddh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.iaddh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.iaddh.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  iaddh: function iaddh(x0, x1, y0, y1) {
+    var $x0 = x0 >>> 0;
+    var $x1 = x1 >>> 0;
+    var $y0 = y0 >>> 0;
+    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fontcolor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fontcolor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fontcolor.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.7 String.prototype.fontcolor(color)
+require('./_string-html')('fontcolor', function (createHTML) {
+  return function fontcolor(color) {
+    return createHTML(this, 'font', 'color', color);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.for-each.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.for-each.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.for-each.js	(date 499162500000)
@@ -0,0 +1,11 @@
+'use strict';
+var $export = require('./_export');
+var $forEach = require('./_array-methods')(0);
+var STRICT = require('./_strict-method')([].forEach, true);
+
+$export($export.P + $export.F * !STRICT, 'Array', {
+  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
+  forEach: function forEach(callbackfn /* , thisArg */) {
+    return $forEach(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_partial.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_partial.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_partial.js	(date 499162500000)
@@ -0,0 +1,25 @@
+'use strict';
+var path = require('./_path');
+var invoke = require('./_invoke');
+var aFunction = require('./_a-function');
+module.exports = function (/* ...pargs */) {
+  var fn = aFunction(this);
+  var length = arguments.length;
+  var pargs = new Array(length);
+  var i = 0;
+  var _ = path._;
+  var holder = false;
+  while (length > i) if ((pargs[i] = arguments[i++]) === _) holder = true;
+  return function (/* ...args */) {
+    var that = this;
+    var aLen = arguments.length;
+    var j = 0;
+    var k = 0;
+    var args;
+    if (!holder && !aLen) return invoke(fn, pargs, that);
+    args = pargs.slice();
+    if (holder) for (;length > j; j++) if (args[j] === _) args[j] = arguments[k++];
+    while (aLen > k) args.push(arguments[k++]);
+    return invoke(fn, args, that);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is.js	(date 499162500000)
@@ -0,0 +1,3 @@
+// 19.1.3.10 Object.is(value1, value2)
+var $export = require('./_export');
+$export($export.S, 'Object', { is: require('./_same-value') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.includes.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// 21.1.3.7 String.prototype.includes(searchString, position = 0)
+'use strict';
+var $export = require('./_export');
+var context = require('./_string-context');
+var INCLUDES = 'includes';
+
+$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
+  includes: function includes(searchString /* , position = 0 */) {
+    return !!~context(this, searchString, INCLUDES)
+      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.trim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.trim.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.trim.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// 21.1.3.25 String.prototype.trim()
+require('./_string-trim')('trim', function ($trim) {
+  return function trim() {
+    return $trim(this, 3);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.code-point-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.code-point-at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.code-point-at.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var $export = require('./_export');
+var $at = require('./_string-at')(false);
+$export($export.P, 'String', {
+  // 21.1.3.3 String.prototype.codePointAt(pos)
+  codePointAt: function codePointAt(pos) {
+    return $at(this, pos);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.anchor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.anchor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.anchor.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.2 String.prototype.anchor(name)
+require('./_string-html')('anchor', function (createHTML) {
+  return function anchor(name) {
+    return createHTML(this, 'a', 'name', name);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_species-constructor.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 7.3.20 SpeciesConstructor(O, defaultConstructor)
+var anObject = require('./_an-object');
+var aFunction = require('./_a-function');
+var SPECIES = require('./_wks')('species');
+module.exports = function (O, D) {
+  var C = anObject(O).constructor;
+  var S;
+  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fixed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fixed.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.6 String.prototype.fixed()
+require('./_string-html')('fixed', function (createHTML) {
+  return function fixed() {
+    return createHTML(this, 'tt', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.repeat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.repeat.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.repeat.js	(date 499162500000)
@@ -0,0 +1,6 @@
+var $export = require('./_export');
+
+$export($export.P, 'String', {
+  // 21.1.3.13 String.prototype.repeat(count)
+  repeat: require('./_string-repeat')
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log10.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log10.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log10.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.21 Math.log10(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  log10: function log10(x) {
+    return Math.log(x) * Math.LOG10E;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.raw.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.raw.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.raw.js	(date 499162500000)
@@ -0,0 +1,18 @@
+var $export = require('./_export');
+var toIObject = require('./_to-iobject');
+var toLength = require('./_to-length');
+
+$export($export.S, 'String', {
+  // 21.1.2.4 String.raw(callSite, ...substitutions)
+  raw: function raw(callSite) {
+    var tpl = toIObject(callSite.raw);
+    var len = toLength(tpl.length);
+    var aLen = arguments.length;
+    var res = [];
+    var i = 0;
+    while (len > i) {
+      res.push(String(tpl[i++]));
+      if (i < aLen) res.push(String(arguments[i]));
+    } return res.join('');
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// IE 8- don't enum bug keys
+module.exports = (
+  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
+).split(',');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = function () { /* empty */ };
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = true;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var hasOwnProperty = {}.hasOwnProperty;
+module.exports = function (it, key) {
+  return hasOwnProperty.call(it, key);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-frozen.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-frozen.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-frozen.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 19.1.2.12 Object.isFrozen(O)
+var isObject = require('./_is-object');
+
+require('./_object-sap')('isFrozen', function ($isFrozen) {
+  return function isFrozen(it) {
+    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+var create = require('./_object-create');
+var descriptor = require('./_property-desc');
+var setToStringTag = require('./_set-to-string-tag');
+var IteratorPrototype = {};
+
+// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
+require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });
+
+module.exports = function (Constructor, NAME, next) {
+  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
+  setToStringTag(Constructor, NAME + ' Iterator');
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-to-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-to-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-to-array.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var getKeys = require('./_object-keys');
+var toIObject = require('./_to-iobject');
+var isEnum = require('./_object-pie').f;
+module.exports = function (isEntries) {
+  return function (it) {
+    var O = toIObject(it);
+    var keys = getKeys(O);
+    var length = keys.length;
+    var i = 0;
+    var result = [];
+    var key;
+    while (length > i) if (isEnum.call(O, key = keys[i++])) {
+      result.push(isEntries ? [key, O[key]] : O[key]);
+    } return result;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-html.js	(date 499162500000)
@@ -0,0 +1,19 @@
+var $export = require('./_export');
+var fails = require('./_fails');
+var defined = require('./_defined');
+var quot = /"/g;
+// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
+var createHTML = function (string, tag, attribute, value) {
+  var S = String(defined(string));
+  var p1 = '<' + tag;
+  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
+  return p1 + '>' + S + '</' + tag + '>';
+};
+module.exports = function (NAME, exec) {
+  var O = {};
+  O[NAME] = exec(createHTML);
+  $export($export.P + $export.F * fails(function () {
+    var test = ''[NAME]('"');
+    return test !== test.toLowerCase() || test.split('"').length > 3;
+  }), 'String', O);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+// 25.4.1.5 NewPromiseCapability(C)
+var aFunction = require('./_a-function');
+
+function PromiseCapability(C) {
+  var resolve, reject;
+  this.promise = new C(function ($$resolve, $$reject) {
+    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
+    resolve = $$resolve;
+    reject = $$reject;
+  });
+  this.resolve = aFunction(resolve);
+  this.reject = aFunction(reject);
+}
+
+module.exports.f = function (C) {
+  return new PromiseCapability(C);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-iso-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-iso-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-iso-string.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
+var $export = require('./_export');
+var toISOString = require('./_date-to-iso-string');
+
+// PhantomJS / old WebKit has a broken implementations
+$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
+  toISOString: toISOString
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js	(date 499162500000)
@@ -0,0 +1,34 @@
+'use strict';
+// 19.1.2.1 Object.assign(target, source, ...)
+var getKeys = require('./_object-keys');
+var gOPS = require('./_object-gops');
+var pIE = require('./_object-pie');
+var toObject = require('./_to-object');
+var IObject = require('./_iobject');
+var $assign = Object.assign;
+
+// should work with symbols and should have deterministic property order (V8 bug)
+module.exports = !$assign || require('./_fails')(function () {
+  var A = {};
+  var B = {};
+  // eslint-disable-next-line no-undef
+  var S = Symbol();
+  var K = 'abcdefghijklmnopqrst';
+  A[S] = 7;
+  K.split('').forEach(function (k) { B[k] = k; });
+  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
+}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
+  var T = toObject(target);
+  var aLen = arguments.length;
+  var index = 1;
+  var getSymbols = gOPS.f;
+  var isEnum = pIE.f;
+  while (aLen > index) {
+    var S = IObject(arguments[index++]);
+    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
+    var length = keys.length;
+    var j = 0;
+    var key;
+    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
+  } return T;
+} : $assign;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log2.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log2.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log2.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.22 Math.log2(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  log2: function log2(x) {
+    return Math.log(x) / Math.LN2;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 7.1.4 ToInteger
+var ceil = Math.ceil;
+var floor = Math.floor;
+module.exports = function (it) {
+  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js	(date 499162500000)
@@ -0,0 +1,34 @@
+'use strict';
+var addToUnscopables = require('./_add-to-unscopables');
+var step = require('./_iter-step');
+var Iterators = require('./_iterators');
+var toIObject = require('./_to-iobject');
+
+// 22.1.3.4 Array.prototype.entries()
+// 22.1.3.13 Array.prototype.keys()
+// 22.1.3.29 Array.prototype.values()
+// 22.1.3.30 Array.prototype[@@iterator]()
+module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
+  this._t = toIObject(iterated); // target
+  this._i = 0;                   // next index
+  this._k = kind;                // kind
+// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
+}, function () {
+  var O = this._t;
+  var kind = this._k;
+  var index = this._i++;
+  if (!O || index >= O.length) {
+    this._t = undefined;
+    return step(1);
+  }
+  if (kind == 'keys') return step(0, index);
+  if (kind == 'values') return step(0, O[index]);
+  return step(0, [index, O[index]]);
+}, 'values');
+
+// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
+Iterators.Arguments = Iterators.Array;
+
+addToUnscopables('keys');
+addToUnscopables('values');
+addToUnscopables('entries');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js	(date 499162500000)
@@ -0,0 +1,19 @@
+require('./es6.array.iterator');
+var global = require('./_global');
+var hide = require('./_hide');
+var Iterators = require('./_iterators');
+var TO_STRING_TAG = require('./_wks')('toStringTag');
+
+var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
+  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
+  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
+  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
+  'TextTrackList,TouchList').split(',');
+
+for (var i = 0; i < DOMIterables.length; i++) {
+  var NAME = DOMIterables[i];
+  var Collection = global[NAME];
+  var proto = Collection && Collection.prototype;
+  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
+  Iterators[NAME] = Iterators.Array;
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_validate-collection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_validate-collection.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_validate-collection.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var isObject = require('./_is-object');
+module.exports = function (it, TYPE) {
+  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js	(date 499162500000)
@@ -0,0 +1,41 @@
+// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
+var anObject = require('./_an-object');
+var dPs = require('./_object-dps');
+var enumBugKeys = require('./_enum-bug-keys');
+var IE_PROTO = require('./_shared-key')('IE_PROTO');
+var Empty = function () { /* empty */ };
+var PROTOTYPE = 'prototype';
+
+// Create object with fake `null` prototype: use iframe Object with cleared prototype
+var createDict = function () {
+  // Thrash, waste and sodomy: IE GC bug
+  var iframe = require('./_dom-create')('iframe');
+  var i = enumBugKeys.length;
+  var lt = '<';
+  var gt = '>';
+  var iframeDocument;
+  iframe.style.display = 'none';
+  require('./_html').appendChild(iframe);
+  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
+  // createDict = iframe.contentWindow.Object;
+  // html.removeChild(iframe);
+  iframeDocument = iframe.contentWindow.document;
+  iframeDocument.open();
+  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
+  iframeDocument.close();
+  createDict = iframeDocument.F;
+  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
+  return createDict();
+};
+
+module.exports = Object.create || function create(O, Properties) {
+  var result;
+  if (O !== null) {
+    Empty[PROTOTYPE] = anObject(O);
+    result = new Empty();
+    Empty[PROTOTYPE] = null;
+    // add "__proto__" for Object.getPrototypeOf polyfill
+    result[IE_PROTO] = O;
+  } else result = createDict();
+  return Properties === undefined ? result : dPs(result, Properties);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.data-view.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.data-view.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.data-view.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
+  DataView: require('./_typed-buffer').DataView
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.join.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.join.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.join.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// 22.1.3.13 Array.prototype.join(separator)
+var $export = require('./_export');
+var toIObject = require('./_to-iobject');
+var arrayJoin = [].join;
+
+// fallback for not array-like strings
+$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
+  join: function join(separator) {
+    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.array-buffer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.array-buffer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.array-buffer.js	(date 499162500000)
@@ -0,0 +1,46 @@
+'use strict';
+var $export = require('./_export');
+var $typed = require('./_typed');
+var buffer = require('./_typed-buffer');
+var anObject = require('./_an-object');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+var isObject = require('./_is-object');
+var ArrayBuffer = require('./_global').ArrayBuffer;
+var speciesConstructor = require('./_species-constructor');
+var $ArrayBuffer = buffer.ArrayBuffer;
+var $DataView = buffer.DataView;
+var $isView = $typed.ABV && ArrayBuffer.isView;
+var $slice = $ArrayBuffer.prototype.slice;
+var VIEW = $typed.VIEW;
+var ARRAY_BUFFER = 'ArrayBuffer';
+
+$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });
+
+$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
+  // 24.1.3.1 ArrayBuffer.isView(arg)
+  isView: function isView(it) {
+    return $isView && $isView(it) || isObject(it) && VIEW in it;
+  }
+});
+
+$export($export.P + $export.U + $export.F * require('./_fails')(function () {
+  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
+}), ARRAY_BUFFER, {
+  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
+  slice: function slice(start, end) {
+    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
+    var len = anObject(this).byteLength;
+    var first = toAbsoluteIndex(start, len);
+    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
+    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
+    var viewS = new $DataView(this);
+    var viewT = new $DataView(result);
+    var index = 0;
+    while (first < fin) {
+      viewT.setUint8(index++, viewS.getUint8(first++));
+    } return result;
+  }
+});
+
+require('./_set-species')(ARRAY_BUFFER);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.freeze.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.freeze.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.freeze.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.5 Object.freeze(O)
+var isObject = require('./_is-object');
+var meta = require('./_meta').onFreeze;
+
+require('./_object-sap')('freeze', function ($freeze) {
+  return function freeze(it) {
+    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
+require('./_set-collection-of')('Map');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.apply.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.apply.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.apply.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
+var $export = require('./_export');
+var aFunction = require('./_a-function');
+var anObject = require('./_an-object');
+var rApply = (require('./_global').Reflect || {}).apply;
+var fApply = Function.apply;
+// MS Edge argumentsList argument is optional
+$export($export.S + $export.F * !require('./_fails')(function () {
+  rApply(function () { /* empty */ });
+}), 'Reflect', {
+  apply: function apply(target, thisArgument, argumentsList) {
+    var T = aFunction(target);
+    var L = anObject(argumentsList);
+    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.float64-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.float64-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.float64-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Float64', 8, function (init) {
+  return function Float64Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_a-number-value.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_a-number-value.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_a-number-value.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var cof = require('./_cof');
+module.exports = function (it, msg) {
+  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
+  return +it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.trim-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.trim-right.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.trim-right.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
+require('./_string-trim')('trimRight', function ($trim) {
+  return function trimRight() {
+    return $trim(this, 2);
+  };
+}, 'trimEnd');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-map.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-map.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-map.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
+require('./_set-collection-from')('WeakMap');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-ws.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-ws.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-ws.js	(date 499162500000)
@@ -0,0 +1,2 @@
+module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
+  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.reduce-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.reduce-right.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.reduce-right.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $reduce = require('./_array-reduce');
+
+$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
+  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
+  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
+    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.expm1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.expm1.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.expm1.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 20.2.2.14 Math.expm1(x)
+var $export = require('./_export');
+var $expm1 = require('./_math-expm1');
+
+$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.is-extensible.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.is-extensible.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.is-extensible.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// 26.1.10 Reflect.isExtensible(target)
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var $isExtensible = Object.isExtensible;
+
+$export($export.S, 'Reflect', {
+  isExtensible: function isExtensible(target) {
+    anObject(target);
+    return $isExtensible ? $isExtensible(target) : true;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js	(date 499162500000)
@@ -0,0 +1,3 @@
+module.exports = function (done, value) {
+  return { value: value, done: !!done };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.define.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var define = require('./_object-define');
+
+$export($export.S + $export.F, 'Object', { define: define });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.signbit.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.signbit.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.signbit.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// http://jfbastien.github.io/papers/Math.signbit.html
+var $export = require('./_export');
+
+$export($export.S, 'Math', { signbit: function signbit(x) {
+  // eslint-disable-next-line no-self-compare
+  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js	(date 499162500000)
@@ -0,0 +1,4 @@
+module.exports = function (it) {
+  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-set.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-set.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-set.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
+require('./_set-collection-of')('WeakSet');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.scale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.scale.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.scale.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', { scale: require('./_math-scale') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.imulh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.imulh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.imulh.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  imulh: function imulh(u, v) {
+    var UINT16 = 0xffff;
+    var $u = +u;
+    var $v = +v;
+    var u0 = $u & UINT16;
+    var v0 = $v & UINT16;
+    var u1 = $u >> 16;
+    var v1 = $v >> 16;
+    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
+    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-detect.js	(date 499162500000)
@@ -0,0 +1,22 @@
+var ITERATOR = require('./_wks')('iterator');
+var SAFE_CLOSING = false;
+
+try {
+  var riter = [7][ITERATOR]();
+  riter['return'] = function () { SAFE_CLOSING = true; };
+  // eslint-disable-next-line no-throw-literal
+  Array.from(riter, function () { throw 2; });
+} catch (e) { /* empty */ }
+
+module.exports = function (exec, skipClosing) {
+  if (!skipClosing && !SAFE_CLOSING) return false;
+  var safe = false;
+  try {
+    var arr = [7];
+    var iter = arr[ITERATOR]();
+    iter.next = function () { return { done: safe = true }; };
+    arr[ITERATOR] = function () { return iter; };
+    exec(arr);
+  } catch (e) { /* empty */ }
+  return safe;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.number.iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.number.iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.number.iterator.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+require('./_iter-define')(Number, 'Number', function (iterated) {
+  this._l = +iterated;
+  this._i = 0;
+}, function () {
+  var i = this._i++;
+  var done = !(i < this._l);
+  return { done: done, value: done ? undefined : i };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.parse-int.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseInt = require('./_parse-int');
+// 20.1.2.13 Number.parseInt(string, radix)
+$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.to-string.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// 7.1.1 ToPrimitive(input [, PreferredType])
+var isObject = require('./_is-object');
+// instead of the ES6 spec version, we didn't implement @@toPrimitive case
+// and the second argument - flag - preferred type is a string
+module.exports = function (it, S) {
+  if (!isObject(it)) return it;
+  var fn, val;
+  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
+  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
+  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
+  throw TypeError("Can't convert object to primitive value");
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.hypot.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.hypot.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.hypot.js	(date 499162500000)
@@ -0,0 +1,25 @@
+// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
+var $export = require('./_export');
+var abs = Math.abs;
+
+$export($export.S, 'Math', {
+  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
+    var sum = 0;
+    var i = 0;
+    var aLen = arguments.length;
+    var larg = 0;
+    var arg, div;
+    while (i < aLen) {
+      arg = abs(arguments[i++]);
+      if (larg < arg) {
+        div = larg / arg;
+        sum = sum * div * div + 1;
+        larg = arg;
+      } else if (arg > 0) {
+        div = arg / larg;
+        sum += div * div;
+      } else sum += arg;
+    }
+    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.define-getter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.define-getter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.define-getter.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var aFunction = require('./_a-function');
+var $defineProperty = require('./_object-dp');
+
+// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __defineGetter__: function __defineGetter__(P, getter) {
+    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.9 Object.getPrototypeOf(O)
+var toObject = require('./_to-object');
+var $getPrototypeOf = require('./_object-gpo');
+
+require('./_object-sap')('getPrototypeOf', function () {
+  return function getPrototypeOf(it) {
+    return $getPrototypeOf(toObject(it));
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.map.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $map = require('./_array-methods')(1);
+
+$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
+  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
+  map: function map(callbackfn /* , thisArg */) {
+    return $map(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-metadata.js	(date 499162500000)
@@ -0,0 +1,17 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var getPrototypeOf = require('./_object-gpo');
+var ordinaryHasOwnMetadata = metadata.has;
+var ordinaryGetOwnMetadata = metadata.get;
+var toMetaKey = metadata.key;
+
+var ordinaryGetMetadata = function (MetadataKey, O, P) {
+  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
+  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
+  var parent = getPrototypeOf(O);
+  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
+};
+
+metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_same-value.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_same-value.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_same-value.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.2.9 SameValue(x, y)
+module.exports = Object.is || function is(x, y) {
+  // eslint-disable-next-line no-self-compare
+  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fails-is-regexp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fails-is-regexp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fails-is-regexp.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var MATCH = require('./_wks')('match');
+module.exports = function (KEY) {
+  var re = /./;
+  try {
+    '/./'[KEY](re);
+  } catch (e) {
+    try {
+      re[MATCH] = false;
+      return !'/./'[KEY](re);
+    } catch (f) { /* empty */ }
+  } return true;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.map.js	(date 499162500000)
@@ -0,0 +1,19 @@
+'use strict';
+var strong = require('./_collection-strong');
+var validate = require('./_validate-collection');
+var MAP = 'Map';
+
+// 23.1 Map Objects
+module.exports = require('./_collection')(MAP, function (get) {
+  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
+}, {
+  // 23.1.3.6 Map.prototype.get(key)
+  get: function get(key) {
+    var entry = strong.getEntry(validate(this, MAP), key);
+    return entry && entry.v;
+  },
+  // 23.1.3.9 Map.prototype.set(key, value)
+  set: function set(key, value) {
+    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
+  }
+}, strong, true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// to indexed object, toObject with fallback for non-array-like ES3 strings
+var IObject = require('./_iobject');
+var defined = require('./_defined');
+module.exports = function (it) {
+  return IObject(defined(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.from-code-point.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.from-code-point.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.from-code-point.js	(date 499162500000)
@@ -0,0 +1,23 @@
+var $export = require('./_export');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var fromCharCode = String.fromCharCode;
+var $fromCodePoint = String.fromCodePoint;
+
+// length should be 1, old FF problem
+$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
+  // 21.1.2.2 String.fromCodePoint(...codePoints)
+  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
+    var res = [];
+    var aLen = arguments.length;
+    var i = 0;
+    var code;
+    while (aLen > i) {
+      code = +arguments[i++];
+      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
+      res.push(code < 0x10000
+        ? fromCharCode(code)
+        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
+      );
+    } return res.join('');
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.pad-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.pad-end.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.pad-end.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// https://github.com/tc39/proposal-string-pad-start-end
+var $export = require('./_export');
+var $pad = require('./_string-pad');
+var userAgent = require('./_user-agent');
+
+// https://github.com/zloirock/core-js/issues/280
+var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);
+
+$export($export.P + $export.F * WEBKIT_BUG, 'String', {
+  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
+    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_invoke.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_invoke.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_invoke.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// fast apply, http://jsperf.lnkit.com/fast-apply/5
+module.exports = function (fn, args, that) {
+  var un = that === undefined;
+  switch (args.length) {
+    case 0: return un ? fn()
+                      : fn.call(that);
+    case 1: return un ? fn(args[0])
+                      : fn.call(that, args[0]);
+    case 2: return un ? fn(args[0], args[1])
+                      : fn.call(that, args[0], args[1]);
+    case 3: return un ? fn(args[0], args[1], args[2])
+                      : fn.call(that, args[0], args[1], args[2]);
+    case 4: return un ? fn(args[0], args[1], args[2], args[3])
+                      : fn.call(that, args[0], args[1], args[2], args[3]);
+  } return fn.apply(that, args);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.has-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.has-instance.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.has-instance.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+var isObject = require('./_is-object');
+var getPrototypeOf = require('./_object-gpo');
+var HAS_INSTANCE = require('./_wks')('hasInstance');
+var FunctionProto = Function.prototype;
+// 19.2.3.6 Function.prototype[@@hasInstance](V)
+if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
+  if (typeof this != 'function' || !isObject(O)) return false;
+  if (!isObject(this.prototype)) return O instanceof this;
+  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
+  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
+  return false;
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.set.js	(date 499162500000)
@@ -0,0 +1,33 @@
+// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
+var dP = require('./_object-dp');
+var gOPD = require('./_object-gopd');
+var getPrototypeOf = require('./_object-gpo');
+var has = require('./_has');
+var $export = require('./_export');
+var createDesc = require('./_property-desc');
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+
+function set(target, propertyKey, V /* , receiver */) {
+  var receiver = arguments.length < 4 ? target : arguments[3];
+  var ownDesc = gOPD.f(anObject(target), propertyKey);
+  var existingDescriptor, proto;
+  if (!ownDesc) {
+    if (isObject(proto = getPrototypeOf(target))) {
+      return set(proto, propertyKey, V, receiver);
+    }
+    ownDesc = createDesc(0);
+  }
+  if (has(ownDesc, 'value')) {
+    if (ownDesc.writable === false || !isObject(receiver)) return false;
+    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
+      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
+      existingDescriptor.value = V;
+      dP.f(receiver, propertyKey, existingDescriptor);
+    } else dP.f(receiver, propertyKey, createDesc(0, V));
+    return true;
+  }
+  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
+}
+
+$export($export.S, 'Reflect', { set: set });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.set-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.set-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.set-prototype-of.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// 26.1.14 Reflect.setPrototypeOf(target, proto)
+var $export = require('./_export');
+var setProto = require('./_set-proto');
+
+if (setProto) $export($export.S, 'Reflect', {
+  setPrototypeOf: function setPrototypeOf(target, proto) {
+    setProto.check(target, proto);
+    try {
+      setProto.set(target, proto);
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.cosh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.cosh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.cosh.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.2.2.12 Math.cosh(x)
+var $export = require('./_export');
+var exp = Math.exp;
+
+$export($export.S, 'Math', {
+  cosh: function cosh(x) {
+    return (exp(x = +x) + exp(-x)) / 2;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.sign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.sign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.sign.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.28 Math.sign(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', { sign: require('./_math-sign') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js	(date 499162500000)
@@ -0,0 +1,17 @@
+'use strict';
+var $at = require('./_string-at')(true);
+
+// 21.1.3.27 String.prototype[@@iterator]()
+require('./_iter-define')(String, 'String', function (iterated) {
+  this._t = String(iterated); // target
+  this._i = 0;                // next index
+// 21.1.5.2.1 %StringIteratorPrototype%.next()
+}, function () {
+  var O = this._t;
+  var index = this._i;
+  var point;
+  if (index >= O.length) return { value: undefined, done: true };
+  point = $at(O, index);
+  this._i += point.length;
+  return { value: point, done: false };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.of.js	(date 499162500000)
@@ -0,0 +1,19 @@
+'use strict';
+var $export = require('./_export');
+var createProperty = require('./_create-property');
+
+// WebKit Array.of isn't generic
+$export($export.S + $export.F * require('./_fails')(function () {
+  function F() { /* empty */ }
+  return !(Array.of.call(F) instanceof F);
+}), 'Array', {
+  // 22.1.2.3 Array.of( ...items)
+  of: function of(/* ...args */) {
+    var index = 0;
+    var aLen = arguments.length;
+    var result = new (typeof this == 'function' ? this : Array)(aLen);
+    while (aLen > index) createProperty(result, index, arguments[index++]);
+    result.length = aLen;
+    return result;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.epsilon.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.epsilon.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.epsilon.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.1 Number.EPSILON
+var $export = require('./_export');
+
+$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get.js	(date 499162500000)
@@ -0,0 +1,21 @@
+// 26.1.6 Reflect.get(target, propertyKey [, receiver])
+var gOPD = require('./_object-gopd');
+var getPrototypeOf = require('./_object-gpo');
+var has = require('./_has');
+var $export = require('./_export');
+var isObject = require('./_is-object');
+var anObject = require('./_an-object');
+
+function get(target, propertyKey /* , receiver */) {
+  var receiver = arguments.length < 3 ? target : arguments[2];
+  var desc, proto;
+  if (anObject(target) === receiver) return target[propertyKey];
+  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
+    ? desc.value
+    : desc.get !== undefined
+      ? desc.get.call(receiver)
+      : undefined;
+  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
+}
+
+$export($export.S, 'Reflect', { get: get });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_hide');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js	(date 499162500000)
@@ -0,0 +1,13 @@
+var dP = require('./_object-dp');
+var anObject = require('./_an-object');
+var getKeys = require('./_object-keys');
+
+module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
+  anObject(O);
+  var keys = getKeys(Properties);
+  var length = keys.length;
+  var i = 0;
+  var P;
+  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
+  return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-fround.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-fround.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-fround.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// 20.2.2.16 Math.fround(x)
+var sign = require('./_math-sign');
+var pow = Math.pow;
+var EPSILON = pow(2, -52);
+var EPSILON32 = pow(2, -23);
+var MAX32 = pow(2, 127) * (2 - EPSILON32);
+var MIN32 = pow(2, -126);
+
+var roundTiesToEven = function (n) {
+  return n + 1 / EPSILON - 1 / EPSILON;
+};
+
+module.exports = Math.fround || function fround(x) {
+  var $abs = Math.abs(x);
+  var $sign = sign(x);
+  var a, result;
+  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
+  a = (1 + EPSILON32 / EPSILON) * $abs;
+  result = a - (a - $abs);
+  // eslint-disable-next-line no-self-compare
+  if (result > MAX32 || result != result) return $sign * Infinity;
+  return $sign * result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.string.escape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.string.escape-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.string.escape-html.js	(date 499162500000)
@@ -0,0 +1,11 @@
+'use strict';
+var $export = require('./_export');
+var $re = require('./_replacer')(/[&<>"']/g, {
+  '&': '&amp;',
+  '<': '&lt;',
+  '>': '&gt;',
+  '"': '&quot;',
+  "'": '&apos;'
+});
+
+$export($export.P + $export.F, 'String', { escapeHTML: function escapeHTML() { return $re(this); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.timers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.timers.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.timers.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// ie9- setTimeout & setInterval additional parameters fix
+var global = require('./_global');
+var $export = require('./_export');
+var userAgent = require('./_user-agent');
+var slice = [].slice;
+var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
+var wrap = function (set) {
+  return function (fn, time /* , ...args */) {
+    var boundArgs = arguments.length > 2;
+    var args = boundArgs ? slice.call(arguments, 2) : false;
+    return set(boundArgs ? function () {
+      // eslint-disable-next-line no-new-func
+      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
+    } : fn, time);
+  };
+};
+$export($export.G + $export.B + $export.F * MSIE, {
+  setTimeout: wrap(global.setTimeout),
+  setInterval: wrap(global.setInterval)
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var pIE = require('./_object-pie');
+var createDesc = require('./_property-desc');
+var toIObject = require('./_to-iobject');
+var toPrimitive = require('./_to-primitive');
+var has = require('./_has');
+var IE8_DOM_DEFINE = require('./_ie8-dom-define');
+var gOPD = Object.getOwnPropertyDescriptor;
+
+exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
+  O = toIObject(O);
+  P = toPrimitive(P, true);
+  if (IE8_DOM_DEFINE) try {
+    return gOPD(O, P);
+  } catch (e) { /* empty */ }
+  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.seal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.seal.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.seal.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.17 Object.seal(O)
+var isObject = require('./_is-object');
+var meta = require('./_meta').onFreeze;
+
+require('./_object-sap')('seal', function ($seal) {
+  return function seal(it) {
+    return $seal && isObject(it) ? $seal(meta(it)) : it;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-primitive.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var isObject = require('./_is-object');
+var document = require('./_global').document;
+// typeof document.createElement is 'object' in old IE
+var is = isObject(document) && isObject(document.createElement);
+module.exports = function (it) {
+  return is ? document.createElement(it) : {};
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var dP = require('./_object-dp');
+var createDesc = require('./_property-desc');
+module.exports = require('./_descriptors') ? function (object, key, value) {
+  return dP.f(object, key, createDesc(1, value));
+} : function (object, key, value) {
+  object[key] = value;
+  return object;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection.js	(date 499162500000)
@@ -0,0 +1,59 @@
+'use strict';
+var global = require('./_global');
+var $export = require('./_export');
+var meta = require('./_meta');
+var fails = require('./_fails');
+var hide = require('./_hide');
+var redefineAll = require('./_redefine-all');
+var forOf = require('./_for-of');
+var anInstance = require('./_an-instance');
+var isObject = require('./_is-object');
+var setToStringTag = require('./_set-to-string-tag');
+var dP = require('./_object-dp').f;
+var each = require('./_array-methods')(0);
+var DESCRIPTORS = require('./_descriptors');
+
+module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
+  var Base = global[NAME];
+  var C = Base;
+  var ADDER = IS_MAP ? 'set' : 'add';
+  var proto = C && C.prototype;
+  var O = {};
+  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
+    new C().entries().next();
+  }))) {
+    // create collection constructor
+    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
+    redefineAll(C.prototype, methods);
+    meta.NEED = true;
+  } else {
+    C = wrapper(function (target, iterable) {
+      anInstance(target, C, NAME, '_c');
+      target._c = new Base();
+      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
+    });
+    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
+      var IS_ADDER = KEY == 'add' || KEY == 'set';
+      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
+        anInstance(this, C, KEY);
+        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
+        var result = this._c[KEY](a === 0 ? 0 : a, b);
+        return IS_ADDER ? this : result;
+      });
+    });
+    IS_WEAK || dP(C.prototype, 'size', {
+      get: function () {
+        return this._c.size;
+      }
+    });
+  }
+
+  setToStringTag(C, NAME);
+
+  O[NAME] = C;
+  $export($export.G + $export.W + $export.F, O);
+
+  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
+
+  return C;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_regexp-exec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_regexp-exec.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_regexp-exec.js	(date 499162500000)
@@ -0,0 +1,1 @@
+// empty
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.to-fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.to-fixed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.to-fixed.js	(date 499162500000)
@@ -0,0 +1,114 @@
+'use strict';
+var $export = require('./_export');
+var toInteger = require('./_to-integer');
+var aNumberValue = require('./_a-number-value');
+var repeat = require('./_string-repeat');
+var $toFixed = 1.0.toFixed;
+var floor = Math.floor;
+var data = [0, 0, 0, 0, 0, 0];
+var ERROR = 'Number.toFixed: incorrect invocation!';
+var ZERO = '0';
+
+var multiply = function (n, c) {
+  var i = -1;
+  var c2 = c;
+  while (++i < 6) {
+    c2 += n * data[i];
+    data[i] = c2 % 1e7;
+    c2 = floor(c2 / 1e7);
+  }
+};
+var divide = function (n) {
+  var i = 6;
+  var c = 0;
+  while (--i >= 0) {
+    c += data[i];
+    data[i] = floor(c / n);
+    c = (c % n) * 1e7;
+  }
+};
+var numToString = function () {
+  var i = 6;
+  var s = '';
+  while (--i >= 0) {
+    if (s !== '' || i === 0 || data[i] !== 0) {
+      var t = String(data[i]);
+      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
+    }
+  } return s;
+};
+var pow = function (x, n, acc) {
+  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
+};
+var log = function (x) {
+  var n = 0;
+  var x2 = x;
+  while (x2 >= 4096) {
+    n += 12;
+    x2 /= 4096;
+  }
+  while (x2 >= 2) {
+    n += 1;
+    x2 /= 2;
+  } return n;
+};
+
+$export($export.P + $export.F * (!!$toFixed && (
+  0.00008.toFixed(3) !== '0.000' ||
+  0.9.toFixed(0) !== '1' ||
+  1.255.toFixed(2) !== '1.25' ||
+  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
+) || !require('./_fails')(function () {
+  // V8 ~ Android 4.3-
+  $toFixed.call({});
+})), 'Number', {
+  toFixed: function toFixed(fractionDigits) {
+    var x = aNumberValue(this, ERROR);
+    var f = toInteger(fractionDigits);
+    var s = '';
+    var m = ZERO;
+    var e, z, j, k;
+    if (f < 0 || f > 20) throw RangeError(ERROR);
+    // eslint-disable-next-line no-self-compare
+    if (x != x) return 'NaN';
+    if (x <= -1e21 || x >= 1e21) return String(x);
+    if (x < 0) {
+      s = '-';
+      x = -x;
+    }
+    if (x > 1e-21) {
+      e = log(x * pow(2, 69, 1)) - 69;
+      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
+      z *= 0x10000000000000;
+      e = 52 - e;
+      if (e > 0) {
+        multiply(0, z);
+        j = f;
+        while (j >= 7) {
+          multiply(1e7, 0);
+          j -= 7;
+        }
+        multiply(pow(10, j, 1), 0);
+        j = e - 1;
+        while (j >= 23) {
+          divide(1 << 23);
+          j -= 23;
+        }
+        divide(1 << j);
+        multiply(1, 1);
+        divide(2);
+        m = numToString();
+      } else {
+        multiply(0, z);
+        multiply(1 << -e, 0);
+        m = numToString() + repeat.call(ZERO, f);
+      }
+    }
+    if (f > 0) {
+      k = m.length;
+      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
+    } else {
+      m = s + m;
+    } return m;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
+$export($export.S, 'Object', { create: require('./_object-create') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-methods.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-methods.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-methods.js	(date 499162500000)
@@ -0,0 +1,44 @@
+// 0 -> Array#forEach
+// 1 -> Array#map
+// 2 -> Array#filter
+// 3 -> Array#some
+// 4 -> Array#every
+// 5 -> Array#find
+// 6 -> Array#findIndex
+var ctx = require('./_ctx');
+var IObject = require('./_iobject');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var asc = require('./_array-species-create');
+module.exports = function (TYPE, $create) {
+  var IS_MAP = TYPE == 1;
+  var IS_FILTER = TYPE == 2;
+  var IS_SOME = TYPE == 3;
+  var IS_EVERY = TYPE == 4;
+  var IS_FIND_INDEX = TYPE == 6;
+  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
+  var create = $create || asc;
+  return function ($this, callbackfn, that) {
+    var O = toObject($this);
+    var self = IObject(O);
+    var f = ctx(callbackfn, that, 3);
+    var length = toLength(self.length);
+    var index = 0;
+    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
+    var val, res;
+    for (;length > index; index++) if (NO_HOLES || index in self) {
+      val = self[index];
+      res = f(val, index, O);
+      if (TYPE) {
+        if (IS_MAP) result[index] = res;   // map
+        else if (res) switch (TYPE) {
+          case 3: return true;             // some
+          case 5: return val;              // find
+          case 6: return index;            // findIndex
+          case 2: result.push(val);        // filter
+        } else if (IS_EVERY) return false; // every
+      }
+    }
+    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.float32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.float32-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.float32-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Float32', 4, function (init) {
+  return function Float32Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.now.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.now.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.now.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.3.3.1 / 15.9.4.4 Date.now()
+var $export = require('./_export');
+
+$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_flags.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_flags.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_flags.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+// 21.2.5.3 get RegExp.prototype.flags
+var anObject = require('./_an-object');
+module.exports = function () {
+  var that = anObject(this);
+  var result = '';
+  if (that.global) result += 'g';
+  if (that.ignoreCase) result += 'i';
+  if (that.multiline) result += 'm';
+  if (that.unicode) result += 'u';
+  if (that.sticky) result += 'y';
+  return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.slice.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.slice.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.slice.js	(date 499162500000)
@@ -0,0 +1,28 @@
+'use strict';
+var $export = require('./_export');
+var html = require('./_html');
+var cof = require('./_cof');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+var arraySlice = [].slice;
+
+// fallback for not array-like ES3 strings and DOM objects
+$export($export.P + $export.F * require('./_fails')(function () {
+  if (html) arraySlice.call(html);
+}), 'Array', {
+  slice: function slice(begin, end) {
+    var len = toLength(this.length);
+    var klass = cof(this);
+    end = end === undefined ? len : end;
+    if (klass == 'Array') return arraySlice.call(this, begin, end);
+    var start = toAbsoluteIndex(begin, len);
+    var upTo = toAbsoluteIndex(end, len);
+    var size = toLength(upTo - start);
+    var cloned = new Array(size);
+    var i = 0;
+    for (; i < size; i++) cloned[i] = klass == 'String'
+      ? this.charAt(start + i)
+      : this[start + i];
+    return cloned;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.2.1 RequireObjectCoercible(argument)
+module.exports = function (it) {
+  if (it == undefined) throw TypeError("Can't call method on  " + it);
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.entries.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.entries.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.entries.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/tc39/proposal-object-values-entries
+var $export = require('./_export');
+var $entries = require('./_object-to-array')(true);
+
+$export($export.S, 'Object', {
+  entries: function entries(it) {
+    return $entries(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.error.is-error.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.error.is-error.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.error.is-error.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/ljharb/proposal-is-error
+var $export = require('./_export');
+var cof = require('./_cof');
+
+$export($export.S, 'Error', {
+  isError: function isError(it) {
+    return cof(it) === 'Error';
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.deg-per-rad.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.deg-per-rad.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.deg-per-rad.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get-own-property-descriptor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get-own-property-descriptor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get-own-property-descriptor.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
+var gOPD = require('./_object-gopd');
+var $export = require('./_export');
+var anObject = require('./_an-object');
+
+$export($export.S, 'Reflect', {
+  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
+    return gOPD.f(anObject(target), propertyKey);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-expm1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-expm1.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-expm1.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.2.2.14 Math.expm1(x)
+var $expm1 = Math.expm1;
+module.exports = (!$expm1
+  // Old FF bug
+  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
+  // Tor Browser bug
+  || $expm1(-2e-17) != -2e-17
+) ? function expm1(x) {
+  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
+} : $expm1;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.is-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.is-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.is-array.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
+var $export = require('./_export');
+
+$export($export.S, 'Array', { isArray: require('./_is-array') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var shared = require('./_shared')('keys');
+var uid = require('./_uid');
+module.exports = function (key) {
+  return shared[key] || (shared[key] = uid(key));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.copy-within.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.copy-within.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.copy-within.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
+var $export = require('./_export');
+
+$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });
+
+require('./_add-to-unscopables')('copyWithin');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js	(date 499162500000)
@@ -0,0 +1,8 @@
+module.exports = function (bitmap, value) {
+  return {
+    enumerable: !(bitmap & 1),
+    configurable: !(bitmap & 2),
+    writable: !(bitmap & 4),
+    value: value
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-own-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-own-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-own-metadata.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var ordinaryGetOwnMetadata = metadata.get;
+var toMetaKey = metadata.key;
+
+metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
+    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js	(date 499162500000)
@@ -0,0 +1,1 @@
+exports.f = {}.propertyIsEnumerable;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.tanh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.tanh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.tanh.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// 20.2.2.33 Math.tanh(x)
+var $export = require('./_export');
+var expm1 = require('./_math-expm1');
+var exp = Math.exp;
+
+$export($export.S, 'Math', {
+  tanh: function tanh(x) {
+    var a = expm1(x = +x);
+    var b = expm1(-x);
+    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.starts-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.starts-with.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.starts-with.js	(date 499162500000)
@@ -0,0 +1,18 @@
+// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
+'use strict';
+var $export = require('./_export');
+var toLength = require('./_to-length');
+var context = require('./_string-context');
+var STARTS_WITH = 'startsWith';
+var $startsWith = ''[STARTS_WITH];
+
+$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
+  startsWith: function startsWith(searchString /* , position = 0 */) {
+    var that = context(this, searchString, STARTS_WITH);
+    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
+    var search = String(searchString);
+    return $startsWith
+      ? $startsWith.call(that, search, index)
+      : that.slice(index, index + search.length) === search;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.has-own-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.has-own-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.has-own-metadata.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var ordinaryHasOwnMetadata = metadata.has;
+var toMetaKey = metadata.key;
+
+metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
+    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.name.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.name.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.name.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.sort.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.sort.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.sort.js	(date 499162500000)
@@ -0,0 +1,23 @@
+'use strict';
+var $export = require('./_export');
+var aFunction = require('./_a-function');
+var toObject = require('./_to-object');
+var fails = require('./_fails');
+var $sort = [].sort;
+var test = [1, 2, 3];
+
+$export($export.P + $export.F * (fails(function () {
+  // IE8-
+  test.sort(undefined);
+}) || !fails(function () {
+  // V8 bug
+  test.sort(null);
+  // Old WebKit
+}) || !require('./_strict-method')($sort)), 'Array', {
+  // 22.1.3.25 Array.prototype.sort(comparefn)
+  sort: function sort(comparefn) {
+    return comparefn === undefined
+      ? $sort.call(toObject(this))
+      : $sort.call(toObject(this), aFunction(comparefn));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.parse-int.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseInt = require('./_parse-int');
+// 18.2.5 parseInt(string, radix)
+$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.dict.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.dict.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.dict.js	(date 499162500000)
@@ -0,0 +1,157 @@
+'use strict';
+var ctx = require('./_ctx');
+var $export = require('./_export');
+var createDesc = require('./_property-desc');
+var assign = require('./_object-assign');
+var create = require('./_object-create');
+var getPrototypeOf = require('./_object-gpo');
+var getKeys = require('./_object-keys');
+var dP = require('./_object-dp');
+var keyOf = require('./_keyof');
+var aFunction = require('./_a-function');
+var forOf = require('./_for-of');
+var isIterable = require('./core.is-iterable');
+var $iterCreate = require('./_iter-create');
+var step = require('./_iter-step');
+var isObject = require('./_is-object');
+var toIObject = require('./_to-iobject');
+var DESCRIPTORS = require('./_descriptors');
+var has = require('./_has');
+
+// 0 -> Dict.forEach
+// 1 -> Dict.map
+// 2 -> Dict.filter
+// 3 -> Dict.some
+// 4 -> Dict.every
+// 5 -> Dict.find
+// 6 -> Dict.findKey
+// 7 -> Dict.mapPairs
+var createDictMethod = function (TYPE) {
+  var IS_MAP = TYPE == 1;
+  var IS_EVERY = TYPE == 4;
+  return function (object, callbackfn, that /* = undefined */) {
+    var f = ctx(callbackfn, that, 3);
+    var O = toIObject(object);
+    var result = IS_MAP || TYPE == 7 || TYPE == 2
+          ? new (typeof this == 'function' ? this : Dict)() : undefined;
+    var key, val, res;
+    for (key in O) if (has(O, key)) {
+      val = O[key];
+      res = f(val, key, object);
+      if (TYPE) {
+        if (IS_MAP) result[key] = res;          // map
+        else if (res) switch (TYPE) {
+          case 2: result[key] = val; break;     // filter
+          case 3: return true;                  // some
+          case 5: return val;                   // find
+          case 6: return key;                   // findKey
+          case 7: result[res[0]] = res[1];      // mapPairs
+        } else if (IS_EVERY) return false;      // every
+      }
+    }
+    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;
+  };
+};
+var findKey = createDictMethod(6);
+
+var createDictIter = function (kind) {
+  return function (it) {
+    return new DictIterator(it, kind);
+  };
+};
+var DictIterator = function (iterated, kind) {
+  this._t = toIObject(iterated); // target
+  this._a = getKeys(iterated);   // keys
+  this._i = 0;                   // next index
+  this._k = kind;                // kind
+};
+$iterCreate(DictIterator, 'Dict', function () {
+  var that = this;
+  var O = that._t;
+  var keys = that._a;
+  var kind = that._k;
+  var key;
+  do {
+    if (that._i >= keys.length) {
+      that._t = undefined;
+      return step(1);
+    }
+  } while (!has(O, key = keys[that._i++]));
+  if (kind == 'keys') return step(0, key);
+  if (kind == 'values') return step(0, O[key]);
+  return step(0, [key, O[key]]);
+});
+
+function Dict(iterable) {
+  var dict = create(null);
+  if (iterable != undefined) {
+    if (isIterable(iterable)) {
+      forOf(iterable, true, function (key, value) {
+        dict[key] = value;
+      });
+    } else assign(dict, iterable);
+  }
+  return dict;
+}
+Dict.prototype = null;
+
+function reduce(object, mapfn, init) {
+  aFunction(mapfn);
+  var O = toIObject(object);
+  var keys = getKeys(O);
+  var length = keys.length;
+  var i = 0;
+  var memo, key;
+  if (arguments.length < 3) {
+    if (!length) throw TypeError('Reduce of empty object with no initial value');
+    memo = O[keys[i++]];
+  } else memo = Object(init);
+  while (length > i) if (has(O, key = keys[i++])) {
+    memo = mapfn(memo, O[key], key, object);
+  }
+  return memo;
+}
+
+function includes(object, el) {
+  // eslint-disable-next-line no-self-compare
+  return (el == el ? keyOf(object, el) : findKey(object, function (it) {
+    // eslint-disable-next-line no-self-compare
+    return it != it;
+  })) !== undefined;
+}
+
+function get(object, key) {
+  if (has(object, key)) return object[key];
+}
+function set(object, key, value) {
+  if (DESCRIPTORS && key in Object) dP.f(object, key, createDesc(0, value));
+  else object[key] = value;
+  return object;
+}
+
+function isDict(it) {
+  return isObject(it) && getPrototypeOf(it) === Dict.prototype;
+}
+
+$export($export.G + $export.F, { Dict: Dict });
+
+$export($export.S, 'Dict', {
+  keys: createDictIter('keys'),
+  values: createDictIter('values'),
+  entries: createDictIter('entries'),
+  forEach: createDictMethod(0),
+  map: createDictMethod(1),
+  filter: createDictMethod(2),
+  some: createDictMethod(3),
+  every: createDictMethod(4),
+  find: createDictMethod(5),
+  findKey: findKey,
+  mapPairs: createDictMethod(7),
+  reduce: reduce,
+  keyOf: keyOf,
+  includes: includes,
+  has: has,
+  get: get,
+  set: set,
+  isDict: isDict
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.classof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.classof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.classof.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+
+$export($export.S + $export.F, 'Object', { classof: require('./_classof') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.fround.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.fround.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.fround.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.16 Math.fround(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', { fround: require('./_math-fround') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.reduce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.reduce.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.reduce.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $reduce = require('./_array-reduce');
+
+$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
+  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
+  reduce: function reduce(callbackfn /* , initialValue */) {
+    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int16-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int16-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int16-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Int16', 2, function (init) {
+  return function Int16Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.bind.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.bind.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.function.bind.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
+var $export = require('./_export');
+
+$export($export.P, 'Function', { bind: require('./_bind') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.regexp.escape.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.regexp.escape.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.regexp.escape.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// https://github.com/benjamingr/RexExp.escape
+var $export = require('./_export');
+var $re = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');
+
+$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.find.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.find.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.find.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
+var $export = require('./_export');
+var $find = require('./_array-methods')(5);
+var KEY = 'find';
+var forced = true;
+// Shouldn't skip holes
+if (KEY in []) Array(1)[KEY](function () { forced = false; });
+$export($export.P + $export.F * forced, 'Array', {
+  find: function find(callbackfn /* , that = undefined */) {
+    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
+require('./_add-to-unscopables')(KEY);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.observable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.observable.js	(date 499162500000)
@@ -0,0 +1,199 @@
+'use strict';
+// https://github.com/zenparsing/es-observable
+var $export = require('./_export');
+var global = require('./_global');
+var core = require('./_core');
+var microtask = require('./_microtask')();
+var OBSERVABLE = require('./_wks')('observable');
+var aFunction = require('./_a-function');
+var anObject = require('./_an-object');
+var anInstance = require('./_an-instance');
+var redefineAll = require('./_redefine-all');
+var hide = require('./_hide');
+var forOf = require('./_for-of');
+var RETURN = forOf.RETURN;
+
+var getMethod = function (fn) {
+  return fn == null ? undefined : aFunction(fn);
+};
+
+var cleanupSubscription = function (subscription) {
+  var cleanup = subscription._c;
+  if (cleanup) {
+    subscription._c = undefined;
+    cleanup();
+  }
+};
+
+var subscriptionClosed = function (subscription) {
+  return subscription._o === undefined;
+};
+
+var closeSubscription = function (subscription) {
+  if (!subscriptionClosed(subscription)) {
+    subscription._o = undefined;
+    cleanupSubscription(subscription);
+  }
+};
+
+var Subscription = function (observer, subscriber) {
+  anObject(observer);
+  this._c = undefined;
+  this._o = observer;
+  observer = new SubscriptionObserver(this);
+  try {
+    var cleanup = subscriber(observer);
+    var subscription = cleanup;
+    if (cleanup != null) {
+      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
+      else aFunction(cleanup);
+      this._c = cleanup;
+    }
+  } catch (e) {
+    observer.error(e);
+    return;
+  } if (subscriptionClosed(this)) cleanupSubscription(this);
+};
+
+Subscription.prototype = redefineAll({}, {
+  unsubscribe: function unsubscribe() { closeSubscription(this); }
+});
+
+var SubscriptionObserver = function (subscription) {
+  this._s = subscription;
+};
+
+SubscriptionObserver.prototype = redefineAll({}, {
+  next: function next(value) {
+    var subscription = this._s;
+    if (!subscriptionClosed(subscription)) {
+      var observer = subscription._o;
+      try {
+        var m = getMethod(observer.next);
+        if (m) return m.call(observer, value);
+      } catch (e) {
+        try {
+          closeSubscription(subscription);
+        } finally {
+          throw e;
+        }
+      }
+    }
+  },
+  error: function error(value) {
+    var subscription = this._s;
+    if (subscriptionClosed(subscription)) throw value;
+    var observer = subscription._o;
+    subscription._o = undefined;
+    try {
+      var m = getMethod(observer.error);
+      if (!m) throw value;
+      value = m.call(observer, value);
+    } catch (e) {
+      try {
+        cleanupSubscription(subscription);
+      } finally {
+        throw e;
+      }
+    } cleanupSubscription(subscription);
+    return value;
+  },
+  complete: function complete(value) {
+    var subscription = this._s;
+    if (!subscriptionClosed(subscription)) {
+      var observer = subscription._o;
+      subscription._o = undefined;
+      try {
+        var m = getMethod(observer.complete);
+        value = m ? m.call(observer, value) : undefined;
+      } catch (e) {
+        try {
+          cleanupSubscription(subscription);
+        } finally {
+          throw e;
+        }
+      } cleanupSubscription(subscription);
+      return value;
+    }
+  }
+});
+
+var $Observable = function Observable(subscriber) {
+  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
+};
+
+redefineAll($Observable.prototype, {
+  subscribe: function subscribe(observer) {
+    return new Subscription(observer, this._f);
+  },
+  forEach: function forEach(fn) {
+    var that = this;
+    return new (core.Promise || global.Promise)(function (resolve, reject) {
+      aFunction(fn);
+      var subscription = that.subscribe({
+        next: function (value) {
+          try {
+            return fn(value);
+          } catch (e) {
+            reject(e);
+            subscription.unsubscribe();
+          }
+        },
+        error: reject,
+        complete: resolve
+      });
+    });
+  }
+});
+
+redefineAll($Observable, {
+  from: function from(x) {
+    var C = typeof this === 'function' ? this : $Observable;
+    var method = getMethod(anObject(x)[OBSERVABLE]);
+    if (method) {
+      var observable = anObject(method.call(x));
+      return observable.constructor === C ? observable : new C(function (observer) {
+        return observable.subscribe(observer);
+      });
+    }
+    return new C(function (observer) {
+      var done = false;
+      microtask(function () {
+        if (!done) {
+          try {
+            if (forOf(x, false, function (it) {
+              observer.next(it);
+              if (done) return RETURN;
+            }) === RETURN) return;
+          } catch (e) {
+            if (done) throw e;
+            observer.error(e);
+            return;
+          } observer.complete();
+        }
+      });
+      return function () { done = true; };
+    });
+  },
+  of: function of() {
+    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
+    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
+      var done = false;
+      microtask(function () {
+        if (!done) {
+          for (var j = 0; j < items.length; ++j) {
+            observer.next(items[j]);
+            if (done) return;
+          } observer.complete();
+        }
+      });
+      return function () { done = true; };
+    });
+  }
+});
+
+hide($Observable.prototype, OBSERVABLE, function () { return this; });
+
+$export($export.G, { Observable: $Observable });
+
+require('./_set-species')('Observable');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.1.13 ToObject(argument)
+var defined = require('./_defined');
+module.exports = function (it) {
+  return Object(defined(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js	(date 499162500000)
@@ -0,0 +1,13 @@
+// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
+var has = require('./_has');
+var toObject = require('./_to-object');
+var IE_PROTO = require('./_shared-key')('IE_PROTO');
+var ObjectProto = Object.prototype;
+
+module.exports = Object.getPrototypeOf || function (O) {
+  O = toObject(O);
+  if (has(O, IE_PROTO)) return O[IE_PROTO];
+  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
+    return O.constructor.prototype;
+  } return O instanceof Object ? ObjectProto : null;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.flatten.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.flatten.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.flatten.js	(date 499162500000)
@@ -0,0 +1,21 @@
+'use strict';
+// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
+var $export = require('./_export');
+var flattenIntoArray = require('./_flatten-into-array');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var toInteger = require('./_to-integer');
+var arraySpeciesCreate = require('./_array-species-create');
+
+$export($export.P, 'Array', {
+  flatten: function flatten(/* depthArg = 1 */) {
+    var depthArg = arguments[0];
+    var O = toObject(this);
+    var sourceLen = toLength(O.length);
+    var A = arraySpeciesCreate(O, 0);
+    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
+    return A;
+  }
+});
+
+require('./_add-to-unscopables')('flatten');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var global = require('./_global');
+var core = require('./_core');
+var LIBRARY = require('./_library');
+var wksExt = require('./_wks-ext');
+var defineProperty = require('./_object-dp').f;
+module.exports = function (name) {
+  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
+  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.sup.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.sup.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.sup.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.14 String.prototype.sup()
+require('./_string-html')('sup', function (createHTML) {
+  return function sup() {
+    return createHTML(this, 'sup', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_function-to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_function-to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_function-to-string.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_shared')('native-function-to-string', Function.toString);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.global.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/tc39/proposal-global
+var $export = require('./_export');
+
+$export($export.G, { global: require('./_global') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.construct.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.construct.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.construct.js	(date 499162500000)
@@ -0,0 +1,47 @@
+// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
+var $export = require('./_export');
+var create = require('./_object-create');
+var aFunction = require('./_a-function');
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var fails = require('./_fails');
+var bind = require('./_bind');
+var rConstruct = (require('./_global').Reflect || {}).construct;
+
+// MS Edge supports only 2 arguments and argumentsList argument is optional
+// FF Nightly sets third argument as `new.target`, but does not create `this` from it
+var NEW_TARGET_BUG = fails(function () {
+  function F() { /* empty */ }
+  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
+});
+var ARGS_BUG = !fails(function () {
+  rConstruct(function () { /* empty */ });
+});
+
+$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
+  construct: function construct(Target, args /* , newTarget */) {
+    aFunction(Target);
+    anObject(args);
+    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
+    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
+    if (Target == newTarget) {
+      // w/o altered newTarget, optimization for 0-4 arguments
+      switch (args.length) {
+        case 0: return new Target();
+        case 1: return new Target(args[0]);
+        case 2: return new Target(args[0], args[1]);
+        case 3: return new Target(args[0], args[1], args[2]);
+        case 4: return new Target(args[0], args[1], args[2], args[3]);
+      }
+      // w/o altered newTarget, lot of arguments case
+      var $args = [null];
+      $args.push.apply($args, args);
+      return new (bind.apply(Target, $args))();
+    }
+    // with altered newTarget, not support built-in constructors
+    var proto = newTarget.prototype;
+    var instance = create(isObject(proto) ? proto : Object.prototype);
+    var result = Function.apply.call(Target, instance, args);
+    return isObject(result) ? result : instance;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+var document = require('./_global').document;
+module.exports = document && document.documentElement;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
+var $keys = require('./_object-keys-internal');
+var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');
+
+exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
+  return $keys(O, hiddenKeys);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_path.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_path.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_path.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.imul.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.imul.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.imul.js	(date 499162500000)
@@ -0,0 +1,17 @@
+// 20.2.2.18 Math.imul(x, y)
+var $export = require('./_export');
+var $imul = Math.imul;
+
+// some WebKit versions fails with big numbers, some has wrong arity
+$export($export.S + $export.F * require('./_fails')(function () {
+  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
+}), 'Math', {
+  imul: function imul(x, y) {
+    var UINT16 = 0xffff;
+    var xn = +x;
+    var yn = +y;
+    var xl = UINT16 & xn;
+    var yl = UINT16 & yn;
+    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.degrees.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.degrees.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.degrees.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+var RAD_PER_DEG = 180 / Math.PI;
+
+$export($export.S, 'Math', {
+  degrees: function degrees(radians) {
+    return radians * RAD_PER_DEG;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var core = require('./_core');
+var global = require('./_global');
+var SHARED = '__core-js_shared__';
+var store = global[SHARED] || (global[SHARED] = {});
+
+(module.exports = function (key, value) {
+  return store[key] || (store[key] = value !== undefined ? value : {});
+})('versions', []).push({
+  version: core.version,
+  mode: require('./_library') ? 'pure' : 'global',
+  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js	(date 499162500000)
@@ -0,0 +1,19 @@
+// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
+var toIObject = require('./_to-iobject');
+var gOPN = require('./_object-gopn').f;
+var toString = {}.toString;
+
+var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
+  ? Object.getOwnPropertyNames(window) : [];
+
+var getWindowNames = function (it) {
+  try {
+    return gOPN(it);
+  } catch (e) {
+    return windowNames.slice();
+  }
+};
+
+module.exports.f = function getOwnPropertyNames(it) {
+  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_advance-string-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_advance-string-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_advance-string-index.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+var at = require('./_string-at')(true);
+
+ // `AdvanceStringIndex` abstract operation
+// https://tc39.github.io/ecma262/#sec-advancestringindex
+module.exports = function (S, index, unicode) {
+  return index + (unicode ? at(S, index).length : 1);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-string.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.radians.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.radians.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.radians.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+var DEG_PER_RAD = Math.PI / 180;
+
+$export($export.S, 'Math', {
+  radians: function radians(degrees) {
+    return degrees * DEG_PER_RAD;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.metadata.js	(date 499162500000)
@@ -0,0 +1,15 @@
+var $metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var aFunction = require('./_a-function');
+var toMetaKey = $metadata.key;
+var ordinaryDefineOwnMetadata = $metadata.set;
+
+$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
+  return function decorator(target, targetKey) {
+    ordinaryDefineOwnMetadata(
+      metadataKey, metadataValue,
+      (targetKey !== undefined ? anObject : aFunction)(target),
+      toMetaKey(targetKey)
+    );
+  };
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
+$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.own-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.own-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.own-keys.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 26.1.11 Reflect.ownKeys(target)
+var $export = require('./_export');
+
+$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-safe-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-safe-integer.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.1.2.5 Number.isSafeInteger(number)
+var $export = require('./_export');
+var isInteger = require('./_is-integer');
+var abs = Math.abs;
+
+$export($export.S, 'Number', {
+  isSafeInteger: function isSafeInteger(number) {
+    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_strict-method.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_strict-method.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_strict-method.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var fails = require('./_fails');
+
+module.exports = function (method, arg) {
+  return !!method && fails(function () {
+    // eslint-disable-next-line no-useless-call
+    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
+  });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.fill.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.fill.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.fill.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
+var $export = require('./_export');
+
+$export($export.P, 'Array', { fill: require('./_array-fill') });
+
+require('./_add-to-unscopables')('fill');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.set.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+var strong = require('./_collection-strong');
+var validate = require('./_validate-collection');
+var SET = 'Set';
+
+// 23.2 Set Objects
+module.exports = require('./_collection')(SET, function (get) {
+  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
+}, {
+  // 23.2.3.1 Set.prototype.add(value)
+  add: function add(value) {
+    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
+  }
+}, strong);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-reduce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-reduce.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-reduce.js	(date 499162500000)
@@ -0,0 +1,28 @@
+var aFunction = require('./_a-function');
+var toObject = require('./_to-object');
+var IObject = require('./_iobject');
+var toLength = require('./_to-length');
+
+module.exports = function (that, callbackfn, aLen, memo, isRight) {
+  aFunction(callbackfn);
+  var O = toObject(that);
+  var self = IObject(O);
+  var length = toLength(O.length);
+  var index = isRight ? length - 1 : 0;
+  var i = isRight ? -1 : 1;
+  if (aLen < 2) for (;;) {
+    if (index in self) {
+      memo = self[index];
+      index += i;
+      break;
+    }
+    index += i;
+    if (isRight ? index < 0 : length <= index) {
+      throw TypeError('Reduce of empty array with no initial value');
+    }
+  }
+  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
+    memo = callbackfn(memo, self[index], index, O);
+  }
+  return memo;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-context.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-context.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-context.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// helper for String#{startsWith, endsWith, includes}
+var isRegExp = require('./_is-regexp');
+var defined = require('./_defined');
+
+module.exports = function (that, searchString, NAME) {
+  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
+  return String(defined(that));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.flags.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.flags.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.flags.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-from-iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-from-iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-from-iterable.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var forOf = require('./_for-of');
+
+module.exports = function (iter, ITERATOR) {
+  var result = [];
+  forOf(iter, false, result.push, result, ITERATOR);
+  return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_create-property.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+var $defineProperty = require('./_object-dp');
+var createDesc = require('./_property-desc');
+
+module.exports = function (object, index, value) {
+  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
+  else object[index] = value;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.function.part.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.function.part.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.function.part.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var path = require('./_path');
+var $export = require('./_export');
+
+// Placeholder
+require('./_core')._ = path._ = path._ || {};
+
+$export($export.P + $export.F, 'Function', { part: require('./_partial') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-collection-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-collection-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-collection-of.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// https://tc39.github.io/proposal-setmap-offrom/
+var $export = require('./_export');
+
+module.exports = function (COLLECTION) {
+  $export($export.S, COLLECTION, { of: function of() {
+    var length = arguments.length;
+    var A = new Array(length);
+    while (length--) A[length] = arguments[length];
+    return new this(A);
+  } });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.species.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.species.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_set-species')('Array');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// Thank's IE8 for his funny defineProperty
+module.exports = !require('./_fails')(function () {
+  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_regexp-exec-abstract.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_regexp-exec-abstract.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_regexp-exec-abstract.js	(date 499162500000)
@@ -0,0 +1,1 @@
+// empty
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-trim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-trim.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-trim.js	(date 499162500000)
@@ -0,0 +1,30 @@
+var $export = require('./_export');
+var defined = require('./_defined');
+var fails = require('./_fails');
+var spaces = require('./_string-ws');
+var space = '[' + spaces + ']';
+var non = '\u200b\u0085';
+var ltrim = RegExp('^' + space + space + '*');
+var rtrim = RegExp(space + space + '*$');
+
+var exporter = function (KEY, exec, ALIAS) {
+  var exp = {};
+  var FORCE = fails(function () {
+    return !!spaces[KEY]() || non[KEY]() != non;
+  });
+  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
+  if (ALIAS) exp[ALIAS] = fn;
+  $export($export.P + $export.F * FORCE, 'String', exp);
+};
+
+// 1 -> String#trimLeft
+// 2 -> String#trimRight
+// 3 -> String#trim
+var trim = exporter.trim = function (string, TYPE) {
+  string = String(defined(string));
+  if (TYPE & 1) string = string.replace(ltrim, '');
+  if (TYPE & 2) string = string.replace(rtrim, '');
+  return string;
+};
+
+module.exports = exporter;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.trunc.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.trunc.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.trunc.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.34 Math.trunc(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  trunc: function trunc(it) {
+    return (it > 0 ? Math.floor : Math.ceil)(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-copy-within.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-copy-within.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-copy-within.js	(date 499162500000)
@@ -0,0 +1,26 @@
+// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
+'use strict';
+var toObject = require('./_to-object');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+
+module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
+  var O = toObject(this);
+  var len = toLength(O.length);
+  var to = toAbsoluteIndex(target, len);
+  var from = toAbsoluteIndex(start, len);
+  var end = arguments.length > 2 ? arguments[2] : undefined;
+  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
+  var inc = 1;
+  if (from < to && to < from + count) {
+    inc = -1;
+    from += count - 1;
+    to += count - 1;
+  }
+  while (count-- > 0) {
+    if (from in O) O[to] = O[from];
+    else delete O[to];
+    to += inc;
+    from += inc;
+  } return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.delete-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.delete-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.delete-metadata.js	(date 499162500000)
@@ -0,0 +1,15 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var toMetaKey = metadata.key;
+var getOrCreateMetadataMap = metadata.map;
+var store = metadata.store;
+
+metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
+  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
+  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
+  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
+  if (metadataMap.size) return true;
+  var targetMetadata = store.get(target);
+  targetMetadata['delete'](targetKey);
+  return !!targetMetadata.size || store['delete'](target);
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-sign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-sign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-sign.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 20.2.2.28 Math.sign(x)
+module.exports = Math.sign || function sign(x) {
+  // eslint-disable-next-line no-self-compare
+  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.trim-left.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.trim-left.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.trim-left.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
+require('./_string-trim')('trimLeft', function ($trim) {
+  return function trimLeft() {
+    return $trim(this, 1);
+  };
+}, 'trimStart');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var anObject = require('./_an-object');
+var IE8_DOM_DEFINE = require('./_ie8-dom-define');
+var toPrimitive = require('./_to-primitive');
+var dP = Object.defineProperty;
+
+exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
+  anObject(O);
+  P = toPrimitive(P, true);
+  anObject(Attributes);
+  if (IE8_DOM_DEFINE) try {
+    return dP(O, P, Attributes);
+  } catch (e) { /* empty */ }
+  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
+  if ('value' in Attributes) O[P] = Attributes.value;
+  return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.try.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.try.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.try.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// https://github.com/tc39/proposal-promise-try
+var $export = require('./_export');
+var newPromiseCapability = require('./_new-promise-capability');
+var perform = require('./_perform');
+
+$export($export.S, 'Promise', { 'try': function (callbackfn) {
+  var promiseCapability = newPromiseCapability.f(this);
+  var result = perform(callbackfn);
+  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
+  return promiseCapability.promise;
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.min-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.min-safe-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.min-safe-integer.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.10 Number.MIN_SAFE_INTEGER
+var $export = require('./_export');
+
+$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_keyof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_keyof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_keyof.js	(date 499162500000)
@@ -0,0 +1,10 @@
+var getKeys = require('./_object-keys');
+var toIObject = require('./_to-iobject');
+module.exports = function (object, el) {
+  var O = toIObject(object);
+  var keys = getKeys(O);
+  var length = keys.length;
+  var index = 0;
+  var key;
+  while (length > index) if (O[key = keys[index++]] === el) return key;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-sealed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-sealed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.is-sealed.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 19.1.2.13 Object.isSealed(O)
+var isObject = require('./_is-object');
+
+require('./_object-sap')('isSealed', function ($isSealed) {
+  return function isSealed(it) {
+    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.map.to-json.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/DavidBruant/Map-Set.prototype.toJSON
+var $export = require('./_export');
+
+$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js	(date 499162500000)
@@ -0,0 +1,1 @@
+exports.f = Object.getOwnPropertySymbols;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.delete-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.delete-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.delete-property.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// 26.1.4 Reflect.deleteProperty(target, propertyKey)
+var $export = require('./_export');
+var gOPD = require('./_object-gopd').f;
+var anObject = require('./_an-object');
+
+$export($export.S, 'Reflect', {
+  deleteProperty: function deleteProperty(target, propertyKey) {
+    var desc = gOPD(anObject(target), propertyKey);
+    return desc && !desc.configurable ? false : delete target[propertyKey];
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-strong.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-strong.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-strong.js	(date 499162500000)
@@ -0,0 +1,144 @@
+'use strict';
+var dP = require('./_object-dp').f;
+var create = require('./_object-create');
+var redefineAll = require('./_redefine-all');
+var ctx = require('./_ctx');
+var anInstance = require('./_an-instance');
+var forOf = require('./_for-of');
+var $iterDefine = require('./_iter-define');
+var step = require('./_iter-step');
+var setSpecies = require('./_set-species');
+var DESCRIPTORS = require('./_descriptors');
+var fastKey = require('./_meta').fastKey;
+var validate = require('./_validate-collection');
+var SIZE = DESCRIPTORS ? '_s' : 'size';
+
+var getEntry = function (that, key) {
+  // fast case
+  var index = fastKey(key);
+  var entry;
+  if (index !== 'F') return that._i[index];
+  // frozen object case
+  for (entry = that._f; entry; entry = entry.n) {
+    if (entry.k == key) return entry;
+  }
+};
+
+module.exports = {
+  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
+    var C = wrapper(function (that, iterable) {
+      anInstance(that, C, NAME, '_i');
+      that._t = NAME;         // collection type
+      that._i = create(null); // index
+      that._f = undefined;    // first entry
+      that._l = undefined;    // last entry
+      that[SIZE] = 0;         // size
+      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
+    });
+    redefineAll(C.prototype, {
+      // 23.1.3.1 Map.prototype.clear()
+      // 23.2.3.2 Set.prototype.clear()
+      clear: function clear() {
+        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
+          entry.r = true;
+          if (entry.p) entry.p = entry.p.n = undefined;
+          delete data[entry.i];
+        }
+        that._f = that._l = undefined;
+        that[SIZE] = 0;
+      },
+      // 23.1.3.3 Map.prototype.delete(key)
+      // 23.2.3.4 Set.prototype.delete(value)
+      'delete': function (key) {
+        var that = validate(this, NAME);
+        var entry = getEntry(that, key);
+        if (entry) {
+          var next = entry.n;
+          var prev = entry.p;
+          delete that._i[entry.i];
+          entry.r = true;
+          if (prev) prev.n = next;
+          if (next) next.p = prev;
+          if (that._f == entry) that._f = next;
+          if (that._l == entry) that._l = prev;
+          that[SIZE]--;
+        } return !!entry;
+      },
+      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
+      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
+      forEach: function forEach(callbackfn /* , that = undefined */) {
+        validate(this, NAME);
+        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
+        var entry;
+        while (entry = entry ? entry.n : this._f) {
+          f(entry.v, entry.k, this);
+          // revert to the last existing entry
+          while (entry && entry.r) entry = entry.p;
+        }
+      },
+      // 23.1.3.7 Map.prototype.has(key)
+      // 23.2.3.7 Set.prototype.has(value)
+      has: function has(key) {
+        return !!getEntry(validate(this, NAME), key);
+      }
+    });
+    if (DESCRIPTORS) dP(C.prototype, 'size', {
+      get: function () {
+        return validate(this, NAME)[SIZE];
+      }
+    });
+    return C;
+  },
+  def: function (that, key, value) {
+    var entry = getEntry(that, key);
+    var prev, index;
+    // change existing entry
+    if (entry) {
+      entry.v = value;
+    // create new entry
+    } else {
+      that._l = entry = {
+        i: index = fastKey(key, true), // <- index
+        k: key,                        // <- key
+        v: value,                      // <- value
+        p: prev = that._l,             // <- previous entry
+        n: undefined,                  // <- next entry
+        r: false                       // <- removed
+      };
+      if (!that._f) that._f = entry;
+      if (prev) prev.n = entry;
+      that[SIZE]++;
+      // add to index
+      if (index !== 'F') that._i[index] = entry;
+    } return that;
+  },
+  getEntry: getEntry,
+  setStrong: function (C, NAME, IS_MAP) {
+    // add .keys, .values, .entries, [@@iterator]
+    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
+    $iterDefine(C, NAME, function (iterated, kind) {
+      this._t = validate(iterated, NAME); // target
+      this._k = kind;                     // kind
+      this._l = undefined;                // previous
+    }, function () {
+      var that = this;
+      var kind = that._k;
+      var entry = that._l;
+      // revert to the last existing entry
+      while (entry && entry.r) entry = entry.p;
+      // get next entry
+      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
+        // or finish the iteration
+        that._t = undefined;
+        return step(1);
+      }
+      // return step by kind
+      if (kind == 'keys') return step(0, entry.k);
+      if (kind == 'values') return step(0, entry.v);
+      return step(0, [entry.k, entry.v]);
+    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);
+
+    // add [@@species], 23.1.2.2, 23.2.2.2
+    setSpecies(NAME);
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.replace.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.replace.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.replace.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.14 Object.keys(O)
+var toObject = require('./_to-object');
+var $keys = require('./_object-keys');
+
+require('./_object-sap')('keys', function () {
+  return function keys(it) {
+    return $keys(toObject(it));
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
+require('./_set-collection-of')('Set');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_bind.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_bind.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_bind.js	(date 499162500000)
@@ -0,0 +1,25 @@
+'use strict';
+var aFunction = require('./_a-function');
+var isObject = require('./_is-object');
+var invoke = require('./_invoke');
+var arraySlice = [].slice;
+var factories = {};
+
+var construct = function (F, len, args) {
+  if (!(len in factories)) {
+    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
+    // eslint-disable-next-line no-new-func
+    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
+  } return factories[len](F, args);
+};
+
+module.exports = Function.bind || function bind(that /* , ...args */) {
+  var fn = aFunction(this);
+  var partArgs = arraySlice.call(arguments, 1);
+  var bound = function (/* args... */) {
+    var args = partArgs.concat(arraySlice.call(arguments));
+    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
+  };
+  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
+  return bound;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.find-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.find-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.find-index.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
+var $export = require('./_export');
+var $find = require('./_array-methods')(6);
+var KEY = 'findIndex';
+var forced = true;
+// Shouldn't skip holes
+if (KEY in []) Array(1)[KEY](function () { forced = false; });
+$export($export.P + $export.F * forced, 'Array', {
+  findIndex: function findIndex(callbackfn /* , that = undefined */) {
+    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
+require('./_add-to-unscopables')(KEY);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed-array.js	(date 499162500000)
@@ -0,0 +1,480 @@
+'use strict';
+if (require('./_descriptors')) {
+  var LIBRARY = require('./_library');
+  var global = require('./_global');
+  var fails = require('./_fails');
+  var $export = require('./_export');
+  var $typed = require('./_typed');
+  var $buffer = require('./_typed-buffer');
+  var ctx = require('./_ctx');
+  var anInstance = require('./_an-instance');
+  var propertyDesc = require('./_property-desc');
+  var hide = require('./_hide');
+  var redefineAll = require('./_redefine-all');
+  var toInteger = require('./_to-integer');
+  var toLength = require('./_to-length');
+  var toIndex = require('./_to-index');
+  var toAbsoluteIndex = require('./_to-absolute-index');
+  var toPrimitive = require('./_to-primitive');
+  var has = require('./_has');
+  var classof = require('./_classof');
+  var isObject = require('./_is-object');
+  var toObject = require('./_to-object');
+  var isArrayIter = require('./_is-array-iter');
+  var create = require('./_object-create');
+  var getPrototypeOf = require('./_object-gpo');
+  var gOPN = require('./_object-gopn').f;
+  var getIterFn = require('./core.get-iterator-method');
+  var uid = require('./_uid');
+  var wks = require('./_wks');
+  var createArrayMethod = require('./_array-methods');
+  var createArrayIncludes = require('./_array-includes');
+  var speciesConstructor = require('./_species-constructor');
+  var ArrayIterators = require('./es6.array.iterator');
+  var Iterators = require('./_iterators');
+  var $iterDetect = require('./_iter-detect');
+  var setSpecies = require('./_set-species');
+  var arrayFill = require('./_array-fill');
+  var arrayCopyWithin = require('./_array-copy-within');
+  var $DP = require('./_object-dp');
+  var $GOPD = require('./_object-gopd');
+  var dP = $DP.f;
+  var gOPD = $GOPD.f;
+  var RangeError = global.RangeError;
+  var TypeError = global.TypeError;
+  var Uint8Array = global.Uint8Array;
+  var ARRAY_BUFFER = 'ArrayBuffer';
+  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
+  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
+  var PROTOTYPE = 'prototype';
+  var ArrayProto = Array[PROTOTYPE];
+  var $ArrayBuffer = $buffer.ArrayBuffer;
+  var $DataView = $buffer.DataView;
+  var arrayForEach = createArrayMethod(0);
+  var arrayFilter = createArrayMethod(2);
+  var arraySome = createArrayMethod(3);
+  var arrayEvery = createArrayMethod(4);
+  var arrayFind = createArrayMethod(5);
+  var arrayFindIndex = createArrayMethod(6);
+  var arrayIncludes = createArrayIncludes(true);
+  var arrayIndexOf = createArrayIncludes(false);
+  var arrayValues = ArrayIterators.values;
+  var arrayKeys = ArrayIterators.keys;
+  var arrayEntries = ArrayIterators.entries;
+  var arrayLastIndexOf = ArrayProto.lastIndexOf;
+  var arrayReduce = ArrayProto.reduce;
+  var arrayReduceRight = ArrayProto.reduceRight;
+  var arrayJoin = ArrayProto.join;
+  var arraySort = ArrayProto.sort;
+  var arraySlice = ArrayProto.slice;
+  var arrayToString = ArrayProto.toString;
+  var arrayToLocaleString = ArrayProto.toLocaleString;
+  var ITERATOR = wks('iterator');
+  var TAG = wks('toStringTag');
+  var TYPED_CONSTRUCTOR = uid('typed_constructor');
+  var DEF_CONSTRUCTOR = uid('def_constructor');
+  var ALL_CONSTRUCTORS = $typed.CONSTR;
+  var TYPED_ARRAY = $typed.TYPED;
+  var VIEW = $typed.VIEW;
+  var WRONG_LENGTH = 'Wrong length!';
+
+  var $map = createArrayMethod(1, function (O, length) {
+    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
+  });
+
+  var LITTLE_ENDIAN = fails(function () {
+    // eslint-disable-next-line no-undef
+    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
+  });
+
+  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
+    new Uint8Array(1).set({});
+  });
+
+  var toOffset = function (it, BYTES) {
+    var offset = toInteger(it);
+    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
+    return offset;
+  };
+
+  var validate = function (it) {
+    if (isObject(it) && TYPED_ARRAY in it) return it;
+    throw TypeError(it + ' is not a typed array!');
+  };
+
+  var allocate = function (C, length) {
+    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
+      throw TypeError('It is not a typed array constructor!');
+    } return new C(length);
+  };
+
+  var speciesFromList = function (O, list) {
+    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
+  };
+
+  var fromList = function (C, list) {
+    var index = 0;
+    var length = list.length;
+    var result = allocate(C, length);
+    while (length > index) result[index] = list[index++];
+    return result;
+  };
+
+  var addGetter = function (it, key, internal) {
+    dP(it, key, { get: function () { return this._d[internal]; } });
+  };
+
+  var $from = function from(source /* , mapfn, thisArg */) {
+    var O = toObject(source);
+    var aLen = arguments.length;
+    var mapfn = aLen > 1 ? arguments[1] : undefined;
+    var mapping = mapfn !== undefined;
+    var iterFn = getIterFn(O);
+    var i, length, values, result, step, iterator;
+    if (iterFn != undefined && !isArrayIter(iterFn)) {
+      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
+        values.push(step.value);
+      } O = values;
+    }
+    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
+    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
+      result[i] = mapping ? mapfn(O[i], i) : O[i];
+    }
+    return result;
+  };
+
+  var $of = function of(/* ...items */) {
+    var index = 0;
+    var length = arguments.length;
+    var result = allocate(this, length);
+    while (length > index) result[index] = arguments[index++];
+    return result;
+  };
+
+  // iOS Safari 6.x fails here
+  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });
+
+  var $toLocaleString = function toLocaleString() {
+    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
+  };
+
+  var proto = {
+    copyWithin: function copyWithin(target, start /* , end */) {
+      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
+    },
+    every: function every(callbackfn /* , thisArg */) {
+      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
+      return arrayFill.apply(validate(this), arguments);
+    },
+    filter: function filter(callbackfn /* , thisArg */) {
+      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
+        arguments.length > 1 ? arguments[1] : undefined));
+    },
+    find: function find(predicate /* , thisArg */) {
+      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    findIndex: function findIndex(predicate /* , thisArg */) {
+      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    forEach: function forEach(callbackfn /* , thisArg */) {
+      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    indexOf: function indexOf(searchElement /* , fromIndex */) {
+      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    includes: function includes(searchElement /* , fromIndex */) {
+      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    join: function join(separator) { // eslint-disable-line no-unused-vars
+      return arrayJoin.apply(validate(this), arguments);
+    },
+    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
+      return arrayLastIndexOf.apply(validate(this), arguments);
+    },
+    map: function map(mapfn /* , thisArg */) {
+      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
+      return arrayReduce.apply(validate(this), arguments);
+    },
+    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
+      return arrayReduceRight.apply(validate(this), arguments);
+    },
+    reverse: function reverse() {
+      var that = this;
+      var length = validate(that).length;
+      var middle = Math.floor(length / 2);
+      var index = 0;
+      var value;
+      while (index < middle) {
+        value = that[index];
+        that[index++] = that[--length];
+        that[length] = value;
+      } return that;
+    },
+    some: function some(callbackfn /* , thisArg */) {
+      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    sort: function sort(comparefn) {
+      return arraySort.call(validate(this), comparefn);
+    },
+    subarray: function subarray(begin, end) {
+      var O = validate(this);
+      var length = O.length;
+      var $begin = toAbsoluteIndex(begin, length);
+      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
+        O.buffer,
+        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
+        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
+      );
+    }
+  };
+
+  var $slice = function slice(start, end) {
+    return speciesFromList(this, arraySlice.call(validate(this), start, end));
+  };
+
+  var $set = function set(arrayLike /* , offset */) {
+    validate(this);
+    var offset = toOffset(arguments[1], 1);
+    var length = this.length;
+    var src = toObject(arrayLike);
+    var len = toLength(src.length);
+    var index = 0;
+    if (len + offset > length) throw RangeError(WRONG_LENGTH);
+    while (index < len) this[offset + index] = src[index++];
+  };
+
+  var $iterators = {
+    entries: function entries() {
+      return arrayEntries.call(validate(this));
+    },
+    keys: function keys() {
+      return arrayKeys.call(validate(this));
+    },
+    values: function values() {
+      return arrayValues.call(validate(this));
+    }
+  };
+
+  var isTAIndex = function (target, key) {
+    return isObject(target)
+      && target[TYPED_ARRAY]
+      && typeof key != 'symbol'
+      && key in target
+      && String(+key) == String(key);
+  };
+  var $getDesc = function getOwnPropertyDescriptor(target, key) {
+    return isTAIndex(target, key = toPrimitive(key, true))
+      ? propertyDesc(2, target[key])
+      : gOPD(target, key);
+  };
+  var $setDesc = function defineProperty(target, key, desc) {
+    if (isTAIndex(target, key = toPrimitive(key, true))
+      && isObject(desc)
+      && has(desc, 'value')
+      && !has(desc, 'get')
+      && !has(desc, 'set')
+      // TODO: add validation descriptor w/o calling accessors
+      && !desc.configurable
+      && (!has(desc, 'writable') || desc.writable)
+      && (!has(desc, 'enumerable') || desc.enumerable)
+    ) {
+      target[key] = desc.value;
+      return target;
+    } return dP(target, key, desc);
+  };
+
+  if (!ALL_CONSTRUCTORS) {
+    $GOPD.f = $getDesc;
+    $DP.f = $setDesc;
+  }
+
+  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
+    getOwnPropertyDescriptor: $getDesc,
+    defineProperty: $setDesc
+  });
+
+  if (fails(function () { arrayToString.call({}); })) {
+    arrayToString = arrayToLocaleString = function toString() {
+      return arrayJoin.call(this);
+    };
+  }
+
+  var $TypedArrayPrototype$ = redefineAll({}, proto);
+  redefineAll($TypedArrayPrototype$, $iterators);
+  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
+  redefineAll($TypedArrayPrototype$, {
+    slice: $slice,
+    set: $set,
+    constructor: function () { /* noop */ },
+    toString: arrayToString,
+    toLocaleString: $toLocaleString
+  });
+  addGetter($TypedArrayPrototype$, 'buffer', 'b');
+  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
+  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
+  addGetter($TypedArrayPrototype$, 'length', 'e');
+  dP($TypedArrayPrototype$, TAG, {
+    get: function () { return this[TYPED_ARRAY]; }
+  });
+
+  // eslint-disable-next-line max-statements
+  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
+    CLAMPED = !!CLAMPED;
+    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
+    var GETTER = 'get' + KEY;
+    var SETTER = 'set' + KEY;
+    var TypedArray = global[NAME];
+    var Base = TypedArray || {};
+    var TAC = TypedArray && getPrototypeOf(TypedArray);
+    var FORCED = !TypedArray || !$typed.ABV;
+    var O = {};
+    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
+    var getter = function (that, index) {
+      var data = that._d;
+      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
+    };
+    var setter = function (that, index, value) {
+      var data = that._d;
+      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
+      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
+    };
+    var addElement = function (that, index) {
+      dP(that, index, {
+        get: function () {
+          return getter(this, index);
+        },
+        set: function (value) {
+          return setter(this, index, value);
+        },
+        enumerable: true
+      });
+    };
+    if (FORCED) {
+      TypedArray = wrapper(function (that, data, $offset, $length) {
+        anInstance(that, TypedArray, NAME, '_d');
+        var index = 0;
+        var offset = 0;
+        var buffer, byteLength, length, klass;
+        if (!isObject(data)) {
+          length = toIndex(data);
+          byteLength = length * BYTES;
+          buffer = new $ArrayBuffer(byteLength);
+        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
+          buffer = data;
+          offset = toOffset($offset, BYTES);
+          var $len = data.byteLength;
+          if ($length === undefined) {
+            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
+            byteLength = $len - offset;
+            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
+          } else {
+            byteLength = toLength($length) * BYTES;
+            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
+          }
+          length = byteLength / BYTES;
+        } else if (TYPED_ARRAY in data) {
+          return fromList(TypedArray, data);
+        } else {
+          return $from.call(TypedArray, data);
+        }
+        hide(that, '_d', {
+          b: buffer,
+          o: offset,
+          l: byteLength,
+          e: length,
+          v: new $DataView(buffer)
+        });
+        while (index < length) addElement(that, index++);
+      });
+      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
+      hide(TypedArrayPrototype, 'constructor', TypedArray);
+    } else if (!fails(function () {
+      TypedArray(1);
+    }) || !fails(function () {
+      new TypedArray(-1); // eslint-disable-line no-new
+    }) || !$iterDetect(function (iter) {
+      new TypedArray(); // eslint-disable-line no-new
+      new TypedArray(null); // eslint-disable-line no-new
+      new TypedArray(1.5); // eslint-disable-line no-new
+      new TypedArray(iter); // eslint-disable-line no-new
+    }, true)) {
+      TypedArray = wrapper(function (that, data, $offset, $length) {
+        anInstance(that, TypedArray, NAME);
+        var klass;
+        // `ws` module bug, temporarily remove validation length for Uint8Array
+        // https://github.com/websockets/ws/pull/645
+        if (!isObject(data)) return new Base(toIndex(data));
+        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
+          return $length !== undefined
+            ? new Base(data, toOffset($offset, BYTES), $length)
+            : $offset !== undefined
+              ? new Base(data, toOffset($offset, BYTES))
+              : new Base(data);
+        }
+        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
+        return $from.call(TypedArray, data);
+      });
+      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
+        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
+      });
+      TypedArray[PROTOTYPE] = TypedArrayPrototype;
+      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
+    }
+    var $nativeIterator = TypedArrayPrototype[ITERATOR];
+    var CORRECT_ITER_NAME = !!$nativeIterator
+      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
+    var $iterator = $iterators.values;
+    hide(TypedArray, TYPED_CONSTRUCTOR, true);
+    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
+    hide(TypedArrayPrototype, VIEW, true);
+    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
+
+    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
+      dP(TypedArrayPrototype, TAG, {
+        get: function () { return NAME; }
+      });
+    }
+
+    O[NAME] = TypedArray;
+
+    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
+
+    $export($export.S, NAME, {
+      BYTES_PER_ELEMENT: BYTES
+    });
+
+    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
+      from: $from,
+      of: $of
+    });
+
+    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
+
+    $export($export.P, NAME, proto);
+
+    setSpecies(NAME);
+
+    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });
+
+    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
+
+    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;
+
+    $export($export.P + $export.F * fails(function () {
+      new TypedArray(1).slice();
+    }), NAME, { slice: $slice });
+
+    $export($export.P + $export.F * (fails(function () {
+      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
+    }) || !fails(function () {
+      TypedArrayPrototype.toLocaleString.call([1, 2]);
+    })), NAME, { toLocaleString: $toLocaleString });
+
+    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
+    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
+  };
+} else module.exports = function () { /* empty */ };
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.link.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.link.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.link.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.10 String.prototype.link(url)
+require('./_string-html')('link', function (createHTML) {
+  return function link(url) {
+    return createHTML(this, 'a', 'href', url);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint8-clamped-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint8-clamped-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint8-clamped-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint8', 1, function (init) {
+  return function Uint8ClampedArray(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+}, true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.every.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.every.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.every.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $every = require('./_array-methods')(4);
+
+$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
+  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
+  every: function every(callbackfn /* , thisArg */) {
+    return $every(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var def = require('./_object-dp').f;
+var has = require('./_has');
+var TAG = require('./_wks')('toStringTag');
+
+module.exports = function (it, tag, stat) {
+  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-finite.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-finite.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-finite.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.1.2.2 Number.isFinite(number)
+var $export = require('./_export');
+var _isFinite = require('./_global').isFinite;
+
+$export($export.S, 'Number', {
+  isFinite: function isFinite(it) {
+    return typeof it == 'number' && _isFinite(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine-all.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine-all.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var hide = require('./_hide');
+module.exports = function (target, src, safe) {
+  for (var key in src) {
+    if (safe && target[key]) target[key] = src[key];
+    else hide(target, key, src[key]);
+  } return target;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.rad-per-deg.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.rad-per-deg.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.rad-per-deg.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.values.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.values.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.values.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/tc39/proposal-object-values-entries
+var $export = require('./_export');
+var $values = require('./_object-to-array')(false);
+
+$export($export.S, 'Object', {
+  values: function values(it) {
+    return $values(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.umulh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.umulh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.umulh.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  umulh: function umulh(u, v) {
+    var UINT16 = 0xffff;
+    var $u = +u;
+    var $v = +v;
+    var u0 = $u & UINT16;
+    var v0 = $v & UINT16;
+    var u1 = $u >>> 16;
+    var v1 = $v >>> 16;
+    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
+    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
+require('./_set-collection-from')('Set');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.blink.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.blink.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.blink.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.4 String.prototype.blink()
+require('./_string-html')('blink', function (createHTML) {
+  return function blink() {
+    return createHTML(this, 'blink', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js	(date 499162500000)
@@ -0,0 +1,69 @@
+'use strict';
+var LIBRARY = require('./_library');
+var $export = require('./_export');
+var redefine = require('./_redefine');
+var hide = require('./_hide');
+var Iterators = require('./_iterators');
+var $iterCreate = require('./_iter-create');
+var setToStringTag = require('./_set-to-string-tag');
+var getPrototypeOf = require('./_object-gpo');
+var ITERATOR = require('./_wks')('iterator');
+var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
+var FF_ITERATOR = '@@iterator';
+var KEYS = 'keys';
+var VALUES = 'values';
+
+var returnThis = function () { return this; };
+
+module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
+  $iterCreate(Constructor, NAME, next);
+  var getMethod = function (kind) {
+    if (!BUGGY && kind in proto) return proto[kind];
+    switch (kind) {
+      case KEYS: return function keys() { return new Constructor(this, kind); };
+      case VALUES: return function values() { return new Constructor(this, kind); };
+    } return function entries() { return new Constructor(this, kind); };
+  };
+  var TAG = NAME + ' Iterator';
+  var DEF_VALUES = DEFAULT == VALUES;
+  var VALUES_BUG = false;
+  var proto = Base.prototype;
+  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
+  var $default = $native || getMethod(DEFAULT);
+  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
+  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
+  var methods, key, IteratorPrototype;
+  // Fix native
+  if ($anyNative) {
+    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
+    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
+      // Set @@toStringTag to native iterators
+      setToStringTag(IteratorPrototype, TAG, true);
+      // fix for some old engines
+      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
+    }
+  }
+  // fix Array#{values, @@iterator}.name in V8 / FF
+  if (DEF_VALUES && $native && $native.name !== VALUES) {
+    VALUES_BUG = true;
+    $default = function values() { return $native.call(this); };
+  }
+  // Define iterator
+  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
+    hide(proto, ITERATOR, $default);
+  }
+  // Plug for library
+  Iterators[NAME] = $default;
+  Iterators[TAG] = returnThis;
+  if (DEFAULT) {
+    methods = {
+      values: DEF_VALUES ? $default : getMethod(VALUES),
+      keys: IS_SET ? $default : getMethod(KEYS),
+      entries: $entries
+    };
+    if (FORCED) for (key in methods) {
+      if (!(key in proto)) redefine(proto, key, methods[key]);
+    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
+  }
+  return methods;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.prevent-extensions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.prevent-extensions.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.prevent-extensions.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.15 Object.preventExtensions(O)
+var isObject = require('./_is-object');
+var meta = require('./_meta').onFreeze;
+
+require('./_object-sap')('preventExtensions', function ($preventExtensions) {
+  return function preventExtensions(it) {
+    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.asinh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.asinh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.asinh.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.2.2.5 Math.asinh(x)
+var $export = require('./_export');
+var $asinh = Math.asinh;
+
+function asinh(x) {
+  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
+}
+
+// Tor Browser bug: Math.asinh(0) -> -0
+$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-species-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-species-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-species-create.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
+var speciesConstructor = require('./_array-species-constructor');
+
+module.exports = function (original, length) {
+  return new (speciesConstructor(original))(length);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-regexp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-regexp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-regexp.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 7.2.8 IsRegExp(argument)
+var isObject = require('./_is-object');
+var cof = require('./_cof');
+var MATCH = require('./_wks')('match');
+module.exports = function (it) {
+  var isRegExp;
+  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log1p.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log1p.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.log1p.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.20 Math.log1p(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', { log1p: require('./_math-log1p') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.cbrt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.cbrt.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.cbrt.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.2.2.9 Math.cbrt(x)
+var $export = require('./_export');
+var sign = require('./_math-sign');
+
+$export($export.S, 'Math', {
+  cbrt: function cbrt(x) {
+    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.prevent-extensions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.prevent-extensions.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.prevent-extensions.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// 26.1.12 Reflect.preventExtensions(target)
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var $preventExtensions = Object.preventExtensions;
+
+$export($export.S, 'Reflect', {
+  preventExtensions: function preventExtensions(target) {
+    anObject(target);
+    try {
+      if ($preventExtensions) $preventExtensions(target);
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-define.js	(date 499162500000)
@@ -0,0 +1,13 @@
+var dP = require('./_object-dp');
+var gOPD = require('./_object-gopd');
+var ownKeys = require('./_own-keys');
+var toIObject = require('./_to-iobject');
+
+module.exports = function define(target, mixin) {
+  var keys = ownKeys(toIObject(mixin));
+  var length = keys.length;
+  var i = 0;
+  var key;
+  while (length > i) dP.f(target, key = keys[i++], gOPD.f(mixin, key));
+  return target;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-collection-from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-collection-from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-collection-from.js	(date 499162500000)
@@ -0,0 +1,28 @@
+'use strict';
+// https://tc39.github.io/proposal-setmap-offrom/
+var $export = require('./_export');
+var aFunction = require('./_a-function');
+var ctx = require('./_ctx');
+var forOf = require('./_for-of');
+
+module.exports = function (COLLECTION) {
+  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
+    var mapFn = arguments[1];
+    var mapping, A, n, cb;
+    aFunction(this);
+    mapping = mapFn !== undefined;
+    if (mapping) aFunction(mapFn);
+    if (source == undefined) return new this();
+    A = [];
+    if (mapping) {
+      n = 0;
+      cb = ctx(mapFn, arguments[2], 2);
+      forOf(source, false, function (nextItem) {
+        A.push(cb(nextItem, n++));
+      });
+    } else {
+      forOf(source, false, A.push, A);
+    }
+    return new this(A);
+  } });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var anObject = require('./_an-object');
+var get = require('./core.get-iterator-method');
+module.exports = require('./_core').getIterator = function (it) {
+  var iterFn = get(it);
+  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
+  return anObject(iterFn.call(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed-buffer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed-buffer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed-buffer.js	(date 499162500000)
@@ -0,0 +1,276 @@
+'use strict';
+var global = require('./_global');
+var DESCRIPTORS = require('./_descriptors');
+var LIBRARY = require('./_library');
+var $typed = require('./_typed');
+var hide = require('./_hide');
+var redefineAll = require('./_redefine-all');
+var fails = require('./_fails');
+var anInstance = require('./_an-instance');
+var toInteger = require('./_to-integer');
+var toLength = require('./_to-length');
+var toIndex = require('./_to-index');
+var gOPN = require('./_object-gopn').f;
+var dP = require('./_object-dp').f;
+var arrayFill = require('./_array-fill');
+var setToStringTag = require('./_set-to-string-tag');
+var ARRAY_BUFFER = 'ArrayBuffer';
+var DATA_VIEW = 'DataView';
+var PROTOTYPE = 'prototype';
+var WRONG_LENGTH = 'Wrong length!';
+var WRONG_INDEX = 'Wrong index!';
+var $ArrayBuffer = global[ARRAY_BUFFER];
+var $DataView = global[DATA_VIEW];
+var Math = global.Math;
+var RangeError = global.RangeError;
+// eslint-disable-next-line no-shadow-restricted-names
+var Infinity = global.Infinity;
+var BaseBuffer = $ArrayBuffer;
+var abs = Math.abs;
+var pow = Math.pow;
+var floor = Math.floor;
+var log = Math.log;
+var LN2 = Math.LN2;
+var BUFFER = 'buffer';
+var BYTE_LENGTH = 'byteLength';
+var BYTE_OFFSET = 'byteOffset';
+var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
+var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
+var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;
+
+// IEEE754 conversions based on https://github.com/feross/ieee754
+function packIEEE754(value, mLen, nBytes) {
+  var buffer = new Array(nBytes);
+  var eLen = nBytes * 8 - mLen - 1;
+  var eMax = (1 << eLen) - 1;
+  var eBias = eMax >> 1;
+  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
+  var i = 0;
+  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
+  var e, m, c;
+  value = abs(value);
+  // eslint-disable-next-line no-self-compare
+  if (value != value || value === Infinity) {
+    // eslint-disable-next-line no-self-compare
+    m = value != value ? 1 : 0;
+    e = eMax;
+  } else {
+    e = floor(log(value) / LN2);
+    if (value * (c = pow(2, -e)) < 1) {
+      e--;
+      c *= 2;
+    }
+    if (e + eBias >= 1) {
+      value += rt / c;
+    } else {
+      value += rt * pow(2, 1 - eBias);
+    }
+    if (value * c >= 2) {
+      e++;
+      c /= 2;
+    }
+    if (e + eBias >= eMax) {
+      m = 0;
+      e = eMax;
+    } else if (e + eBias >= 1) {
+      m = (value * c - 1) * pow(2, mLen);
+      e = e + eBias;
+    } else {
+      m = value * pow(2, eBias - 1) * pow(2, mLen);
+      e = 0;
+    }
+  }
+  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
+  e = e << mLen | m;
+  eLen += mLen;
+  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
+  buffer[--i] |= s * 128;
+  return buffer;
+}
+function unpackIEEE754(buffer, mLen, nBytes) {
+  var eLen = nBytes * 8 - mLen - 1;
+  var eMax = (1 << eLen) - 1;
+  var eBias = eMax >> 1;
+  var nBits = eLen - 7;
+  var i = nBytes - 1;
+  var s = buffer[i--];
+  var e = s & 127;
+  var m;
+  s >>= 7;
+  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
+  m = e & (1 << -nBits) - 1;
+  e >>= -nBits;
+  nBits += mLen;
+  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
+  if (e === 0) {
+    e = 1 - eBias;
+  } else if (e === eMax) {
+    return m ? NaN : s ? -Infinity : Infinity;
+  } else {
+    m = m + pow(2, mLen);
+    e = e - eBias;
+  } return (s ? -1 : 1) * m * pow(2, e - mLen);
+}
+
+function unpackI32(bytes) {
+  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
+}
+function packI8(it) {
+  return [it & 0xff];
+}
+function packI16(it) {
+  return [it & 0xff, it >> 8 & 0xff];
+}
+function packI32(it) {
+  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
+}
+function packF64(it) {
+  return packIEEE754(it, 52, 8);
+}
+function packF32(it) {
+  return packIEEE754(it, 23, 4);
+}
+
+function addGetter(C, key, internal) {
+  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
+}
+
+function get(view, bytes, index, isLittleEndian) {
+  var numIndex = +index;
+  var intIndex = toIndex(numIndex);
+  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
+  var store = view[$BUFFER]._b;
+  var start = intIndex + view[$OFFSET];
+  var pack = store.slice(start, start + bytes);
+  return isLittleEndian ? pack : pack.reverse();
+}
+function set(view, bytes, index, conversion, value, isLittleEndian) {
+  var numIndex = +index;
+  var intIndex = toIndex(numIndex);
+  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
+  var store = view[$BUFFER]._b;
+  var start = intIndex + view[$OFFSET];
+  var pack = conversion(+value);
+  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
+}
+
+if (!$typed.ABV) {
+  $ArrayBuffer = function ArrayBuffer(length) {
+    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
+    var byteLength = toIndex(length);
+    this._b = arrayFill.call(new Array(byteLength), 0);
+    this[$LENGTH] = byteLength;
+  };
+
+  $DataView = function DataView(buffer, byteOffset, byteLength) {
+    anInstance(this, $DataView, DATA_VIEW);
+    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
+    var bufferLength = buffer[$LENGTH];
+    var offset = toInteger(byteOffset);
+    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
+    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
+    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
+    this[$BUFFER] = buffer;
+    this[$OFFSET] = offset;
+    this[$LENGTH] = byteLength;
+  };
+
+  if (DESCRIPTORS) {
+    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
+    addGetter($DataView, BUFFER, '_b');
+    addGetter($DataView, BYTE_LENGTH, '_l');
+    addGetter($DataView, BYTE_OFFSET, '_o');
+  }
+
+  redefineAll($DataView[PROTOTYPE], {
+    getInt8: function getInt8(byteOffset) {
+      return get(this, 1, byteOffset)[0] << 24 >> 24;
+    },
+    getUint8: function getUint8(byteOffset) {
+      return get(this, 1, byteOffset)[0];
+    },
+    getInt16: function getInt16(byteOffset /* , littleEndian */) {
+      var bytes = get(this, 2, byteOffset, arguments[1]);
+      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
+    },
+    getUint16: function getUint16(byteOffset /* , littleEndian */) {
+      var bytes = get(this, 2, byteOffset, arguments[1]);
+      return bytes[1] << 8 | bytes[0];
+    },
+    getInt32: function getInt32(byteOffset /* , littleEndian */) {
+      return unpackI32(get(this, 4, byteOffset, arguments[1]));
+    },
+    getUint32: function getUint32(byteOffset /* , littleEndian */) {
+      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
+    },
+    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
+      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
+    },
+    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
+      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
+    },
+    setInt8: function setInt8(byteOffset, value) {
+      set(this, 1, byteOffset, packI8, value);
+    },
+    setUint8: function setUint8(byteOffset, value) {
+      set(this, 1, byteOffset, packI8, value);
+    },
+    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
+      set(this, 2, byteOffset, packI16, value, arguments[2]);
+    },
+    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
+      set(this, 2, byteOffset, packI16, value, arguments[2]);
+    },
+    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
+      set(this, 4, byteOffset, packI32, value, arguments[2]);
+    },
+    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
+      set(this, 4, byteOffset, packI32, value, arguments[2]);
+    },
+    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
+      set(this, 4, byteOffset, packF32, value, arguments[2]);
+    },
+    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
+      set(this, 8, byteOffset, packF64, value, arguments[2]);
+    }
+  });
+} else {
+  if (!fails(function () {
+    $ArrayBuffer(1);
+  }) || !fails(function () {
+    new $ArrayBuffer(-1); // eslint-disable-line no-new
+  }) || fails(function () {
+    new $ArrayBuffer(); // eslint-disable-line no-new
+    new $ArrayBuffer(1.5); // eslint-disable-line no-new
+    new $ArrayBuffer(NaN); // eslint-disable-line no-new
+    return $ArrayBuffer.name != ARRAY_BUFFER;
+  })) {
+    $ArrayBuffer = function ArrayBuffer(length) {
+      anInstance(this, $ArrayBuffer);
+      return new BaseBuffer(toIndex(length));
+    };
+    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
+    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
+      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
+    }
+    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
+  }
+  // iOS Safari 7.x bug
+  var view = new $DataView(new $ArrayBuffer(2));
+  var $setInt8 = $DataView[PROTOTYPE].setInt8;
+  view.setInt8(0, 2147483648);
+  view.setInt8(1, 2147483649);
+  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
+    setInt8: function setInt8(byteOffset, value) {
+      $setInt8.call(this, byteOffset, value << 24 >> 24);
+    },
+    setUint8: function setUint8(byteOffset, value) {
+      $setInt8.call(this, byteOffset, value << 24 >> 24);
+    }
+  }, true);
+}
+setToStringTag($ArrayBuffer, ARRAY_BUFFER);
+setToStringTag($DataView, DATA_VIEW);
+hide($DataView[PROTOTYPE], $typed.VIEW, true);
+exports[ARRAY_BUFFER] = $ArrayBuffer;
+exports[DATA_VIEW] = $DataView;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.lookup-getter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.lookup-getter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.lookup-getter.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+var getPrototypeOf = require('./_object-gpo');
+var getOwnPropertyDescriptor = require('./_object-gopd').f;
+
+// B.2.2.4 Object.prototype.__lookupGetter__(P)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __lookupGetter__: function __lookupGetter__(P) {
+    var O = toObject(this);
+    var K = toPrimitive(P, true);
+    var D;
+    do {
+      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
+    } while (O = getPrototypeOf(O));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// optional / simple context binding
+var aFunction = require('./_a-function');
+module.exports = function (fn, that, length) {
+  aFunction(fn);
+  if (that === undefined) return fn;
+  switch (length) {
+    case 1: return function (a) {
+      return fn.call(that, a);
+    };
+    case 2: return function (a, b) {
+      return fn.call(that, a, b);
+    };
+    case 3: return function (a, b, c) {
+      return fn.call(that, a, b, c);
+    };
+  }
+  return function (/* ...args */) {
+    return fn.apply(that, arguments);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-weak.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-weak.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-weak.js	(date 499162500000)
@@ -0,0 +1,85 @@
+'use strict';
+var redefineAll = require('./_redefine-all');
+var getWeak = require('./_meta').getWeak;
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var anInstance = require('./_an-instance');
+var forOf = require('./_for-of');
+var createArrayMethod = require('./_array-methods');
+var $has = require('./_has');
+var validate = require('./_validate-collection');
+var arrayFind = createArrayMethod(5);
+var arrayFindIndex = createArrayMethod(6);
+var id = 0;
+
+// fallback for uncaught frozen keys
+var uncaughtFrozenStore = function (that) {
+  return that._l || (that._l = new UncaughtFrozenStore());
+};
+var UncaughtFrozenStore = function () {
+  this.a = [];
+};
+var findUncaughtFrozen = function (store, key) {
+  return arrayFind(store.a, function (it) {
+    return it[0] === key;
+  });
+};
+UncaughtFrozenStore.prototype = {
+  get: function (key) {
+    var entry = findUncaughtFrozen(this, key);
+    if (entry) return entry[1];
+  },
+  has: function (key) {
+    return !!findUncaughtFrozen(this, key);
+  },
+  set: function (key, value) {
+    var entry = findUncaughtFrozen(this, key);
+    if (entry) entry[1] = value;
+    else this.a.push([key, value]);
+  },
+  'delete': function (key) {
+    var index = arrayFindIndex(this.a, function (it) {
+      return it[0] === key;
+    });
+    if (~index) this.a.splice(index, 1);
+    return !!~index;
+  }
+};
+
+module.exports = {
+  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
+    var C = wrapper(function (that, iterable) {
+      anInstance(that, C, NAME, '_i');
+      that._t = NAME;      // collection type
+      that._i = id++;      // collection id
+      that._l = undefined; // leak store for uncaught frozen objects
+      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
+    });
+    redefineAll(C.prototype, {
+      // 23.3.3.2 WeakMap.prototype.delete(key)
+      // 23.4.3.3 WeakSet.prototype.delete(value)
+      'delete': function (key) {
+        if (!isObject(key)) return false;
+        var data = getWeak(key);
+        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
+        return data && $has(data, this._i) && delete data[this._i];
+      },
+      // 23.3.3.4 WeakMap.prototype.has(key)
+      // 23.4.3.4 WeakSet.prototype.has(value)
+      has: function has(key) {
+        if (!isObject(key)) return false;
+        var data = getWeak(key);
+        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
+        return data && $has(data, this._i);
+      }
+    });
+    return C;
+  },
+  def: function (that, key, value) {
+    var data = getWeak(anObject(key), true);
+    if (data === true) uncaughtFrozenStore(that).set(key, value);
+    else data[that._i] = value;
+    return that;
+  },
+  ufstore: uncaughtFrozenStore
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.has.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.has.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.has.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 26.1.9 Reflect.has(target, propertyKey)
+var $export = require('./_export');
+
+$export($export.S, 'Reflect', {
+  has: function has(target, propertyKey) {
+    return propertyKey in target;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_an-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_an-instance.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_an-instance.js	(date 499162500000)
@@ -0,0 +1,5 @@
+module.exports = function (it, Constructor, name, forbiddenField) {
+  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
+    throw TypeError(name + ': incorrect invocation!');
+  } return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.strike.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.strike.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.strike.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.12 String.prototype.strike()
+require('./_string-html')('strike', function (createHTML) {
+  return function strike() {
+    return createHTML(this, 'strike', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.clz32.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.clz32.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.clz32.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.11 Math.clz32(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  clz32: function clz32(x) {
+    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.weak-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.weak-map.js	(date 499162500000)
@@ -0,0 +1,60 @@
+'use strict';
+var global = require('./_global');
+var each = require('./_array-methods')(0);
+var redefine = require('./_redefine');
+var meta = require('./_meta');
+var assign = require('./_object-assign');
+var weak = require('./_collection-weak');
+var isObject = require('./_is-object');
+var validate = require('./_validate-collection');
+var NATIVE_WEAK_MAP = require('./_validate-collection');
+var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
+var WEAK_MAP = 'WeakMap';
+var getWeak = meta.getWeak;
+var isExtensible = Object.isExtensible;
+var uncaughtFrozenStore = weak.ufstore;
+var InternalMap;
+
+var wrapper = function (get) {
+  return function WeakMap() {
+    return get(this, arguments.length > 0 ? arguments[0] : undefined);
+  };
+};
+
+var methods = {
+  // 23.3.3.3 WeakMap.prototype.get(key)
+  get: function get(key) {
+    if (isObject(key)) {
+      var data = getWeak(key);
+      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
+      return data ? data[this._i] : undefined;
+    }
+  },
+  // 23.3.3.5 WeakMap.prototype.set(key, value)
+  set: function set(key, value) {
+    return weak.def(validate(this, WEAK_MAP), key, value);
+  }
+};
+
+// 23.3 WeakMap Objects
+var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);
+
+// IE11 WeakMap frozen keys fix
+if (NATIVE_WEAK_MAP && IS_IE11) {
+  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
+  assign(InternalMap.prototype, methods);
+  meta.NEED = true;
+  each(['delete', 'has', 'get', 'set'], function (key) {
+    var proto = $WeakMap.prototype;
+    var method = proto[key];
+    redefine(proto, key, function (a, b) {
+      // store frozen objects on internal weakmap shim
+      if (isObject(a) && !isExtensible(a)) {
+        if (!this._f) this._f = new InternalMap();
+        var result = this._f[key](a, b);
+        return key == 'set' ? this : result;
+      // store all the rest on native weakmap
+      } return method.call(this, a, b);
+    });
+  });
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js	(date 499162500000)
@@ -0,0 +1,286 @@
+'use strict';
+var LIBRARY = require('./_library');
+var global = require('./_global');
+var ctx = require('./_ctx');
+var classof = require('./_classof');
+var $export = require('./_export');
+var isObject = require('./_is-object');
+var aFunction = require('./_a-function');
+var anInstance = require('./_an-instance');
+var forOf = require('./_for-of');
+var speciesConstructor = require('./_species-constructor');
+var task = require('./_task').set;
+var microtask = require('./_microtask')();
+var newPromiseCapabilityModule = require('./_new-promise-capability');
+var perform = require('./_perform');
+var userAgent = require('./_user-agent');
+var promiseResolve = require('./_promise-resolve');
+var PROMISE = 'Promise';
+var TypeError = global.TypeError;
+var process = global.process;
+var versions = process && process.versions;
+var v8 = versions && versions.v8 || '';
+var $Promise = global[PROMISE];
+var isNode = classof(process) == 'process';
+var empty = function () { /* empty */ };
+var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
+var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
+
+var USE_NATIVE = !!function () {
+  try {
+    // correct subclassing with @@species support
+    var promise = $Promise.resolve(1);
+    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
+      exec(empty, empty);
+    };
+    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
+    return (isNode || typeof PromiseRejectionEvent == 'function')
+      && promise.then(empty) instanceof FakePromise
+      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
+      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
+      // we can't detect it synchronously, so just check versions
+      && v8.indexOf('6.6') !== 0
+      && userAgent.indexOf('Chrome/66') === -1;
+  } catch (e) { /* empty */ }
+}();
+
+// helpers
+var isThenable = function (it) {
+  var then;
+  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
+};
+var notify = function (promise, isReject) {
+  if (promise._n) return;
+  promise._n = true;
+  var chain = promise._c;
+  microtask(function () {
+    var value = promise._v;
+    var ok = promise._s == 1;
+    var i = 0;
+    var run = function (reaction) {
+      var handler = ok ? reaction.ok : reaction.fail;
+      var resolve = reaction.resolve;
+      var reject = reaction.reject;
+      var domain = reaction.domain;
+      var result, then, exited;
+      try {
+        if (handler) {
+          if (!ok) {
+            if (promise._h == 2) onHandleUnhandled(promise);
+            promise._h = 1;
+          }
+          if (handler === true) result = value;
+          else {
+            if (domain) domain.enter();
+            result = handler(value); // may throw
+            if (domain) {
+              domain.exit();
+              exited = true;
+            }
+          }
+          if (result === reaction.promise) {
+            reject(TypeError('Promise-chain cycle'));
+          } else if (then = isThenable(result)) {
+            then.call(result, resolve, reject);
+          } else resolve(result);
+        } else reject(value);
+      } catch (e) {
+        if (domain && !exited) domain.exit();
+        reject(e);
+      }
+    };
+    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
+    promise._c = [];
+    promise._n = false;
+    if (isReject && !promise._h) onUnhandled(promise);
+  });
+};
+var onUnhandled = function (promise) {
+  task.call(global, function () {
+    var value = promise._v;
+    var unhandled = isUnhandled(promise);
+    var result, handler, console;
+    if (unhandled) {
+      result = perform(function () {
+        if (isNode) {
+          process.emit('unhandledRejection', value, promise);
+        } else if (handler = global.onunhandledrejection) {
+          handler({ promise: promise, reason: value });
+        } else if ((console = global.console) && console.error) {
+          console.error('Unhandled promise rejection', value);
+        }
+      });
+      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
+      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
+    } promise._a = undefined;
+    if (unhandled && result.e) throw result.v;
+  });
+};
+var isUnhandled = function (promise) {
+  return promise._h !== 1 && (promise._a || promise._c).length === 0;
+};
+var onHandleUnhandled = function (promise) {
+  task.call(global, function () {
+    var handler;
+    if (isNode) {
+      process.emit('rejectionHandled', promise);
+    } else if (handler = global.onrejectionhandled) {
+      handler({ promise: promise, reason: promise._v });
+    }
+  });
+};
+var $reject = function (value) {
+  var promise = this;
+  if (promise._d) return;
+  promise._d = true;
+  promise = promise._w || promise; // unwrap
+  promise._v = value;
+  promise._s = 2;
+  if (!promise._a) promise._a = promise._c.slice();
+  notify(promise, true);
+};
+var $resolve = function (value) {
+  var promise = this;
+  var then;
+  if (promise._d) return;
+  promise._d = true;
+  promise = promise._w || promise; // unwrap
+  try {
+    if (promise === value) throw TypeError("Promise can't be resolved itself");
+    if (then = isThenable(value)) {
+      microtask(function () {
+        var wrapper = { _w: promise, _d: false }; // wrap
+        try {
+          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
+        } catch (e) {
+          $reject.call(wrapper, e);
+        }
+      });
+    } else {
+      promise._v = value;
+      promise._s = 1;
+      notify(promise, false);
+    }
+  } catch (e) {
+    $reject.call({ _w: promise, _d: false }, e); // wrap
+  }
+};
+
+// constructor polyfill
+if (!USE_NATIVE) {
+  // 25.4.3.1 Promise(executor)
+  $Promise = function Promise(executor) {
+    anInstance(this, $Promise, PROMISE, '_h');
+    aFunction(executor);
+    Internal.call(this);
+    try {
+      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
+    } catch (err) {
+      $reject.call(this, err);
+    }
+  };
+  // eslint-disable-next-line no-unused-vars
+  Internal = function Promise(executor) {
+    this._c = [];             // <- awaiting reactions
+    this._a = undefined;      // <- checked in isUnhandled reactions
+    this._s = 0;              // <- state
+    this._d = false;          // <- done
+    this._v = undefined;      // <- value
+    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
+    this._n = false;          // <- notify
+  };
+  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
+    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
+    then: function then(onFulfilled, onRejected) {
+      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
+      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
+      reaction.fail = typeof onRejected == 'function' && onRejected;
+      reaction.domain = isNode ? process.domain : undefined;
+      this._c.push(reaction);
+      if (this._a) this._a.push(reaction);
+      if (this._s) notify(this, false);
+      return reaction.promise;
+    },
+    // 25.4.5.1 Promise.prototype.catch(onRejected)
+    'catch': function (onRejected) {
+      return this.then(undefined, onRejected);
+    }
+  });
+  OwnPromiseCapability = function () {
+    var promise = new Internal();
+    this.promise = promise;
+    this.resolve = ctx($resolve, promise, 1);
+    this.reject = ctx($reject, promise, 1);
+  };
+  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
+    return C === $Promise || C === Wrapper
+      ? new OwnPromiseCapability(C)
+      : newGenericPromiseCapability(C);
+  };
+}
+
+$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
+require('./_set-to-string-tag')($Promise, PROMISE);
+require('./_set-species')(PROMISE);
+Wrapper = require('./_core')[PROMISE];
+
+// statics
+$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
+  // 25.4.4.5 Promise.reject(r)
+  reject: function reject(r) {
+    var capability = newPromiseCapability(this);
+    var $$reject = capability.reject;
+    $$reject(r);
+    return capability.promise;
+  }
+});
+$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
+  // 25.4.4.6 Promise.resolve(x)
+  resolve: function resolve(x) {
+    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
+  }
+});
+$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
+  $Promise.all(iter)['catch'](empty);
+})), PROMISE, {
+  // 25.4.4.1 Promise.all(iterable)
+  all: function all(iterable) {
+    var C = this;
+    var capability = newPromiseCapability(C);
+    var resolve = capability.resolve;
+    var reject = capability.reject;
+    var result = perform(function () {
+      var values = [];
+      var index = 0;
+      var remaining = 1;
+      forOf(iterable, false, function (promise) {
+        var $index = index++;
+        var alreadyCalled = false;
+        values.push(undefined);
+        remaining++;
+        C.resolve(promise).then(function (value) {
+          if (alreadyCalled) return;
+          alreadyCalled = true;
+          values[$index] = value;
+          --remaining || resolve(values);
+        }, reject);
+      });
+      --remaining || resolve(values);
+    });
+    if (result.e) reject(result.v);
+    return capability.promise;
+  },
+  // 25.4.4.4 Promise.race(iterable)
+  race: function race(iterable) {
+    var C = this;
+    var capability = newPromiseCapability(C);
+    var reject = capability.reject;
+    var result = perform(function () {
+      forOf(iterable, false, function (promise) {
+        C.resolve(promise).then(capability.resolve, reject);
+      });
+    });
+    if (result.e) reject(result.v);
+    return capability.promise;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var classof = require('./_classof');
+var ITERATOR = require('./_wks')('iterator');
+var Iterators = require('./_iterators');
+module.exports = require('./_core').getIteratorMethod = function (it) {
+  if (it != undefined) return it[ITERATOR]
+    || it['@@iterator']
+    || Iterators[classof(it)];
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint8-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint8-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint8-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint8', 1, function (init) {
+  return function Uint8Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-pad.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-pad.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-pad.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// https://github.com/tc39/proposal-string-pad-start-end
+var toLength = require('./_to-length');
+var repeat = require('./_string-repeat');
+var defined = require('./_defined');
+
+module.exports = function (that, maxLength, fillString, left) {
+  var S = String(defined(that));
+  var stringLength = S.length;
+  var fillStr = fillString === undefined ? ' ' : String(fillString);
+  var intMaxLength = toLength(maxLength);
+  if (intMaxLength <= stringLength || fillStr == '') return S;
+  var fillLen = intMaxLength - stringLength;
+  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
+  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
+  return left ? stringFiller + S : S + stringFiller;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 7.1.15 ToLength
+var toInteger = require('./_to-integer');
+var min = Math.min;
+module.exports = function (it) {
+  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.sinh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.sinh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.sinh.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// 20.2.2.30 Math.sinh(x)
+var $export = require('./_export');
+var expm1 = require('./_math-expm1');
+var exp = Math.exp;
+
+// V8 near Chromium 38 has a problem with very small numbers
+$export($export.S + $export.F * require('./_fails')(function () {
+  return !Math.sinh(-2e-17) != -2e-17;
+}), 'Math', {
+  sinh: function sinh(x) {
+    return Math.abs(x = +x) < 1
+      ? (expm1(x) - expm1(-x)) / 2
+      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_perform.js	(date 499162500000)
@@ -0,0 +1,7 @@
+module.exports = function (exec) {
+  try {
+    return { e: false, v: exec() };
+  } catch (e) {
+    return { e: true, v: e };
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.delay.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.delay.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.delay.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var global = require('./_global');
+var core = require('./_core');
+var $export = require('./_export');
+var partial = require('./_partial');
+// https://esdiscuss.org/topic/promise-returning-delay-function
+$export($export.G + $export.F, {
+  delay: function delay(time) {
+    return new (core.Promise || global.Promise)(function (resolve) {
+      setTimeout(partial.call(resolve, true), time);
+    });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array-iter.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// check on default Array iterator
+var Iterators = require('./_iterators');
+var ITERATOR = require('./_wks')('iterator');
+var ArrayProto = Array.prototype;
+
+module.exports = function (it) {
+  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.is-iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.is-iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.is-iterable.js	(date 499162500000)
@@ -0,0 +1,10 @@
+var classof = require('./_classof');
+var ITERATOR = require('./_wks')('iterator');
+var Iterators = require('./_iterators');
+module.exports = require('./_core').isIterable = function (it) {
+  var O = Object(it);
+  return O[ITERATOR] !== undefined
+    || '@@iterator' in O
+    // eslint-disable-next-line no-prototype-builtins
+    || Iterators.hasOwnProperty(classof(O));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// getting tag from 19.1.3.6 Object.prototype.toString()
+var cof = require('./_cof');
+var TAG = require('./_wks')('toStringTag');
+// ES3 wrong here
+var ARG = cof(function () { return arguments; }()) == 'Arguments';
+
+// fallback for IE11 Script Access Denied error
+var tryGet = function (it, key) {
+  try {
+    return it[key];
+  } catch (e) { /* empty */ }
+};
+
+module.exports = function (it) {
+  var O, T, B;
+  return it === undefined ? 'Undefined' : it === null ? 'Null'
+    // @@toStringTag case
+    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
+    // builtinTag case
+    : ARG ? cof(O)
+    // ES3 arguments fallback
+    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js	(date 499162500000)
@@ -0,0 +1,7 @@
+module.exports = function (exec) {
+  try {
+    return !!exec();
+  } catch (e) {
+    return true;
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_is-integer.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 20.1.2.3 Number.isInteger(number)
+var isObject = require('./_is-object');
+var floor = Math.floor;
+module.exports = function isInteger(it) {
+  return !isObject(it) && isFinite(it) && floor(it) === it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js	(date 499162500000)
@@ -0,0 +1,17 @@
+var toInteger = require('./_to-integer');
+var defined = require('./_defined');
+// true  -> String#at
+// false -> String#codePointAt
+module.exports = function (TO_STRING) {
+  return function (that, pos) {
+    var s = String(defined(that));
+    var i = toInteger(pos);
+    var l = s.length;
+    var a, b;
+    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
+    a = s.charCodeAt(i);
+    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
+      ? TO_STRING ? s.charAt(i) : a
+      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-species-constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-species-constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-species-constructor.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var isObject = require('./_is-object');
+var isArray = require('./_is-array');
+var SPECIES = require('./_wks')('species');
+
+module.exports = function (original) {
+  var C;
+  if (isArray(original)) {
+    C = original.constructor;
+    // cross-realm fallback
+    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
+    if (isObject(C)) {
+      C = C[SPECIES];
+      if (C === null) C = undefined;
+    }
+  } return C === undefined ? Array : C;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.constructor.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es5.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es5.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es5.js	(date 499162500000)
@@ -0,0 +1,35 @@
+// This file still here for a legacy code and will be removed in a near time
+require('./es6.object.create');
+require('./es6.object.define-property');
+require('./es6.object.define-properties');
+require('./es6.object.get-own-property-descriptor');
+require('./es6.object.get-prototype-of');
+require('./es6.object.keys');
+require('./es6.object.get-own-property-names');
+require('./es6.object.freeze');
+require('./es6.object.seal');
+require('./es6.object.prevent-extensions');
+require('./es6.object.is-frozen');
+require('./es6.object.is-sealed');
+require('./es6.object.is-extensible');
+require('./es6.function.bind');
+require('./es6.array.is-array');
+require('./es6.array.join');
+require('./es6.array.slice');
+require('./es6.array.sort');
+require('./es6.array.for-each');
+require('./es6.array.map');
+require('./es6.array.filter');
+require('./es6.array.some');
+require('./es6.array.every');
+require('./es6.array.reduce');
+require('./es6.array.reduce-right');
+require('./es6.array.index-of');
+require('./es6.array.last-index-of');
+require('./es6.date.now');
+require('./es6.date.to-iso-string');
+require('./es6.date.to-json');
+require('./es6.parse-int');
+require('./es6.parse-float');
+require('./es6.string.trim');
+require('./es6.regexp.to-string');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// false -> Array#indexOf
+// true  -> Array#includes
+var toIObject = require('./_to-iobject');
+var toLength = require('./_to-length');
+var toAbsoluteIndex = require('./_to-absolute-index');
+module.exports = function (IS_INCLUDES) {
+  return function ($this, el, fromIndex) {
+    var O = toIObject($this);
+    var length = toLength(O.length);
+    var index = toAbsoluteIndex(fromIndex, length);
+    var value;
+    // Array#includes uses SameValueZero equality algorithm
+    // eslint-disable-next-line no-self-compare
+    if (IS_INCLUDES && el != el) while (length > index) {
+      value = O[index++];
+      // eslint-disable-next-line no-self-compare
+      if (value != value) return true;
+    // Array#indexOf ignores holes, Array#includes - not
+    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
+      if (O[index] === el) return IS_INCLUDES || index || 0;
+    } return !IS_INCLUDES && -1;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-integer.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.3 Number.isInteger(number)
+var $export = require('./_export');
+
+$export($export.S, 'Number', { isInteger: require('./_is-integer') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-species.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_set-species.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+var global = require('./_global');
+var core = require('./_core');
+var dP = require('./_object-dp');
+var DESCRIPTORS = require('./_descriptors');
+var SPECIES = require('./_wks')('species');
+
+module.exports = function (KEY) {
+  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
+  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
+    configurable: true,
+    get: function () { return this; }
+  });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-fill.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-fill.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_array-fill.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
+'use strict';
+var toObject = require('./_to-object');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+module.exports = function fill(value /* , start = 0, end = @length */) {
+  var O = toObject(this);
+  var length = toLength(O.length);
+  var aLen = arguments.length;
+  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
+  var end = aLen > 2 ? arguments[2] : undefined;
+  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
+  while (endPos > index) O[index++] = value;
+  return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.match.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.match.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js	(date 499162500000)
@@ -0,0 +1,3 @@
+// 19.1.3.19 Object.setPrototypeOf(O, proto)
+var $export = require('./_export');
+$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js	(date 499162500000)
@@ -0,0 +1,234 @@
+'use strict';
+// ECMAScript 6 symbols shim
+var global = require('./_global');
+var has = require('./_has');
+var DESCRIPTORS = require('./_descriptors');
+var $export = require('./_export');
+var redefine = require('./_redefine');
+var META = require('./_meta').KEY;
+var $fails = require('./_fails');
+var shared = require('./_shared');
+var setToStringTag = require('./_set-to-string-tag');
+var uid = require('./_uid');
+var wks = require('./_wks');
+var wksExt = require('./_wks-ext');
+var wksDefine = require('./_wks-define');
+var enumKeys = require('./_enum-keys');
+var isArray = require('./_is-array');
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var toIObject = require('./_to-iobject');
+var toPrimitive = require('./_to-primitive');
+var createDesc = require('./_property-desc');
+var _create = require('./_object-create');
+var gOPNExt = require('./_object-gopn-ext');
+var $GOPD = require('./_object-gopd');
+var $DP = require('./_object-dp');
+var $keys = require('./_object-keys');
+var gOPD = $GOPD.f;
+var dP = $DP.f;
+var gOPN = gOPNExt.f;
+var $Symbol = global.Symbol;
+var $JSON = global.JSON;
+var _stringify = $JSON && $JSON.stringify;
+var PROTOTYPE = 'prototype';
+var HIDDEN = wks('_hidden');
+var TO_PRIMITIVE = wks('toPrimitive');
+var isEnum = {}.propertyIsEnumerable;
+var SymbolRegistry = shared('symbol-registry');
+var AllSymbols = shared('symbols');
+var OPSymbols = shared('op-symbols');
+var ObjectProto = Object[PROTOTYPE];
+var USE_NATIVE = typeof $Symbol == 'function';
+var QObject = global.QObject;
+// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
+var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
+
+// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
+var setSymbolDesc = DESCRIPTORS && $fails(function () {
+  return _create(dP({}, 'a', {
+    get: function () { return dP(this, 'a', { value: 7 }).a; }
+  })).a != 7;
+}) ? function (it, key, D) {
+  var protoDesc = gOPD(ObjectProto, key);
+  if (protoDesc) delete ObjectProto[key];
+  dP(it, key, D);
+  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
+} : dP;
+
+var wrap = function (tag) {
+  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
+  sym._k = tag;
+  return sym;
+};
+
+var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
+  return typeof it == 'symbol';
+} : function (it) {
+  return it instanceof $Symbol;
+};
+
+var $defineProperty = function defineProperty(it, key, D) {
+  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
+  anObject(it);
+  key = toPrimitive(key, true);
+  anObject(D);
+  if (has(AllSymbols, key)) {
+    if (!D.enumerable) {
+      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
+      it[HIDDEN][key] = true;
+    } else {
+      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
+      D = _create(D, { enumerable: createDesc(0, false) });
+    } return setSymbolDesc(it, key, D);
+  } return dP(it, key, D);
+};
+var $defineProperties = function defineProperties(it, P) {
+  anObject(it);
+  var keys = enumKeys(P = toIObject(P));
+  var i = 0;
+  var l = keys.length;
+  var key;
+  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
+  return it;
+};
+var $create = function create(it, P) {
+  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
+};
+var $propertyIsEnumerable = function propertyIsEnumerable(key) {
+  var E = isEnum.call(this, key = toPrimitive(key, true));
+  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
+  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
+};
+var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
+  it = toIObject(it);
+  key = toPrimitive(key, true);
+  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
+  var D = gOPD(it, key);
+  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
+  return D;
+};
+var $getOwnPropertyNames = function getOwnPropertyNames(it) {
+  var names = gOPN(toIObject(it));
+  var result = [];
+  var i = 0;
+  var key;
+  while (names.length > i) {
+    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
+  } return result;
+};
+var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
+  var IS_OP = it === ObjectProto;
+  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
+  var result = [];
+  var i = 0;
+  var key;
+  while (names.length > i) {
+    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
+  } return result;
+};
+
+// 19.4.1.1 Symbol([description])
+if (!USE_NATIVE) {
+  $Symbol = function Symbol() {
+    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
+    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
+    var $set = function (value) {
+      if (this === ObjectProto) $set.call(OPSymbols, value);
+      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
+      setSymbolDesc(this, tag, createDesc(1, value));
+    };
+    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
+    return wrap(tag);
+  };
+  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
+    return this._k;
+  });
+
+  $GOPD.f = $getOwnPropertyDescriptor;
+  $DP.f = $defineProperty;
+  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
+  require('./_object-pie').f = $propertyIsEnumerable;
+  require('./_object-gops').f = $getOwnPropertySymbols;
+
+  if (DESCRIPTORS && !require('./_library')) {
+    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
+  }
+
+  wksExt.f = function (name) {
+    return wrap(wks(name));
+  };
+}
+
+$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
+
+for (var es6Symbols = (
+  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
+  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
+).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);
+
+for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
+
+$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
+  // 19.4.2.1 Symbol.for(key)
+  'for': function (key) {
+    return has(SymbolRegistry, key += '')
+      ? SymbolRegistry[key]
+      : SymbolRegistry[key] = $Symbol(key);
+  },
+  // 19.4.2.5 Symbol.keyFor(sym)
+  keyFor: function keyFor(sym) {
+    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
+    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
+  },
+  useSetter: function () { setter = true; },
+  useSimple: function () { setter = false; }
+});
+
+$export($export.S + $export.F * !USE_NATIVE, 'Object', {
+  // 19.1.2.2 Object.create(O [, Properties])
+  create: $create,
+  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
+  defineProperty: $defineProperty,
+  // 19.1.2.3 Object.defineProperties(O, Properties)
+  defineProperties: $defineProperties,
+  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
+  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
+  // 19.1.2.7 Object.getOwnPropertyNames(O)
+  getOwnPropertyNames: $getOwnPropertyNames,
+  // 19.1.2.8 Object.getOwnPropertySymbols(O)
+  getOwnPropertySymbols: $getOwnPropertySymbols
+});
+
+// 24.3.2 JSON.stringify(value [, replacer [, space]])
+$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
+  var S = $Symbol();
+  // MS Edge converts symbol values to JSON as {}
+  // WebKit converts symbol values to JSON as null
+  // V8 throws on boxed symbols
+  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
+})), 'JSON', {
+  stringify: function stringify(it) {
+    var args = [it];
+    var i = 1;
+    var replacer, $replacer;
+    while (arguments.length > i) args.push(arguments[i++]);
+    $replacer = replacer = args[1];
+    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
+    if (!isArray(replacer)) replacer = function (key, value) {
+      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
+      if (!isSymbol(value)) return value;
+    };
+    args[1] = replacer;
+    return _stringify.apply($JSON, args);
+  }
+});
+
+// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
+$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
+// 19.4.3.5 Symbol.prototype[@@toStringTag]
+setToStringTag($Symbol, 'Symbol');
+// 20.2.1.9 Math[@@toStringTag]
+setToStringTag(Math, 'Math', true);
+// 24.3.3 JSON[@@toStringTag]
+setToStringTag(global.JSON, 'JSON', true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.split.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.split.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.split.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_replacer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_replacer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_replacer.js	(date 499162500000)
@@ -0,0 +1,8 @@
+module.exports = function (regExp, replace) {
+  var replacer = replace === Object(replace) ? function (part) {
+    return replace[part];
+  } : replace;
+  return function (it) {
+    return String(it).replace(regExp, replacer);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-names.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-names.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-own-property-names.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 19.1.2.7 Object.getOwnPropertyNames(O)
+require('./_object-sap')('getOwnPropertyNames', function () {
+  return require('./_object-gopn-ext').f;
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.lookup-setter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.lookup-setter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.lookup-setter.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+var getPrototypeOf = require('./_object-gpo');
+var getOwnPropertyDescriptor = require('./_object-gopd').f;
+
+// B.2.2.5 Object.prototype.__lookupSetter__(P)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __lookupSetter__: function __lookupSetter__(P) {
+    var O = toObject(this);
+    var K = toPrimitive(P, true);
+    var D;
+    do {
+      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
+    } while (O = getPrototypeOf(O));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// fallback for non-array-like ES3 and non-enumerable old V8 strings
+var cof = require('./_cof');
+// eslint-disable-next-line no-prototype-builtins
+module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
+  return cof(it) == 'String' ? it.split('') : Object(it);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint16-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint16-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint16-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint16', 2, function (init) {
+  return function Uint16Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.make.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.make.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.make.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var $export = require('./_export');
+var define = require('./_object-define');
+var create = require('./_object-create');
+
+$export($export.S + $export.F, 'Object', {
+  make: function (proto, mixin) {
+    return define(create(proto), mixin);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.filter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.filter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.filter.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $filter = require('./_array-methods')(2);
+
+$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
+  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
+  filter: function filter(callbackfn /* , thisArg */) {
+    return $filter(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fontsize.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fontsize.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.fontsize.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.8 String.prototype.fontsize(size)
+require('./_string-html')('fontsize', function (createHTML) {
+  return function fontsize(size) {
+    return createHTML(this, 'font', 'size', size);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int8-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int8-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.int8-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Int8', 1, function (init) {
+  return function Int8Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_date-to-iso-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_date-to-iso-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_date-to-iso-string.js	(date 499162500000)
@@ -0,0 +1,26 @@
+'use strict';
+// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
+var fails = require('./_fails');
+var getTime = Date.prototype.getTime;
+var $toISOString = Date.prototype.toISOString;
+
+var lz = function (num) {
+  return num > 9 ? num : '0' + num;
+};
+
+// PhantomJS / old WebKit has a broken implementations
+module.exports = (fails(function () {
+  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
+}) || !fails(function () {
+  $toISOString.call(new Date(NaN));
+})) ? function toISOString() {
+  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
+  var d = this;
+  var y = d.getUTCFullYear();
+  var m = d.getUTCMilliseconds();
+  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
+  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
+    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
+    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
+    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
+} : $toISOString;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.pad-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.pad-start.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.pad-start.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// https://github.com/tc39/proposal-string-pad-start-end
+var $export = require('./_export');
+var $pad = require('./_string-pad');
+var userAgent = require('./_user-agent');
+
+// https://github.com/zloirock/core-js/issues/280
+var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);
+
+$export($export.P + $export.F * WEBKIT_BUG, 'String', {
+  padStart: function padStart(maxLength /* , fillString = ' ' */) {
+    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// most Object methods by ES6 should accept primitives
+var $export = require('./_export');
+var core = require('./_core');
+var fails = require('./_fails');
+module.exports = function (KEY, exec) {
+  var fn = (core.Object || {})[KEY] || Object[KEY];
+  var exp = {};
+  exp[KEY] = exec(fn);
+  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-repeat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-repeat.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_string-repeat.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+var toInteger = require('./_to-integer');
+var defined = require('./_defined');
+
+module.exports = function repeat(count) {
+  var str = String(defined(this));
+  var res = '';
+  var n = toInteger(count);
+  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
+  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
+  return res;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.flat-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.flat-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.flat-map.js	(date 499162500000)
@@ -0,0 +1,22 @@
+'use strict';
+// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
+var $export = require('./_export');
+var flattenIntoArray = require('./_flatten-into-array');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var aFunction = require('./_a-function');
+var arraySpeciesCreate = require('./_array-species-create');
+
+$export($export.P, 'Array', {
+  flatMap: function flatMap(callbackfn /* , thisArg */) {
+    var O = toObject(this);
+    var sourceLen, A;
+    aFunction(callbackfn);
+    sourceLen = toLength(O.length);
+    A = arraySpeciesCreate(O, 0);
+    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
+    return A;
+  }
+});
+
+require('./_add-to-unscopables')('flatMap');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
+var global = module.exports = typeof window != 'undefined' && window.Math == Math
+  ? window : typeof self != 'undefined' && self.Math == Math ? self
+  // eslint-disable-next-line no-new-func
+  : Function('return this')();
+if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.has-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.has-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.has-metadata.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var getPrototypeOf = require('./_object-gpo');
+var ordinaryHasOwnMetadata = metadata.has;
+var toMetaKey = metadata.key;
+
+var ordinaryHasMetadata = function (MetadataKey, O, P) {
+  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
+  if (hasOwn) return true;
+  var parent = getPrototypeOf(O);
+  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
+};
+
+metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.finally.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.finally.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.promise.finally.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// https://github.com/tc39/proposal-promise-finally
+'use strict';
+var $export = require('./_export');
+var core = require('./_core');
+var global = require('./_global');
+var speciesConstructor = require('./_species-constructor');
+var promiseResolve = require('./_promise-resolve');
+
+$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
+  var C = speciesConstructor(this, core.Promise || global.Promise);
+  var isFunction = typeof onFinally == 'function';
+  return this.then(
+    isFunction ? function (x) {
+      return promiseResolve(C, onFinally()).then(function () { return x; });
+    } : onFinally,
+    isFunction ? function (e) {
+      return promiseResolve(C, onFinally()).then(function () { throw e; });
+    } : onFinally
+  );
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.string.at.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+// https://github.com/mathiasbynens/String.prototype.at
+var $export = require('./_export');
+var $at = require('./_string-at')(true);
+
+$export($export.P, 'String', {
+  at: function at(pos) {
+    return $at(this, pos);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_collection-to-json.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/DavidBruant/Map-Set.prototype.toJSON
+var classof = require('./_classof');
+var from = require('./_array-from-iterable');
+module.exports = function (NAME) {
+  return function toJSON() {
+    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
+    return from(this);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.is-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.is-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/core.object.is-object.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+
+$export($export.S + $export.F, 'Object', { isObject: require('./_is-object') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.reflect.get-prototype-of.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 26.1.8 Reflect.getPrototypeOf(target)
+var $export = require('./_export');
+var getProto = require('./_object-gpo');
+var anObject = require('./_an-object');
+
+$export($export.S, 'Reflect', {
+  getPrototypeOf: function getPrototypeOf(target) {
+    return getProto(anObject(target));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.asap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.asap.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.asap.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
+var $export = require('./_export');
+var microtask = require('./_microtask')();
+var process = require('./_global').process;
+var isNode = require('./_cof')(process) == 'process';
+
+$export($export.G, {
+  asap: function asap(fn) {
+    var domain = isNode && process.domain;
+    microtask(domain ? domain.bind(fn) : fn);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_typed.js	(date 499162500000)
@@ -0,0 +1,28 @@
+var global = require('./_global');
+var hide = require('./_hide');
+var uid = require('./_uid');
+var TYPED = uid('typed_array');
+var VIEW = uid('view');
+var ABV = !!(global.ArrayBuffer && global.DataView);
+var CONSTR = ABV;
+var i = 0;
+var l = 9;
+var Typed;
+
+var TypedArrayConstructors = (
+  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
+).split(',');
+
+while (i < l) {
+  if (Typed = global[TypedArrayConstructors[i++]]) {
+    hide(Typed.prototype, TYPED, true);
+    hide(Typed.prototype, VIEW, true);
+  } else CONSTR = false;
+}
+
+module.exports = {
+  ABV: ABV,
+  CONSTR: CONSTR,
+  TYPED: TYPED,
+  VIEW: VIEW
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.clamp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.clamp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.clamp.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  clamp: function clamp(x, lower, upper) {
+    return Math.min(upper, Math.max(lower, x));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var id = 0;
+var px = Math.random();
+module.exports = function (key) {
+  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.max-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.max-safe-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.max-safe-integer.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.6 Number.MAX_SAFE_INTEGER
+var $export = require('./_export');
+
+$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint32-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.typed.uint32-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint32', 4, function (init) {
+  return function Uint32Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.index-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.index-of.js	(date 499162500000)
@@ -0,0 +1,15 @@
+'use strict';
+var $export = require('./_export');
+var $indexOf = require('./_array-includes')(false);
+var $native = [].indexOf;
+var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
+
+$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
+  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
+  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
+    return NEGATIVE_ZERO
+      // convert -0 to +0
+      ? $native.apply(this, arguments) || 0
+      : $indexOf(this, searchElement, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.acosh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.acosh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.acosh.js	(date 499162500000)
@@ -0,0 +1,18 @@
+// 20.2.2.3 Math.acosh(x)
+var $export = require('./_export');
+var log1p = require('./_math-log1p');
+var sqrt = Math.sqrt;
+var $acosh = Math.acosh;
+
+$export($export.S + $export.F * !($acosh
+  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
+  && Math.floor($acosh(Number.MAX_VALUE)) == 710
+  // Tor Browser bug: Math.acosh(Infinity) -> NaN
+  && $acosh(Infinity) == Infinity
+), 'Math', {
+  acosh: function acosh(x) {
+    return (x = +x) < 1 ? NaN : x > 94906265.62425156
+      ? Math.log(x) + Math.LN2
+      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_date-to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_date-to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_date-to-primitive.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var anObject = require('./_an-object');
+var toPrimitive = require('./_to-primitive');
+var NUMBER = 'number';
+
+module.exports = function (hint) {
+  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
+  return toPrimitive(anObject(this), hint != NUMBER);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var isObject = require('./_is-object');
+module.exports = function (it) {
+  if (!isObject(it)) throw TypeError(it + ' is not an object!');
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_parse-int.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var $parseInt = require('./_global').parseInt;
+var $trim = require('./_string-trim').trim;
+var ws = require('./_string-ws');
+var hex = /^[-+]?0[xX]/;
+
+module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
+  var string = $trim(String(str), 3);
+  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
+} : $parseInt;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var toInteger = require('./_to-integer');
+var max = Math.max;
+var min = Math.min;
+module.exports = function (index, length) {
+  index = toInteger(index);
+  return index < 0 ? max(index + length, 0) : min(index, length);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js	(date 499162500000)
@@ -0,0 +1,2 @@
+var core = module.exports = { version: '2.6.5' };
+if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.regexp.constructor.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_set-species')('RegExp');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.last-index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.last-index-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.last-index-of.js	(date 499162500000)
@@ -0,0 +1,22 @@
+'use strict';
+var $export = require('./_export');
+var toIObject = require('./_to-iobject');
+var toInteger = require('./_to-integer');
+var toLength = require('./_to-length');
+var $native = [].lastIndexOf;
+var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
+
+$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
+  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
+  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
+    // convert -0 to +0
+    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
+    var O = toIObject(this);
+    var length = toLength(O.length);
+    var index = length - 1;
+    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
+    if (index < 0) index = length + index;
+    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
+    return -1;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.immediate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.immediate.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/web.immediate.js	(date 499162500000)
@@ -0,0 +1,6 @@
+var $export = require('./_export');
+var $task = require('./_task');
+$export($export.G + $export.B, {
+  setImmediate: $task.set,
+  clearImmediate: $task.clear
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-nan.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-nan.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.is-nan.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.1.2.4 Number.isNaN(number)
+var $export = require('./_export');
+
+$export($export.S, 'Number', {
+  isNaN: function isNaN(number) {
+    // eslint-disable-next-line no-self-compare
+    return number != number;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-metadata-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-metadata-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.reflect.get-metadata-keys.js	(date 499162500000)
@@ -0,0 +1,19 @@
+var Set = require('./es6.set');
+var from = require('./_array-from-iterable');
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var getPrototypeOf = require('./_object-gpo');
+var ordinaryOwnMetadataKeys = metadata.keys;
+var toMetaKey = metadata.key;
+
+var ordinaryMetadataKeys = function (O, P) {
+  var oKeys = ordinaryOwnMetadataKeys(O, P);
+  var parent = getPrototypeOf(O);
+  if (parent === null) return oKeys;
+  var pKeys = ordinaryMetadataKeys(parent, P);
+  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
+};
+
+metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
+  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-set.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-set.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-set.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
+require('./_set-collection-from')('WeakSet');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_parse-float.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var $parseFloat = require('./_global').parseFloat;
+var $trim = require('./_string-trim').trim;
+
+module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
+  var string = $trim(String(str), 3);
+  var result = $parseFloat(string);
+  return result === 0 && string.charAt(0) == '-' ? -0 : result;
+} : $parseFloat;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.define-setter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.define-setter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.define-setter.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var aFunction = require('./_a-function');
+var $defineProperty = require('./_object-dp');
+
+// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __defineSetter__: function __defineSetter__(P, setter) {
+    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_own-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_own-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_own-keys.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// all object keys, includes non-enumerable and symbols
+var gOPN = require('./_object-gopn');
+var gOPS = require('./_object-gops');
+var anObject = require('./_an-object');
+var Reflect = require('./_global').Reflect;
+module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
+  var keys = gOPN.f(anObject(it));
+  var getSymbols = gOPS.f;
+  return getSymbols ? keys.concat(getSymbols(it)) : keys;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.date.to-json.js	(date 499162500000)
@@ -0,0 +1,19 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+var toISOString = require('./_date-to-iso-string');
+var classof = require('./_classof');
+
+$export($export.P + $export.F * require('./_fails')(function () {
+  return new Date(NaN).toJSON() !== null
+    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
+}), 'Date', {
+  // eslint-disable-next-line no-unused-vars
+  toJSON: function toJSON(key) {
+    var O = toObject(this);
+    var pv = toPrimitive(O);
+    return typeof pv == 'number' && !isFinite(pv) ? null :
+      (!('toISOString' in O) && classof(O) == 'Date') ? toISOString.call(O) : O.toISOString();
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-call.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// call something on iterator step with safe closing on error
+var anObject = require('./_an-object');
+module.exports = function (iterator, fn, value, entries) {
+  try {
+    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
+  // 7.4.6 IteratorClose(iterator, completion)
+  } catch (e) {
+    var ret = iterator['return'];
+    if (ret !== undefined) anObject(ret.call(iterator));
+    throw e;
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-forced-pam.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-forced-pam.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-forced-pam.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+// Forced replacement prototype accessors methods
+module.exports = require('./_library') || !require('./_fails')(function () {
+  var K = Math.random();
+  // In FF throws only define methods
+  // eslint-disable-next-line no-undef, no-useless-call
+  __defineSetter__.call(null, K, function () { /* empty */ });
+  delete require('./_global')[K];
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_wks-define')('asyncIterator');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = {};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.bold.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.bold.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.bold.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.5 String.prototype.bold()
+require('./_string-html')('bold', function (createHTML) {
+  return function bold() {
+    return createHTML(this, 'b', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.array.includes.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// https://github.com/tc39/Array.prototype.includes
+var $export = require('./_export');
+var $includes = require('./_array-includes')(true);
+
+$export($export.P, 'Array', {
+  includes: function includes(el /* , fromIndex = 0 */) {
+    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
+
+require('./_add-to-unscopables')('includes');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.big.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.big.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.big.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.3 String.prototype.big()
+require('./_string-html')('big', function (createHTML) {
+  return function big() {
+    return createHTML(this, 'big', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.get-own-property-descriptors.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.get-own-property-descriptors.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.object.get-own-property-descriptors.js	(date 499162500000)
@@ -0,0 +1,22 @@
+// https://github.com/tc39/proposal-object-getownpropertydescriptors
+var $export = require('./_export');
+var ownKeys = require('./_own-keys');
+var toIObject = require('./_to-iobject');
+var gOPD = require('./_object-gopd');
+var createProperty = require('./_create-property');
+
+$export($export.S, 'Object', {
+  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
+    var O = toIObject(object);
+    var getDesc = gOPD.f;
+    var keys = ownKeys(O);
+    var result = {};
+    var i = 0;
+    var key, desc;
+    while (keys.length > i) {
+      desc = getDesc(O, key = keys[i++]);
+      if (desc !== undefined) createProperty(result, key, desc);
+    }
+    return result;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.fscale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.fscale.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.fscale.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+var scale = require('./_math-scale');
+var fround = require('./_math-fround');
+
+$export($export.S, 'Math', {
+  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
+    return fround(scale(x, inLow, inHigh, outLow, outHigh));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.atanh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.atanh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.math.atanh.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.2.2.7 Math.atanh(x)
+var $export = require('./_export');
+var $atanh = Math.atanh;
+
+// Tor Browser bug: Math.atanh(-0) -> 0
+$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
+  atanh: function atanh(x) {
+    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fix-re-wks.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fix-re-wks.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_fix-re-wks.js	(date 499162500000)
@@ -0,0 +1,96 @@
+'use strict';
+require('./es6.regexp.exec');
+var redefine = require('./_redefine');
+var hide = require('./_hide');
+var fails = require('./_fails');
+var defined = require('./_defined');
+var wks = require('./_wks');
+var regexpExec = require('./_regexp-exec');
+
+var SPECIES = wks('species');
+
+var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
+  // #replace needs built-in support for named groups.
+  // #match works fine because it just return the exec results, even if it has
+  // a "grops" property.
+  var re = /./;
+  re.exec = function () {
+    var result = [];
+    result.groups = { a: '7' };
+    return result;
+  };
+  return ''.replace(re, '$<a>') !== '7';
+});
+
+var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
+  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
+  var re = /(?:)/;
+  var originalExec = re.exec;
+  re.exec = function () { return originalExec.apply(this, arguments); };
+  var result = 'ab'.split(re);
+  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
+})();
+
+module.exports = function (KEY, length, exec) {
+  var SYMBOL = wks(KEY);
+
+  var DELEGATES_TO_SYMBOL = !fails(function () {
+    // String methods call symbol-named RegEp methods
+    var O = {};
+    O[SYMBOL] = function () { return 7; };
+    return ''[KEY](O) != 7;
+  });
+
+  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
+    // Symbol-named RegExp methods call .exec
+    var execCalled = false;
+    var re = /a/;
+    re.exec = function () { execCalled = true; return null; };
+    if (KEY === 'split') {
+      // RegExp[@@split] doesn't call the regex's exec method, but first creates
+      // a new one. We need to return the patched regex when creating the new one.
+      re.constructor = {};
+      re.constructor[SPECIES] = function () { return re; };
+    }
+    re[SYMBOL]('');
+    return !execCalled;
+  }) : undefined;
+
+  if (
+    !DELEGATES_TO_SYMBOL ||
+    !DELEGATES_TO_EXEC ||
+    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
+    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
+  ) {
+    var nativeRegExpMethod = /./[SYMBOL];
+    var fns = exec(
+      defined,
+      SYMBOL,
+      ''[KEY],
+      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
+        if (regexp.exec === regexpExec) {
+          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
+            // The native String method already delegates to @@method (this
+            // polyfilled function), leasing to infinite recursion.
+            // We avoid it by directly calling the native @@method method.
+            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
+          }
+          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
+        }
+        return { done: false };
+      }
+    );
+    var strfn = fns[0];
+    var rxfn = fns[1];
+
+    redefine(String.prototype, KEY, strfn);
+    hide(RegExp.prototype, SYMBOL, length == 2
+      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
+      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
+      ? function (string, arg) { return rxfn.call(string, this, arg); }
+      // 21.2.5.6 RegExp.prototype[@@match](string)
+      // 21.2.5.9 RegExp.prototype[@@search](string)
+      : function (string) { return rxfn.call(string, this); }
+    );
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var toString = {}.toString;
+
+module.exports = function (it) {
+  return toString.call(it).slice(8, -1);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.isubh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.isubh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.math.isubh.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  isubh: function isubh(x0, x1, y0, y1) {
+    var $x0 = x0 >>> 0;
+    var $x1 = x1 >>> 0;
+    var $y0 = y0 >>> 0;
+    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.to-precision.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.to-precision.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.number.to-precision.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+var $export = require('./_export');
+var $fails = require('./_fails');
+var aNumberValue = require('./_a-number-value');
+var $toPrecision = 1.0.toPrecision;
+
+$export($export.P + $export.F * ($fails(function () {
+  // IE7-
+  return $toPrecision.call(1, undefined) !== '1';
+}) || !$fails(function () {
+  // V8 ~ Android 4.3-
+  $toPrecision.call({});
+})), 'Number', {
+  toPrecision: function toPrecision(precision) {
+    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
+    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// 19.1.2.14 / 15.2.3.14 Object.keys(O)
+var $keys = require('./_object-keys-internal');
+var enumBugKeys = require('./_enum-bug-keys');
+
+module.exports = Object.keys || function keys(O) {
+  return $keys(O, enumBugKeys);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-map.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-map.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.weak-map.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
+require('./_set-collection-of')('WeakMap');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js	(date 499162500000)
@@ -0,0 +1,53 @@
+var META = require('./_uid')('meta');
+var isObject = require('./_is-object');
+var has = require('./_has');
+var setDesc = require('./_object-dp').f;
+var id = 0;
+var isExtensible = Object.isExtensible || function () {
+  return true;
+};
+var FREEZE = !require('./_fails')(function () {
+  return isExtensible(Object.preventExtensions({}));
+});
+var setMeta = function (it) {
+  setDesc(it, META, { value: {
+    i: 'O' + ++id, // object ID
+    w: {}          // weak collections IDs
+  } });
+};
+var fastKey = function (it, create) {
+  // return primitive with prefix
+  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
+  if (!has(it, META)) {
+    // can't set metadata to uncaught frozen object
+    if (!isExtensible(it)) return 'F';
+    // not necessary to add metadata
+    if (!create) return 'E';
+    // add missing metadata
+    setMeta(it);
+  // return object ID
+  } return it[META].i;
+};
+var getWeak = function (it, create) {
+  if (!has(it, META)) {
+    // can't set metadata to uncaught frozen object
+    if (!isExtensible(it)) return true;
+    // not necessary to add metadata
+    if (!create) return false;
+    // add missing metadata
+    setMeta(it);
+  // return hash weak collections IDs
+  } return it[META].w;
+};
+// add metadata on freeze-family methods calling
+var onFreeze = function (it) {
+  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
+  return it;
+};
+var meta = module.exports = {
+  KEY: META,
+  NEED: false,
+  fastKey: fastKey,
+  getWeak: getWeak,
+  onFreeze: onFreeze
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js	(date 499162500000)
@@ -0,0 +1,17 @@
+var has = require('./_has');
+var toIObject = require('./_to-iobject');
+var arrayIndexOf = require('./_array-includes')(false);
+var IE_PROTO = require('./_shared-key')('IE_PROTO');
+
+module.exports = function (object, names) {
+  var O = toIObject(object);
+  var i = 0;
+  var result = [];
+  var key;
+  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
+  // Don't enum bug & hidden keys
+  while (names.length > i) if (has(O, key = names[i++])) {
+    ~arrayIndexOf(result, key) || result.push(key);
+  }
+  return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.parse-float.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseFloat = require('./_parse-float');
+// 20.1.2.12 Number.parseFloat(string)
+$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-proto.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-proto.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-proto.js	(date 499162500000)
@@ -0,0 +1,25 @@
+// Works with __proto__ only. Old v8 can't work with null proto objects.
+/* eslint-disable no-proto */
+var isObject = require('./_is-object');
+var anObject = require('./_an-object');
+var check = function (O, proto) {
+  anObject(O);
+  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
+};
+module.exports = {
+  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
+    function (test, buggy, set) {
+      try {
+        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
+        set(test, []);
+        buggy = !(test instanceof Array);
+      } catch (e) { buggy = true; }
+      return function setPrototypeOf(O, proto) {
+        check(O, proto);
+        if (buggy) O.__proto__ = proto;
+        else set(O, proto);
+        return O;
+      };
+    }({}, false) : undefined),
+  check: check
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_for-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_for-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_for-of.js	(date 499162500000)
@@ -0,0 +1,25 @@
+var ctx = require('./_ctx');
+var call = require('./_iter-call');
+var isArrayIter = require('./_is-array-iter');
+var anObject = require('./_an-object');
+var toLength = require('./_to-length');
+var getIterFn = require('./core.get-iterator-method');
+var BREAK = {};
+var RETURN = {};
+var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
+  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
+  var f = ctx(fn, that, entries ? 2 : 1);
+  var index = 0;
+  var length, step, iterator, result;
+  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
+  // fast case for arrays with default iterator
+  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
+    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
+    if (result === BREAK || result === RETURN) return result;
+  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
+    result = call(iterator, f, step.value, entries);
+    if (result === BREAK || result === RETURN) return result;
+  }
+};
+exports.BREAK = BREAK;
+exports.RETURN = RETURN;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-object.js	(date 499162500000)
@@ -0,0 +1,3 @@
+module.exports = function (it) {
+  return typeof it === 'object' ? it !== null : typeof it === 'function';
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es7.set.to-json.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/DavidBruant/Map-Set.prototype.toJSON
+var $export = require('./_export');
+
+$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_task.js	(date 499162500000)
@@ -0,0 +1,84 @@
+var ctx = require('./_ctx');
+var invoke = require('./_invoke');
+var html = require('./_html');
+var cel = require('./_dom-create');
+var global = require('./_global');
+var process = global.process;
+var setTask = global.setImmediate;
+var clearTask = global.clearImmediate;
+var MessageChannel = global.MessageChannel;
+var Dispatch = global.Dispatch;
+var counter = 0;
+var queue = {};
+var ONREADYSTATECHANGE = 'onreadystatechange';
+var defer, channel, port;
+var run = function () {
+  var id = +this;
+  // eslint-disable-next-line no-prototype-builtins
+  if (queue.hasOwnProperty(id)) {
+    var fn = queue[id];
+    delete queue[id];
+    fn();
+  }
+};
+var listener = function (event) {
+  run.call(event.data);
+};
+// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
+if (!setTask || !clearTask) {
+  setTask = function setImmediate(fn) {
+    var args = [];
+    var i = 1;
+    while (arguments.length > i) args.push(arguments[i++]);
+    queue[++counter] = function () {
+      // eslint-disable-next-line no-new-func
+      invoke(typeof fn == 'function' ? fn : Function(fn), args);
+    };
+    defer(counter);
+    return counter;
+  };
+  clearTask = function clearImmediate(id) {
+    delete queue[id];
+  };
+  // Node.js 0.8-
+  if (require('./_cof')(process) == 'process') {
+    defer = function (id) {
+      process.nextTick(ctx(run, id, 1));
+    };
+  // Sphere (JS game engine) Dispatch API
+  } else if (Dispatch && Dispatch.now) {
+    defer = function (id) {
+      Dispatch.now(ctx(run, id, 1));
+    };
+  // Browsers with MessageChannel, includes WebWorkers
+  } else if (MessageChannel) {
+    channel = new MessageChannel();
+    port = channel.port2;
+    channel.port1.onmessage = listener;
+    defer = ctx(port.postMessage, port, 1);
+  // Browsers with postMessage, skip WebWorkers
+  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
+  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
+    defer = function (id) {
+      global.postMessage(id + '', '*');
+    };
+    global.addEventListener('message', listener, false);
+  // IE8-
+  } else if (ONREADYSTATECHANGE in cel('script')) {
+    defer = function (id) {
+      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
+        html.removeChild(this);
+        run.call(id);
+      };
+    };
+  // Rest old browsers
+  } else {
+    defer = function (id) {
+      setTimeout(ctx(run, id, 1), 0);
+    };
+  }
+}
+module.exports = {
+  set: setTask,
+  clear: clearTask
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.ends-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.ends-with.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.ends-with.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
+'use strict';
+var $export = require('./_export');
+var toLength = require('./_to-length');
+var context = require('./_string-context');
+var ENDS_WITH = 'endsWith';
+var $endsWith = ''[ENDS_WITH];
+
+$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
+  endsWith: function endsWith(searchString /* , endPosition = @length */) {
+    var that = context(this, searchString, ENDS_WITH);
+    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
+    var len = toLength(that.length);
+    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
+    var search = String(searchString);
+    return $endsWith
+      ? $endsWith.call(that, search, end)
+      : that.slice(end - search.length, end) === search;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-log1p.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-log1p.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/library/modules/_math-log1p.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.20 Math.log1p(x)
+module.exports = Math.log1p || function log1p(x) {
+  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.enumerate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.enumerate.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.enumerate.js	(date 499162500000)
@@ -0,0 +1,26 @@
+'use strict';
+// 26.1.5 Reflect.enumerate(target)
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var Enumerate = function (iterated) {
+  this._t = anObject(iterated); // target
+  this._i = 0;                  // next index
+  var keys = this._k = [];      // keys
+  var key;
+  for (key in iterated) keys.push(key);
+};
+require('./_iter-create')(Enumerate, 'Object', function () {
+  var that = this;
+  var keys = that._k;
+  var key;
+  do {
+    if (that._i >= keys.length) return { value: undefined, done: true };
+  } while (!((key = keys[that._i++]) in that._t));
+  return { value: key, done: false };
+});
+
+$export($export.S, 'Reflect', {
+  enumerate: function enumerate(target) {
+    return new Enumerate(target);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.string.unescape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.string.unescape-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.string.unescape-html.js	(date 499162500000)
@@ -0,0 +1,11 @@
+'use strict';
+var $export = require('./_export');
+var $re = require('./_replacer')(/&(?:amp|lt|gt|quot|apos);/g, {
+  '&amp;': '&',
+  '&lt;': '<',
+  '&gt;': '>',
+  '&quot;': '"',
+  '&apos;': "'"
+});
+
+$export($export.P + $export.F, 'String', { unescapeHTML: function unescapeHTML() { return $re(this); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_user-agent.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_user-agent.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_user-agent.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var global = require('./_global');
+var navigator = global.navigator;
+
+module.exports = navigator && navigator.userAgent || '';
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int32-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int32-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Int32', 4, function (init) {
+  return function Int32Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.define-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.define-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.define-property.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
+var dP = require('./_object-dp');
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var toPrimitive = require('./_to-primitive');
+
+// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
+$export($export.S + $export.F * require('./_fails')(function () {
+  // eslint-disable-next-line no-undef
+  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
+}), 'Reflect', {
+  defineProperty: function defineProperty(target, propertyKey, attributes) {
+    anObject(target);
+    propertyKey = toPrimitive(propertyKey, true);
+    anObject(attributes);
+    try {
+      dP.f(target, propertyKey, attributes);
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks.js	(date 499162500000)
@@ -0,0 +1,11 @@
+var store = require('./_shared')('wks');
+var uid = require('./_uid');
+var Symbol = require('./_global').Symbol;
+var USE_SYMBOL = typeof Symbol == 'function';
+
+var $exports = module.exports = function (name) {
+  return store[name] || (store[name] =
+    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
+};
+
+$exports.store = store;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.symbol.observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.symbol.observable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.symbol.observable.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_wks-define')('observable');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_flatten-into-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_flatten-into-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_flatten-into-array.js	(date 499162500000)
@@ -0,0 +1,39 @@
+'use strict';
+// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
+var isArray = require('./_is-array');
+var isObject = require('./_is-object');
+var toLength = require('./_to-length');
+var ctx = require('./_ctx');
+var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');
+
+function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
+  var targetIndex = start;
+  var sourceIndex = 0;
+  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
+  var element, spreadable;
+
+  while (sourceIndex < sourceLen) {
+    if (sourceIndex in source) {
+      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
+
+      spreadable = false;
+      if (isObject(element)) {
+        spreadable = element[IS_CONCAT_SPREADABLE];
+        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
+      }
+
+      if (spreadable && depth > 0) {
+        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
+      } else {
+        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
+        target[targetIndex] = element;
+      }
+
+      targetIndex++;
+    }
+    sourceIndex++;
+  }
+  return targetIndex;
+}
+
+module.exports = flattenIntoArray;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_enum-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_enum-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_enum-keys.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// all enumerable object keys, includes symbols
+var getKeys = require('./_object-keys');
+var gOPS = require('./_object-gops');
+var pIE = require('./_object-pie');
+module.exports = function (it) {
+  var result = getKeys(it);
+  var getSymbols = gOPS.f;
+  if (getSymbols) {
+    var symbols = getSymbols(it);
+    var isEnum = pIE.f;
+    var i = 0;
+    var key;
+    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
+  } return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.exec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.exec.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.exec.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var regexpExec = require('./_regexp-exec');
+require('./_export')({
+  target: 'RegExp',
+  proto: true,
+  forced: regexpExec !== /./.exec
+}, {
+  exec: regexpExec
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.small.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.small.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.small.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.11 String.prototype.small()
+require('./_string-html')('small', function (createHTML) {
+  return function small() {
+    return createHTML(this, 'small', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_native-weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_native-weak-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_native-weak-map.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var nativeFunctionToString = require('./_function-to-string');
+var WeakMap = require('./_global').WeakMap;
+
+module.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var ordinaryOwnMetadataKeys = metadata.keys;
+var toMetaKey = metadata.key;
+
+metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
+  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_microtask.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_microtask.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_microtask.js	(date 499162500000)
@@ -0,0 +1,69 @@
+var global = require('./_global');
+var macrotask = require('./_task').set;
+var Observer = global.MutationObserver || global.WebKitMutationObserver;
+var process = global.process;
+var Promise = global.Promise;
+var isNode = require('./_cof')(process) == 'process';
+
+module.exports = function () {
+  var head, last, notify;
+
+  var flush = function () {
+    var parent, fn;
+    if (isNode && (parent = process.domain)) parent.exit();
+    while (head) {
+      fn = head.fn;
+      head = head.next;
+      try {
+        fn();
+      } catch (e) {
+        if (head) notify();
+        else last = undefined;
+        throw e;
+      }
+    } last = undefined;
+    if (parent) parent.enter();
+  };
+
+  // Node.js
+  if (isNode) {
+    notify = function () {
+      process.nextTick(flush);
+    };
+  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
+  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
+    var toggle = true;
+    var node = document.createTextNode('');
+    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
+    notify = function () {
+      node.data = toggle = !toggle;
+    };
+  // environments with maybe non-completely correct, but existent Promise
+  } else if (Promise && Promise.resolve) {
+    // Promise.resolve without an argument throws an error in LG WebOS 2
+    var promise = Promise.resolve(undefined);
+    notify = function () {
+      promise.then(flush);
+    };
+  // for other environments - macrotask based on:
+  // - setImmediate
+  // - MessageChannel
+  // - window.postMessag
+  // - onreadystatechange
+  // - setTimeout
+  } else {
+    notify = function () {
+      // strange IE + webpack dev server bug - use .call(global)
+      macrotask.call(global, flush);
+    };
+  }
+
+  return function (fn) {
+    var task = { fn: fn, next: undefined };
+    if (last) last.next = task;
+    if (!head) {
+      head = task;
+      notify();
+    } last = task;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.assign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.assign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.assign.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 19.1.3.1 Object.assign(target, source)
+var $export = require('./_export');
+
+$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-index.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// https://tc39.github.io/ecma262/#sec-toindex
+var toInteger = require('./_to-integer');
+var toLength = require('./_to-length');
+module.exports = function (it) {
+  if (it === undefined) return 0;
+  var number = toInteger(it);
+  var length = toLength(number);
+  if (number !== length) throw RangeError('Wrong length!');
+  return length;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_export.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_export.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_export.js	(date 499162500000)
@@ -0,0 +1,43 @@
+var global = require('./_global');
+var core = require('./_core');
+var hide = require('./_hide');
+var redefine = require('./_redefine');
+var ctx = require('./_ctx');
+var PROTOTYPE = 'prototype';
+
+var $export = function (type, name, source) {
+  var IS_FORCED = type & $export.F;
+  var IS_GLOBAL = type & $export.G;
+  var IS_STATIC = type & $export.S;
+  var IS_PROTO = type & $export.P;
+  var IS_BIND = type & $export.B;
+  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
+  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
+  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
+  var key, own, out, exp;
+  if (IS_GLOBAL) source = name;
+  for (key in source) {
+    // contains in native
+    own = !IS_FORCED && target && target[key] !== undefined;
+    // export native or passed
+    out = (own ? target : source)[key];
+    // bind timers to global for call from export context
+    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
+    // extend global
+    if (target) redefine(target, key, out, type & $export.U);
+    // export
+    if (exports[key] != out) hide(exports, key, exp);
+    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
+  }
+};
+global.core = core;
+// type bitmap
+$export.F = 1;   // forced
+$export.G = 2;   // global
+$export.S = 4;   // static
+$export.P = 8;   // proto
+$export.B = 16;  // bind
+$export.W = 32;  // wrap
+$export.U = 64;  // safe
+$export.R = 128; // real proto method for `library`
+module.exports = $export;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.2.2 IsArray(argument)
+var cof = require('./_cof');
+module.exports = Array.isArray || function isArray(arg) {
+  return cof(arg) == 'Array';
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
+require('./_set-collection-from')('Map');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.from.js	(date 499162500000)
@@ -0,0 +1,37 @@
+'use strict';
+var ctx = require('./_ctx');
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var call = require('./_iter-call');
+var isArrayIter = require('./_is-array-iter');
+var toLength = require('./_to-length');
+var createProperty = require('./_create-property');
+var getIterFn = require('./core.get-iterator-method');
+
+$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
+  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
+  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
+    var O = toObject(arrayLike);
+    var C = typeof this == 'function' ? this : Array;
+    var aLen = arguments.length;
+    var mapfn = aLen > 1 ? arguments[1] : undefined;
+    var mapping = mapfn !== undefined;
+    var index = 0;
+    var iterFn = getIterFn(O);
+    var length, result, step, iterator;
+    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
+    // if object isn't iterable or it's array with default iterator - use simple case
+    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
+      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
+        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
+      }
+    } else {
+      length = toLength(O.length);
+      for (result = new C(length); length > index; index++) {
+        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
+      }
+    }
+    result.length = index;
+    return result;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks-ext.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks-ext.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks-ext.js	(date 499162500000)
@@ -0,0 +1,1 @@
+exports.f = require('./_wks');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-extensible.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-extensible.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-extensible.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 19.1.2.11 Object.isExtensible(O)
+var isObject = require('./_is-object');
+
+require('./_object-sap')('isExtensible', function ($isExtensible) {
+  return function isExtensible(it) {
+    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.italics.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.italics.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.italics.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.9 String.prototype.italics()
+require('./_string-html')('italics', function (createHTML) {
+  return function italics() {
+    return createHTML(this, 'i', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.some.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.some.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.some.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $some = require('./_array-methods')(3);
+
+$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {
+  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
+  some: function some(callbackfn /* , thisArg */) {
+    return $some(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-own-property-descriptor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-own-property-descriptor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-own-property-descriptor.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
+var toIObject = require('./_to-iobject');
+var $getOwnPropertyDescriptor = require('./_object-gopd').f;
+
+require('./_object-sap')('getOwnPropertyDescriptor', function () {
+  return function getOwnPropertyDescriptor(it, key) {
+    return $getOwnPropertyDescriptor(toIObject(it), key);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.sub.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.sub.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.sub.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.13 String.prototype.sub()
+require('./_string-html')('sub', function (createHTML) {
+  return function sub() {
+    return createHTML(this, 'sub', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.match-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.match-all.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.match-all.js	(date 499162500000)
@@ -0,0 +1,30 @@
+'use strict';
+// https://tc39.github.io/String.prototype.matchAll/
+var $export = require('./_export');
+var defined = require('./_defined');
+var toLength = require('./_to-length');
+var isRegExp = require('./_is-regexp');
+var getFlags = require('./_flags');
+var RegExpProto = RegExp.prototype;
+
+var $RegExpStringIterator = function (regexp, string) {
+  this._r = regexp;
+  this._s = string;
+};
+
+require('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {
+  var match = this._r.exec(this._s);
+  return { value: match, done: match === null };
+});
+
+$export($export.P, 'String', {
+  matchAll: function matchAll(regexp) {
+    defined(this);
+    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
+    var S = String(this);
+    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
+    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
+    rx.lastIndex = toLength(regexp.lastIndex);
+    return new $RegExpStringIterator(rx, S);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_entry-virtual.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_entry-virtual.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_entry-virtual.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var core = require('./_core');
+module.exports = function (CONSTRUCTOR) {
+  var C = core[CONSTRUCTOR];
+  return (C.virtual || C.prototype);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-scale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-scale.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-scale.js	(date 499162500000)
@@ -0,0 +1,18 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
+  if (
+    arguments.length === 0
+      // eslint-disable-next-line no-self-compare
+      || x != x
+      // eslint-disable-next-line no-self-compare
+      || inLow != inLow
+      // eslint-disable-next-line no-self-compare
+      || inHigh != inHigh
+      // eslint-disable-next-line no-self-compare
+      || outLow != outLow
+      // eslint-disable-next-line no-self-compare
+      || outHigh != outHigh
+  ) return NaN;
+  if (x === Infinity || x === -Infinity) return x;
+  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_inherit-if-required.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_inherit-if-required.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_inherit-if-required.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var isObject = require('./_is-object');
+var setPrototypeOf = require('./_set-proto').set;
+module.exports = function (that, target, C) {
+  var S = target.constructor;
+  var P;
+  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
+    setPrototypeOf(that, P);
+  } return that;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_ie8-dom-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_ie8-dom-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_ie8-dom-define.js	(date 499162500000)
@@ -0,0 +1,3 @@
+module.exports = !require('./_descriptors') && !require('./_fails')(function () {
+  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.define-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.define-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.define-metadata.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var toMetaKey = metadata.key;
+var ordinaryDefineOwnMetadata = metadata.set;
+
+metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
+  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.system.global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.system.global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.system.global.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/tc39/proposal-global
+var $export = require('./_export');
+
+$export($export.S, 'System', { global: require('./_global') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_promise-resolve.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_promise-resolve.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_promise-resolve.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var newPromiseCapability = require('./_new-promise-capability');
+
+module.exports = function (C, x) {
+  anObject(C);
+  if (isObject(x) && x.constructor === C) return x;
+  var promiseCapability = newPromiseCapability.f(C);
+  var resolve = promiseCapability.resolve;
+  resolve(x);
+  return promiseCapability.promise;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_metadata.js	(date 499162500000)
@@ -0,0 +1,51 @@
+var Map = require('./es6.map');
+var $export = require('./_export');
+var shared = require('./_shared')('metadata');
+var store = shared.store || (shared.store = new (require('./es6.weak-map'))());
+
+var getOrCreateMetadataMap = function (target, targetKey, create) {
+  var targetMetadata = store.get(target);
+  if (!targetMetadata) {
+    if (!create) return undefined;
+    store.set(target, targetMetadata = new Map());
+  }
+  var keyMetadata = targetMetadata.get(targetKey);
+  if (!keyMetadata) {
+    if (!create) return undefined;
+    targetMetadata.set(targetKey, keyMetadata = new Map());
+  } return keyMetadata;
+};
+var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
+  var metadataMap = getOrCreateMetadataMap(O, P, false);
+  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
+};
+var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
+  var metadataMap = getOrCreateMetadataMap(O, P, false);
+  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
+};
+var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
+  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
+};
+var ordinaryOwnMetadataKeys = function (target, targetKey) {
+  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
+  var keys = [];
+  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
+  return keys;
+};
+var toMetaKey = function (it) {
+  return it === undefined || typeof it == 'symbol' ? it : String(it);
+};
+var exp = function (O) {
+  $export($export.S, 'Reflect', O);
+};
+
+module.exports = {
+  store: store,
+  map: getOrCreateMetadataMap,
+  has: ordinaryHasOwnMetadata,
+  get: ordinaryGetOwnMetadata,
+  set: ordinaryDefineOwnMetadata,
+  keys: ordinaryOwnMetadataKeys,
+  key: toMetaKey,
+  exp: exp
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.iaddh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.iaddh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.iaddh.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  iaddh: function iaddh(x0, x1, y0, y1) {
+    var $x0 = x0 >>> 0;
+    var $x1 = x1 >>> 0;
+    var $y0 = y0 >>> 0;
+    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fontcolor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fontcolor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fontcolor.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.7 String.prototype.fontcolor(color)
+require('./_string-html')('fontcolor', function (createHTML) {
+  return function fontcolor(color) {
+    return createHTML(this, 'font', 'color', color);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.for-each.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.for-each.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.for-each.js	(date 499162500000)
@@ -0,0 +1,11 @@
+'use strict';
+var $export = require('./_export');
+var $forEach = require('./_array-methods')(0);
+var STRICT = require('./_strict-method')([].forEach, true);
+
+$export($export.P + $export.F * !STRICT, 'Array', {
+  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
+  forEach: function forEach(callbackfn /* , thisArg */) {
+    return $forEach(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.weak-set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.weak-set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.weak-set.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+var weak = require('./_collection-weak');
+var validate = require('./_validate-collection');
+var WEAK_SET = 'WeakSet';
+
+// 23.4 WeakSet Objects
+require('./_collection')(WEAK_SET, function (get) {
+  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
+}, {
+  // 23.4.3.1 WeakSet.prototype.add(value)
+  add: function add(value) {
+    return weak.def(validate(this, WEAK_SET), value, true);
+  }
+}, weak, false, true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.search.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.search.js	(date 499162500000)
@@ -0,0 +1,31 @@
+'use strict';
+
+var anObject = require('./_an-object');
+var sameValue = require('./_same-value');
+var regExpExec = require('./_regexp-exec-abstract');
+
+// @@search logic
+require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
+  return [
+    // `String.prototype.search` method
+    // https://tc39.github.io/ecma262/#sec-string.prototype.search
+    function search(regexp) {
+      var O = defined(this);
+      var fn = regexp == undefined ? undefined : regexp[SEARCH];
+      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
+    },
+    // `RegExp.prototype[@@search]` method
+    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
+    function (regexp) {
+      var res = maybeCallNative($search, regexp, this);
+      if (res.done) return res.value;
+      var rx = anObject(regexp);
+      var S = String(this);
+      var previousLastIndex = rx.lastIndex;
+      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
+      var result = regExpExec(rx, S);
+      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
+      return result === null ? -1 : result.index;
+    }
+  ];
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.includes.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// 21.1.3.7 String.prototype.includes(searchString, position = 0)
+'use strict';
+var $export = require('./_export');
+var context = require('./_string-context');
+var INCLUDES = 'includes';
+
+$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
+  includes: function includes(searchString /* , position = 0 */) {
+    return !!~context(this, searchString, INCLUDES)
+      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.trim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.trim.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.trim.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// 21.1.3.25 String.prototype.trim()
+require('./_string-trim')('trim', function ($trim) {
+  return function trim() {
+    return $trim(this, 3);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.code-point-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.code-point-at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.code-point-at.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var $export = require('./_export');
+var $at = require('./_string-at')(false);
+$export($export.P, 'String', {
+  // 21.1.3.3 String.prototype.codePointAt(pos)
+  codePointAt: function codePointAt(pos) {
+    return $at(this, pos);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.anchor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.anchor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.anchor.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.2 String.prototype.anchor(name)
+require('./_string-html')('anchor', function (createHTML) {
+  return function anchor(name) {
+    return createHTML(this, 'a', 'name', name);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_species-constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_species-constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_species-constructor.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 7.3.20 SpeciesConstructor(O, defaultConstructor)
+var anObject = require('./_an-object');
+var aFunction = require('./_a-function');
+var SPECIES = require('./_wks')('species');
+module.exports = function (O, D) {
+  var C = anObject(O).constructor;
+  var S;
+  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fixed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fixed.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.6 String.prototype.fixed()
+require('./_string-html')('fixed', function (createHTML) {
+  return function fixed() {
+    return createHTML(this, 'tt', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.define-properties.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.define-properties.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.define-properties.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
+$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.parse-float.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseFloat = require('./_parse-float');
+// 18.2.4 parseFloat(string)
+$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.raw.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.raw.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.raw.js	(date 499162500000)
@@ -0,0 +1,18 @@
+var $export = require('./_export');
+var toIObject = require('./_to-iobject');
+var toLength = require('./_to-length');
+
+$export($export.S, 'String', {
+  // 21.1.2.4 String.raw(callSite, ...substitutions)
+  raw: function raw(callSite) {
+    var tpl = toIObject(callSite.raw);
+    var len = toLength(tpl.length);
+    var aLen = arguments.length;
+    var res = [];
+    var i = 0;
+    while (len > i) {
+      res.push(String(tpl[i++]));
+      if (i < aLen) res.push(String(arguments[i]));
+    } return res.join('');
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_enum-bug-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_enum-bug-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_enum-bug-keys.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// IE 8- don't enum bug keys
+module.exports = (
+  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
+).split(',');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_add-to-unscopables.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_add-to-unscopables.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_add-to-unscopables.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// 22.1.3.31 Array.prototype[@@unscopables]
+var UNSCOPABLES = require('./_wks')('unscopables');
+var ArrayProto = Array.prototype;
+if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
+module.exports = function (key) {
+  ArrayProto[UNSCOPABLES][key] = true;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_library.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_library.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_library.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = false;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_has.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_has.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_has.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var hasOwnProperty = {}.hasOwnProperty;
+module.exports = function (it, key) {
+  return hasOwnProperty.call(it, key);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-frozen.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-frozen.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-frozen.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 19.1.2.12 Object.isFrozen(O)
+var isObject = require('./_is-object');
+
+require('./_object-sap')('isFrozen', function ($isFrozen) {
+  return function isFrozen(it) {
+    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_partial.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_partial.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_partial.js	(date 499162500000)
@@ -0,0 +1,25 @@
+'use strict';
+var path = require('./_path');
+var invoke = require('./_invoke');
+var aFunction = require('./_a-function');
+module.exports = function (/* ...pargs */) {
+  var fn = aFunction(this);
+  var length = arguments.length;
+  var pargs = new Array(length);
+  var i = 0;
+  var _ = path._;
+  var holder = false;
+  while (length > i) if ((pargs[i] = arguments[i++]) === _) holder = true;
+  return function (/* ...args */) {
+    var that = this;
+    var aLen = arguments.length;
+    var j = 0;
+    var k = 0;
+    var args;
+    if (!holder && !aLen) return invoke(fn, pargs, that);
+    args = pargs.slice();
+    if (holder) for (;length > j; j++) if (args[j] === _) args[j] = arguments[k++];
+    while (aLen > k) args.push(arguments[k++]);
+    return invoke(fn, args, that);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is.js	(date 499162500000)
@@ -0,0 +1,3 @@
+// 19.1.3.10 Object.is(value1, value2)
+var $export = require('./_export');
+$export($export.S, 'Object', { is: require('./_same-value') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-html.js	(date 499162500000)
@@ -0,0 +1,19 @@
+var $export = require('./_export');
+var fails = require('./_fails');
+var defined = require('./_defined');
+var quot = /"/g;
+// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
+var createHTML = function (string, tag, attribute, value) {
+  var S = String(defined(string));
+  var p1 = '<' + tag;
+  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
+  return p1 + '>' + S + '</' + tag + '>';
+};
+module.exports = function (NAME, exec) {
+  var O = {};
+  O[NAME] = exec(createHTML);
+  $export($export.P + $export.F * fails(function () {
+    var test = ''[NAME]('"');
+    return test !== test.toLowerCase() || test.split('"').length > 3;
+  }), 'String', O);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_new-promise-capability.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_new-promise-capability.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_new-promise-capability.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+// 25.4.1.5 NewPromiseCapability(C)
+var aFunction = require('./_a-function');
+
+function PromiseCapability(C) {
+  var resolve, reject;
+  this.promise = new C(function ($$resolve, $$reject) {
+    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
+    resolve = $$resolve;
+    reject = $$reject;
+  });
+  this.resolve = aFunction(resolve);
+  this.reject = aFunction(reject);
+}
+
+module.exports.f = function (C) {
+  return new PromiseCapability(C);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-iso-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-iso-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-iso-string.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
+var $export = require('./_export');
+var toISOString = require('./_date-to-iso-string');
+
+// PhantomJS / old WebKit has a broken implementations
+$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
+  toISOString: toISOString
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-assign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-assign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-assign.js	(date 499162500000)
@@ -0,0 +1,34 @@
+'use strict';
+// 19.1.2.1 Object.assign(target, source, ...)
+var getKeys = require('./_object-keys');
+var gOPS = require('./_object-gops');
+var pIE = require('./_object-pie');
+var toObject = require('./_to-object');
+var IObject = require('./_iobject');
+var $assign = Object.assign;
+
+// should work with symbols and should have deterministic property order (V8 bug)
+module.exports = !$assign || require('./_fails')(function () {
+  var A = {};
+  var B = {};
+  // eslint-disable-next-line no-undef
+  var S = Symbol();
+  var K = 'abcdefghijklmnopqrst';
+  A[S] = 7;
+  K.split('').forEach(function (k) { B[k] = k; });
+  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
+}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
+  var T = toObject(target);
+  var aLen = arguments.length;
+  var index = 1;
+  var getSymbols = gOPS.f;
+  var isEnum = pIE.f;
+  while (aLen > index) {
+    var S = IObject(arguments[index++]);
+    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
+    var length = keys.length;
+    var j = 0;
+    var key;
+    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
+  } return T;
+} : $assign;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log2.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log2.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log2.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.22 Math.log2(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  log2: function log2(x) {
+    return Math.log(x) / Math.LN2;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-integer.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 7.1.4 ToInteger
+var ceil = Math.ceil;
+var floor = Math.floor;
+module.exports = function (it) {
+  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.repeat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.repeat.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.repeat.js	(date 499162500000)
@@ -0,0 +1,6 @@
+var $export = require('./_export');
+
+$export($export.P, 'String', {
+  // 21.1.3.13 String.prototype.repeat(count)
+  repeat: require('./_string-repeat')
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log10.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log10.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log10.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.21 Math.log10(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  log10: function log10(x) {
+    return Math.log(x) * Math.LOG10E;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_validate-collection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_validate-collection.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_validate-collection.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var isObject = require('./_is-object');
+module.exports = function (it, TYPE) {
+  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-create.js	(date 499162500000)
@@ -0,0 +1,41 @@
+// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
+var anObject = require('./_an-object');
+var dPs = require('./_object-dps');
+var enumBugKeys = require('./_enum-bug-keys');
+var IE_PROTO = require('./_shared-key')('IE_PROTO');
+var Empty = function () { /* empty */ };
+var PROTOTYPE = 'prototype';
+
+// Create object with fake `null` prototype: use iframe Object with cleared prototype
+var createDict = function () {
+  // Thrash, waste and sodomy: IE GC bug
+  var iframe = require('./_dom-create')('iframe');
+  var i = enumBugKeys.length;
+  var lt = '<';
+  var gt = '>';
+  var iframeDocument;
+  iframe.style.display = 'none';
+  require('./_html').appendChild(iframe);
+  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
+  // createDict = iframe.contentWindow.Object;
+  // html.removeChild(iframe);
+  iframeDocument = iframe.contentWindow.document;
+  iframeDocument.open();
+  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
+  iframeDocument.close();
+  createDict = iframeDocument.F;
+  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
+  return createDict();
+};
+
+module.exports = Object.create || function create(O, Properties) {
+  var result;
+  if (O !== null) {
+    Empty[PROTOTYPE] = anObject(O);
+    result = new Empty();
+    Empty[PROTOTYPE] = null;
+    // add "__proto__" for Object.getPrototypeOf polyfill
+    result[IE_PROTO] = O;
+  } else result = createDict();
+  return Properties === undefined ? result : dPs(result, Properties);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.data-view.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.data-view.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.data-view.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {
+  DataView: require('./_typed-buffer').DataView
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.join.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.join.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.join.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// 22.1.3.13 Array.prototype.join(separator)
+var $export = require('./_export');
+var toIObject = require('./_to-iobject');
+var arrayJoin = [].join;
+
+// fallback for not array-like strings
+$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {
+  join: function join(separator) {
+    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.array-buffer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.array-buffer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.array-buffer.js	(date 499162500000)
@@ -0,0 +1,46 @@
+'use strict';
+var $export = require('./_export');
+var $typed = require('./_typed');
+var buffer = require('./_typed-buffer');
+var anObject = require('./_an-object');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+var isObject = require('./_is-object');
+var ArrayBuffer = require('./_global').ArrayBuffer;
+var speciesConstructor = require('./_species-constructor');
+var $ArrayBuffer = buffer.ArrayBuffer;
+var $DataView = buffer.DataView;
+var $isView = $typed.ABV && ArrayBuffer.isView;
+var $slice = $ArrayBuffer.prototype.slice;
+var VIEW = $typed.VIEW;
+var ARRAY_BUFFER = 'ArrayBuffer';
+
+$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });
+
+$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
+  // 24.1.3.1 ArrayBuffer.isView(arg)
+  isView: function isView(it) {
+    return $isView && $isView(it) || isObject(it) && VIEW in it;
+  }
+});
+
+$export($export.P + $export.U + $export.F * require('./_fails')(function () {
+  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
+}), ARRAY_BUFFER, {
+  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
+  slice: function slice(start, end) {
+    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
+    var len = anObject(this).byteLength;
+    var first = toAbsoluteIndex(start, len);
+    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
+    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
+    var viewS = new $DataView(this);
+    var viewT = new $DataView(result);
+    var index = 0;
+    while (first < fin) {
+      viewT.setUint8(index++, viewS.getUint8(first++));
+    } return result;
+  }
+});
+
+require('./_set-species')(ARRAY_BUFFER);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.freeze.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.freeze.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.freeze.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.5 Object.freeze(O)
+var isObject = require('./_is-object');
+var meta = require('./_meta').onFreeze;
+
+require('./_object-sap')('freeze', function ($freeze) {
+  return function freeze(it) {
+    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-create.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+var create = require('./_object-create');
+var descriptor = require('./_property-desc');
+var setToStringTag = require('./_set-to-string-tag');
+var IteratorPrototype = {};
+
+// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
+require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });
+
+module.exports = function (Constructor, NAME, next) {
+  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
+  setToStringTag(Constructor, NAME + ' Iterator');
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-to-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-to-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-to-array.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var getKeys = require('./_object-keys');
+var toIObject = require('./_to-iobject');
+var isEnum = require('./_object-pie').f;
+module.exports = function (isEntries) {
+  return function (it) {
+    var O = toIObject(it);
+    var keys = getKeys(O);
+    var length = keys.length;
+    var i = 0;
+    var result = [];
+    var key;
+    while (length > i) if (isEnum.call(O, key = keys[i++])) {
+      result.push(isEntries ? [key, O[key]] : O[key]);
+    } return result;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.float64-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.float64-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.float64-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Float64', 8, function (init) {
+  return function Float64Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_a-number-value.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_a-number-value.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_a-number-value.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var cof = require('./_cof');
+module.exports = function (it, msg) {
+  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
+  return +it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.trim-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.trim-right.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.trim-right.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
+require('./_string-trim')('trimRight', function ($trim) {
+  return function trimRight() {
+    return $trim(this, 2);
+  };
+}, 'trimEnd');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-map.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-map.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-map.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
+require('./_set-collection-from')('WeakMap');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-ws.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-ws.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-ws.js	(date 499162500000)
@@ -0,0 +1,2 @@
+module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
+  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.reduce-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.reduce-right.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.reduce-right.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $reduce = require('./_array-reduce');
+
+$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {
+  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
+  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
+    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.iterator.js	(date 499162500000)
@@ -0,0 +1,34 @@
+'use strict';
+var addToUnscopables = require('./_add-to-unscopables');
+var step = require('./_iter-step');
+var Iterators = require('./_iterators');
+var toIObject = require('./_to-iobject');
+
+// 22.1.3.4 Array.prototype.entries()
+// 22.1.3.13 Array.prototype.keys()
+// 22.1.3.29 Array.prototype.values()
+// 22.1.3.30 Array.prototype[@@iterator]()
+module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
+  this._t = toIObject(iterated); // target
+  this._i = 0;                   // next index
+  this._k = kind;                // kind
+// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
+}, function () {
+  var O = this._t;
+  var kind = this._k;
+  var index = this._i++;
+  if (!O || index >= O.length) {
+    this._t = undefined;
+    return step(1);
+  }
+  if (kind == 'keys') return step(0, index);
+  if (kind == 'values') return step(0, O[index]);
+  return step(0, [index, O[index]]);
+}, 'values');
+
+// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
+Iterators.Arguments = Iterators.Array;
+
+addToUnscopables('keys');
+addToUnscopables('values');
+addToUnscopables('entries');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.dom.iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.dom.iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.dom.iterable.js	(date 499162500000)
@@ -0,0 +1,58 @@
+var $iterators = require('./es6.array.iterator');
+var getKeys = require('./_object-keys');
+var redefine = require('./_redefine');
+var global = require('./_global');
+var hide = require('./_hide');
+var Iterators = require('./_iterators');
+var wks = require('./_wks');
+var ITERATOR = wks('iterator');
+var TO_STRING_TAG = wks('toStringTag');
+var ArrayValues = Iterators.Array;
+
+var DOMIterables = {
+  CSSRuleList: true, // TODO: Not spec compliant, should be false.
+  CSSStyleDeclaration: false,
+  CSSValueList: false,
+  ClientRectList: false,
+  DOMRectList: false,
+  DOMStringList: false,
+  DOMTokenList: true,
+  DataTransferItemList: false,
+  FileList: false,
+  HTMLAllCollection: false,
+  HTMLCollection: false,
+  HTMLFormElement: false,
+  HTMLSelectElement: false,
+  MediaList: true, // TODO: Not spec compliant, should be false.
+  MimeTypeArray: false,
+  NamedNodeMap: false,
+  NodeList: true,
+  PaintRequestList: false,
+  Plugin: false,
+  PluginArray: false,
+  SVGLengthList: false,
+  SVGNumberList: false,
+  SVGPathSegList: false,
+  SVGPointList: false,
+  SVGStringList: false,
+  SVGTransformList: false,
+  SourceBufferList: false,
+  StyleSheetList: true, // TODO: Not spec compliant, should be false.
+  TextTrackCueList: false,
+  TextTrackList: false,
+  TouchList: false
+};
+
+for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
+  var NAME = collections[i];
+  var explicit = DOMIterables[NAME];
+  var Collection = global[NAME];
+  var proto = Collection && Collection.prototype;
+  var key;
+  if (proto) {
+    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
+    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
+    Iterators[NAME] = ArrayValues;
+    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
+  }
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-step.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-step.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-step.js	(date 499162500000)
@@ -0,0 +1,3 @@
+module.exports = function (done, value) {
+  return { value: value, done: !!done };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.define.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var define = require('./_object-define');
+
+$export($export.S + $export.F, 'Object', { define: define });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.signbit.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.signbit.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.signbit.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// http://jfbastien.github.io/papers/Math.signbit.html
+var $export = require('./_export');
+
+$export($export.S, 'Math', { signbit: function signbit(x) {
+  // eslint-disable-next-line no-self-compare
+  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_a-function.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_a-function.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_a-function.js	(date 499162500000)
@@ -0,0 +1,4 @@
+module.exports = function (it) {
+  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-set.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-set.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-set.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
+require('./_set-collection-of')('WeakSet');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.scale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.scale.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.scale.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', { scale: require('./_math-scale') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
+require('./_set-collection-of')('Map');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.apply.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.apply.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.apply.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
+var $export = require('./_export');
+var aFunction = require('./_a-function');
+var anObject = require('./_an-object');
+var rApply = (require('./_global').Reflect || {}).apply;
+var fApply = Function.apply;
+// MS Edge argumentsList argument is optional
+$export($export.S + $export.F * !require('./_fails')(function () {
+  rApply(function () { /* empty */ });
+}), 'Reflect', {
+  apply: function apply(target, thisArgument, argumentsList) {
+    var T = aFunction(target);
+    var L = anObject(argumentsList);
+    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.number.iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.number.iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.number.iterator.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+require('./_iter-define')(Number, 'Number', function (iterated) {
+  this._l = +iterated;
+  this._i = 0;
+}, function () {
+  var i = this._i++;
+  var done = !(i < this._l);
+  return { done: done, value: done ? undefined : i };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.parse-int.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseInt = require('./_parse-int');
+// 20.1.2.13 Number.parseInt(string, radix)
+$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.to-string.js	(date 499162500000)
@@ -0,0 +1,25 @@
+'use strict';
+require('./es6.regexp.flags');
+var anObject = require('./_an-object');
+var $flags = require('./_flags');
+var DESCRIPTORS = require('./_descriptors');
+var TO_STRING = 'toString';
+var $toString = /./[TO_STRING];
+
+var define = function (fn) {
+  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
+};
+
+// 21.2.5.14 RegExp.prototype.toString()
+if (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
+  define(function toString() {
+    var R = anObject(this);
+    return '/'.concat(R.source, '/',
+      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
+  });
+// FF44- RegExp#toString has a wrong name
+} else if ($toString.name != TO_STRING) {
+  define(function toString() {
+    return $toString.call(this);
+  });
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-primitive.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// 7.1.1 ToPrimitive(input [, PreferredType])
+var isObject = require('./_is-object');
+// instead of the ES6 spec version, we didn't implement @@toPrimitive case
+// and the second argument - flag - preferred type is a string
+module.exports = function (it, S) {
+  if (!isObject(it)) return it;
+  var fn, val;
+  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
+  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
+  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
+  throw TypeError("Can't convert object to primitive value");
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.hypot.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.hypot.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.hypot.js	(date 499162500000)
@@ -0,0 +1,25 @@
+// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
+var $export = require('./_export');
+var abs = Math.abs;
+
+$export($export.S, 'Math', {
+  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
+    var sum = 0;
+    var i = 0;
+    var aLen = arguments.length;
+    var larg = 0;
+    var arg, div;
+    while (i < aLen) {
+      arg = abs(arguments[i++]);
+      if (larg < arg) {
+        div = larg / arg;
+        sum = sum * div * div + 1;
+        larg = arg;
+      } else if (arg > 0) {
+        div = arg / larg;
+        sum += div * div;
+      } else sum += arg;
+    }
+    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.define-getter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.define-getter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.define-getter.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var aFunction = require('./_a-function');
+var $defineProperty = require('./_object-dp');
+
+// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __defineGetter__: function __defineGetter__(P, getter) {
+    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.expm1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.expm1.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.expm1.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 20.2.2.14 Math.expm1(x)
+var $export = require('./_export');
+var $expm1 = require('./_math-expm1');
+
+$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.is-extensible.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.is-extensible.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.is-extensible.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// 26.1.10 Reflect.isExtensible(target)
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var $isExtensible = Object.isExtensible;
+
+$export($export.S, 'Reflect', {
+  isExtensible: function isExtensible(target) {
+    anObject(target);
+    return $isExtensible ? $isExtensible(target) : true;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-metadata.js	(date 499162500000)
@@ -0,0 +1,17 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var getPrototypeOf = require('./_object-gpo');
+var ordinaryHasOwnMetadata = metadata.has;
+var ordinaryGetOwnMetadata = metadata.get;
+var toMetaKey = metadata.key;
+
+var ordinaryGetMetadata = function (MetadataKey, O, P) {
+  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
+  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
+  var parent = getPrototypeOf(O);
+  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
+};
+
+metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_same-value.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_same-value.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_same-value.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.2.9 SameValue(x, y)
+module.exports = Object.is || function is(x, y) {
+  // eslint-disable-next-line no-self-compare
+  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fails-is-regexp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fails-is-regexp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fails-is-regexp.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var MATCH = require('./_wks')('match');
+module.exports = function (KEY) {
+  var re = /./;
+  try {
+    '/./'[KEY](re);
+  } catch (e) {
+    try {
+      re[MATCH] = false;
+      return !'/./'[KEY](re);
+    } catch (f) { /* empty */ }
+  } return true;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.map.js	(date 499162500000)
@@ -0,0 +1,19 @@
+'use strict';
+var strong = require('./_collection-strong');
+var validate = require('./_validate-collection');
+var MAP = 'Map';
+
+// 23.1 Map Objects
+module.exports = require('./_collection')(MAP, function (get) {
+  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
+}, {
+  // 23.1.3.6 Map.prototype.get(key)
+  get: function get(key) {
+    var entry = strong.getEntry(validate(this, MAP), key);
+    return entry && entry.v;
+  },
+  // 23.1.3.9 Map.prototype.set(key, value)
+  set: function set(key, value) {
+    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
+  }
+}, strong, true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-iobject.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-iobject.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-iobject.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// to indexed object, toObject with fallback for non-array-like ES3 strings
+var IObject = require('./_iobject');
+var defined = require('./_defined');
+module.exports = function (it) {
+  return IObject(defined(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.from-code-point.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.from-code-point.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.from-code-point.js	(date 499162500000)
@@ -0,0 +1,23 @@
+var $export = require('./_export');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var fromCharCode = String.fromCharCode;
+var $fromCodePoint = String.fromCodePoint;
+
+// length should be 1, old FF problem
+$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
+  // 21.1.2.2 String.fromCodePoint(...codePoints)
+  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
+    var res = [];
+    var aLen = arguments.length;
+    var i = 0;
+    var code;
+    while (aLen > i) {
+      code = +arguments[i++];
+      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
+      res.push(code < 0x10000
+        ? fromCharCode(code)
+        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
+      );
+    } return res.join('');
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.imulh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.imulh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.imulh.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  imulh: function imulh(u, v) {
+    var UINT16 = 0xffff;
+    var $u = +u;
+    var $v = +v;
+    var u0 = $u & UINT16;
+    var v0 = $v & UINT16;
+    var u1 = $u >> 16;
+    var v1 = $v >> 16;
+    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
+    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-detect.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-detect.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-detect.js	(date 499162500000)
@@ -0,0 +1,22 @@
+var ITERATOR = require('./_wks')('iterator');
+var SAFE_CLOSING = false;
+
+try {
+  var riter = [7][ITERATOR]();
+  riter['return'] = function () { SAFE_CLOSING = true; };
+  // eslint-disable-next-line no-throw-literal
+  Array.from(riter, function () { throw 2; });
+} catch (e) { /* empty */ }
+
+module.exports = function (exec, skipClosing) {
+  if (!skipClosing && !SAFE_CLOSING) return false;
+  var safe = false;
+  try {
+    var arr = [7];
+    var iter = arr[ITERATOR]();
+    iter.next = function () { return { done: safe = true }; };
+    arr[ITERATOR] = function () { return iter; };
+    exec(arr);
+  } catch (e) { /* empty */ }
+  return safe;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.has-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.has-instance.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.has-instance.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+var isObject = require('./_is-object');
+var getPrototypeOf = require('./_object-gpo');
+var HAS_INSTANCE = require('./_wks')('hasInstance');
+var FunctionProto = Function.prototype;
+// 19.2.3.6 Function.prototype[@@hasInstance](V)
+if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
+  if (typeof this != 'function' || !isObject(O)) return false;
+  if (!isObject(this.prototype)) return O instanceof this;
+  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
+  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
+  return false;
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.set.js	(date 499162500000)
@@ -0,0 +1,33 @@
+// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
+var dP = require('./_object-dp');
+var gOPD = require('./_object-gopd');
+var getPrototypeOf = require('./_object-gpo');
+var has = require('./_has');
+var $export = require('./_export');
+var createDesc = require('./_property-desc');
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+
+function set(target, propertyKey, V /* , receiver */) {
+  var receiver = arguments.length < 4 ? target : arguments[3];
+  var ownDesc = gOPD.f(anObject(target), propertyKey);
+  var existingDescriptor, proto;
+  if (!ownDesc) {
+    if (isObject(proto = getPrototypeOf(target))) {
+      return set(proto, propertyKey, V, receiver);
+    }
+    ownDesc = createDesc(0);
+  }
+  if (has(ownDesc, 'value')) {
+    if (ownDesc.writable === false || !isObject(receiver)) return false;
+    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
+      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
+      existingDescriptor.value = V;
+      dP.f(receiver, propertyKey, existingDescriptor);
+    } else dP.f(receiver, propertyKey, createDesc(0, V));
+    return true;
+  }
+  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
+}
+
+$export($export.S, 'Reflect', { set: set });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.set-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.set-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.set-prototype-of.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// 26.1.14 Reflect.setPrototypeOf(target, proto)
+var $export = require('./_export');
+var setProto = require('./_set-proto');
+
+if (setProto) $export($export.S, 'Reflect', {
+  setPrototypeOf: function setPrototypeOf(target, proto) {
+    setProto.check(target, proto);
+    try {
+      setProto.set(target, proto);
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.cosh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.cosh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.cosh.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.2.2.12 Math.cosh(x)
+var $export = require('./_export');
+var exp = Math.exp;
+
+$export($export.S, 'Math', {
+  cosh: function cosh(x) {
+    return (exp(x = +x) + exp(-x)) / 2;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.sign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.sign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.sign.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.28 Math.sign(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', { sign: require('./_math-sign') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.iterator.js	(date 499162500000)
@@ -0,0 +1,17 @@
+'use strict';
+var $at = require('./_string-at')(true);
+
+// 21.1.3.27 String.prototype[@@iterator]()
+require('./_iter-define')(String, 'String', function (iterated) {
+  this._t = String(iterated); // target
+  this._i = 0;                // next index
+// 21.1.5.2.1 %StringIteratorPrototype%.next()
+}, function () {
+  var O = this._t;
+  var index = this._i;
+  var point;
+  if (index >= O.length) return { value: undefined, done: true };
+  point = $at(O, index);
+  this._i += point.length;
+  return { value: point, done: false };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-prototype-of.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.9 Object.getPrototypeOf(O)
+var toObject = require('./_to-object');
+var $getPrototypeOf = require('./_object-gpo');
+
+require('./_object-sap')('getPrototypeOf', function () {
+  return function getPrototypeOf(it) {
+    return $getPrototypeOf(toObject(it));
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.map.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $map = require('./_array-methods')(1);
+
+$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {
+  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
+  map: function map(callbackfn /* , thisArg */) {
+    return $map(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get.js	(date 499162500000)
@@ -0,0 +1,21 @@
+// 26.1.6 Reflect.get(target, propertyKey [, receiver])
+var gOPD = require('./_object-gopd');
+var getPrototypeOf = require('./_object-gpo');
+var has = require('./_has');
+var $export = require('./_export');
+var isObject = require('./_is-object');
+var anObject = require('./_an-object');
+
+function get(target, propertyKey /* , receiver */) {
+  var receiver = arguments.length < 3 ? target : arguments[2];
+  var desc, proto;
+  if (anObject(target) === receiver) return target[propertyKey];
+  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
+    ? desc.value
+    : desc.get !== undefined
+      ? desc.get.call(receiver)
+      : undefined;
+  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
+}
+
+$export($export.S, 'Reflect', { get: get });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_redefine.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_redefine.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_redefine.js	(date 499162500000)
@@ -0,0 +1,31 @@
+var global = require('./_global');
+var hide = require('./_hide');
+var has = require('./_has');
+var SRC = require('./_uid')('src');
+var $toString = require('./_function-to-string');
+var TO_STRING = 'toString';
+var TPL = ('' + $toString).split(TO_STRING);
+
+require('./_core').inspectSource = function (it) {
+  return $toString.call(it);
+};
+
+(module.exports = function (O, key, val, safe) {
+  var isFunction = typeof val == 'function';
+  if (isFunction) has(val, 'name') || hide(val, 'name', key);
+  if (O[key] === val) return;
+  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
+  if (O === global) {
+    O[key] = val;
+  } else if (!safe) {
+    delete O[key];
+    hide(O, key, val);
+  } else if (O[key]) {
+    O[key] = val;
+  } else {
+    hide(O, key, val);
+  }
+// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
+})(Function.prototype, TO_STRING, function toString() {
+  return typeof this == 'function' && this[SRC] || $toString.call(this);
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-dps.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-dps.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-dps.js	(date 499162500000)
@@ -0,0 +1,13 @@
+var dP = require('./_object-dp');
+var anObject = require('./_an-object');
+var getKeys = require('./_object-keys');
+
+module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
+  anObject(O);
+  var keys = getKeys(Properties);
+  var length = keys.length;
+  var i = 0;
+  var P;
+  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
+  return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-fround.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-fround.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-fround.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// 20.2.2.16 Math.fround(x)
+var sign = require('./_math-sign');
+var pow = Math.pow;
+var EPSILON = pow(2, -52);
+var EPSILON32 = pow(2, -23);
+var MAX32 = pow(2, 127) * (2 - EPSILON32);
+var MIN32 = pow(2, -126);
+
+var roundTiesToEven = function (n) {
+  return n + 1 / EPSILON - 1 / EPSILON;
+};
+
+module.exports = Math.fround || function fround(x) {
+  var $abs = Math.abs(x);
+  var $sign = sign(x);
+  var a, result;
+  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
+  a = (1 + EPSILON32 / EPSILON) * $abs;
+  result = a - (a - $abs);
+  // eslint-disable-next-line no-self-compare
+  if (result > MAX32 || result != result) return $sign * Infinity;
+  return $sign * result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.string.escape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.string.escape-html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.string.escape-html.js	(date 499162500000)
@@ -0,0 +1,11 @@
+'use strict';
+var $export = require('./_export');
+var $re = require('./_replacer')(/[&<>"']/g, {
+  '&': '&amp;',
+  '<': '&lt;',
+  '>': '&gt;',
+  '"': '&quot;',
+  "'": '&apos;'
+});
+
+$export($export.P + $export.F, 'String', { escapeHTML: function escapeHTML() { return $re(this); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.timers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.timers.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.timers.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// ie9- setTimeout & setInterval additional parameters fix
+var global = require('./_global');
+var $export = require('./_export');
+var userAgent = require('./_user-agent');
+var slice = [].slice;
+var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
+var wrap = function (set) {
+  return function (fn, time /* , ...args */) {
+    var boundArgs = arguments.length > 2;
+    var args = boundArgs ? slice.call(arguments, 2) : false;
+    return set(boundArgs ? function () {
+      // eslint-disable-next-line no-new-func
+      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
+    } : fn, time);
+  };
+};
+$export($export.G + $export.B + $export.F * MSIE, {
+  setTimeout: wrap(global.setTimeout),
+  setInterval: wrap(global.setInterval)
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.pad-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.pad-end.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.pad-end.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// https://github.com/tc39/proposal-string-pad-start-end
+var $export = require('./_export');
+var $pad = require('./_string-pad');
+var userAgent = require('./_user-agent');
+
+// https://github.com/zloirock/core-js/issues/280
+var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);
+
+$export($export.P + $export.F * WEBKIT_BUG, 'String', {
+  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
+    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_invoke.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_invoke.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_invoke.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// fast apply, http://jsperf.lnkit.com/fast-apply/5
+module.exports = function (fn, args, that) {
+  var un = that === undefined;
+  switch (args.length) {
+    case 0: return un ? fn()
+                      : fn.call(that);
+    case 1: return un ? fn(args[0])
+                      : fn.call(that, args[0]);
+    case 2: return un ? fn(args[0], args[1])
+                      : fn.call(that, args[0], args[1]);
+    case 3: return un ? fn(args[0], args[1], args[2])
+                      : fn.call(that, args[0], args[1], args[2]);
+    case 4: return un ? fn(args[0], args[1], args[2], args[3])
+                      : fn.call(that, args[0], args[1], args[2], args[3]);
+  } return fn.apply(that, args);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-primitive.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var TO_PRIMITIVE = require('./_wks')('toPrimitive');
+var proto = Date.prototype;
+
+if (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_dom-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_dom-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_dom-create.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var isObject = require('./_is-object');
+var document = require('./_global').document;
+// typeof document.createElement is 'object' in old IE
+var is = isObject(document) && isObject(document.createElement);
+module.exports = function (it) {
+  return is ? document.createElement(it) : {};
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_hide.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_hide.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_hide.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var dP = require('./_object-dp');
+var createDesc = require('./_property-desc');
+module.exports = require('./_descriptors') ? function (object, key, value) {
+  return dP.f(object, key, createDesc(1, value));
+} : function (object, key, value) {
+  object[key] = value;
+  return object;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection.js	(date 499162500000)
@@ -0,0 +1,85 @@
+'use strict';
+var global = require('./_global');
+var $export = require('./_export');
+var redefine = require('./_redefine');
+var redefineAll = require('./_redefine-all');
+var meta = require('./_meta');
+var forOf = require('./_for-of');
+var anInstance = require('./_an-instance');
+var isObject = require('./_is-object');
+var fails = require('./_fails');
+var $iterDetect = require('./_iter-detect');
+var setToStringTag = require('./_set-to-string-tag');
+var inheritIfRequired = require('./_inherit-if-required');
+
+module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
+  var Base = global[NAME];
+  var C = Base;
+  var ADDER = IS_MAP ? 'set' : 'add';
+  var proto = C && C.prototype;
+  var O = {};
+  var fixMethod = function (KEY) {
+    var fn = proto[KEY];
+    redefine(proto, KEY,
+      KEY == 'delete' ? function (a) {
+        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
+      } : KEY == 'has' ? function has(a) {
+        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
+      } : KEY == 'get' ? function get(a) {
+        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
+      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
+        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
+    );
+  };
+  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
+    new C().entries().next();
+  }))) {
+    // create collection constructor
+    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
+    redefineAll(C.prototype, methods);
+    meta.NEED = true;
+  } else {
+    var instance = new C();
+    // early implementations not supports chaining
+    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
+    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
+    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
+    // most early implementations doesn't supports iterables, most modern - not close it correctly
+    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
+    // for early implementations -0 and +0 not the same
+    var BUGGY_ZERO = !IS_WEAK && fails(function () {
+      // V8 ~ Chromium 42- fails only with 5+ elements
+      var $instance = new C();
+      var index = 5;
+      while (index--) $instance[ADDER](index, index);
+      return !$instance.has(-0);
+    });
+    if (!ACCEPT_ITERABLES) {
+      C = wrapper(function (target, iterable) {
+        anInstance(target, C, NAME);
+        var that = inheritIfRequired(new Base(), target, C);
+        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
+        return that;
+      });
+      C.prototype = proto;
+      proto.constructor = C;
+    }
+    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
+      fixMethod('delete');
+      fixMethod('has');
+      IS_MAP && fixMethod('get');
+    }
+    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
+    // weak collections should not contains .clear method
+    if (IS_WEAK && proto.clear) delete proto.clear;
+  }
+
+  setToStringTag(C, NAME);
+
+  O[NAME] = C;
+  $export($export.G + $export.W + $export.F * (C != Base), O);
+
+  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
+
+  return C;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_regexp-exec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_regexp-exec.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_regexp-exec.js	(date 499162500000)
@@ -0,0 +1,58 @@
+'use strict';
+
+var regexpFlags = require('./_flags');
+
+var nativeExec = RegExp.prototype.exec;
+// This always refers to the native implementation, because the
+// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
+// which loads this file before patching the method.
+var nativeReplace = String.prototype.replace;
+
+var patchedExec = nativeExec;
+
+var LAST_INDEX = 'lastIndex';
+
+var UPDATES_LAST_INDEX_WRONG = (function () {
+  var re1 = /a/,
+      re2 = /b*/g;
+  nativeExec.call(re1, 'a');
+  nativeExec.call(re2, 'a');
+  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
+})();
+
+// nonparticipating capturing group, copied from es5-shim's String#split patch.
+var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;
+
+var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;
+
+if (PATCH) {
+  patchedExec = function exec(str) {
+    var re = this;
+    var lastIndex, reCopy, match, i;
+
+    if (NPCG_INCLUDED) {
+      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
+    }
+    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];
+
+    match = nativeExec.call(re, str);
+
+    if (UPDATES_LAST_INDEX_WRONG && match) {
+      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
+    }
+    if (NPCG_INCLUDED && match && match.length > 1) {
+      // Fix browsers whose `exec` methods don't consistently return `undefined`
+      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
+      // eslint-disable-next-line no-loop-func
+      nativeReplace.call(match[0], reCopy, function () {
+        for (i = 1; i < arguments.length - 2; i++) {
+          if (arguments[i] === undefined) match[i] = undefined;
+        }
+      });
+    }
+
+    return match;
+  };
+}
+
+module.exports = patchedExec;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.to-fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.to-fixed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.to-fixed.js	(date 499162500000)
@@ -0,0 +1,114 @@
+'use strict';
+var $export = require('./_export');
+var toInteger = require('./_to-integer');
+var aNumberValue = require('./_a-number-value');
+var repeat = require('./_string-repeat');
+var $toFixed = 1.0.toFixed;
+var floor = Math.floor;
+var data = [0, 0, 0, 0, 0, 0];
+var ERROR = 'Number.toFixed: incorrect invocation!';
+var ZERO = '0';
+
+var multiply = function (n, c) {
+  var i = -1;
+  var c2 = c;
+  while (++i < 6) {
+    c2 += n * data[i];
+    data[i] = c2 % 1e7;
+    c2 = floor(c2 / 1e7);
+  }
+};
+var divide = function (n) {
+  var i = 6;
+  var c = 0;
+  while (--i >= 0) {
+    c += data[i];
+    data[i] = floor(c / n);
+    c = (c % n) * 1e7;
+  }
+};
+var numToString = function () {
+  var i = 6;
+  var s = '';
+  while (--i >= 0) {
+    if (s !== '' || i === 0 || data[i] !== 0) {
+      var t = String(data[i]);
+      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
+    }
+  } return s;
+};
+var pow = function (x, n, acc) {
+  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
+};
+var log = function (x) {
+  var n = 0;
+  var x2 = x;
+  while (x2 >= 4096) {
+    n += 12;
+    x2 /= 4096;
+  }
+  while (x2 >= 2) {
+    n += 1;
+    x2 /= 2;
+  } return n;
+};
+
+$export($export.P + $export.F * (!!$toFixed && (
+  0.00008.toFixed(3) !== '0.000' ||
+  0.9.toFixed(0) !== '1' ||
+  1.255.toFixed(2) !== '1.25' ||
+  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
+) || !require('./_fails')(function () {
+  // V8 ~ Android 4.3-
+  $toFixed.call({});
+})), 'Number', {
+  toFixed: function toFixed(fractionDigits) {
+    var x = aNumberValue(this, ERROR);
+    var f = toInteger(fractionDigits);
+    var s = '';
+    var m = ZERO;
+    var e, z, j, k;
+    if (f < 0 || f > 20) throw RangeError(ERROR);
+    // eslint-disable-next-line no-self-compare
+    if (x != x) return 'NaN';
+    if (x <= -1e21 || x >= 1e21) return String(x);
+    if (x < 0) {
+      s = '-';
+      x = -x;
+    }
+    if (x > 1e-21) {
+      e = log(x * pow(2, 69, 1)) - 69;
+      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
+      z *= 0x10000000000000;
+      e = 52 - e;
+      if (e > 0) {
+        multiply(0, z);
+        j = f;
+        while (j >= 7) {
+          multiply(1e7, 0);
+          j -= 7;
+        }
+        multiply(pow(10, j, 1), 0);
+        j = e - 1;
+        while (j >= 23) {
+          divide(1 << 23);
+          j -= 23;
+        }
+        divide(1 << j);
+        multiply(1, 1);
+        divide(2);
+        m = numToString();
+      } else {
+        multiply(0, z);
+        multiply(1 << -e, 0);
+        m = numToString() + repeat.call(ZERO, f);
+      }
+    }
+    if (f > 0) {
+      k = m.length;
+      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
+    } else {
+      m = s + m;
+    } return m;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.of.js	(date 499162500000)
@@ -0,0 +1,19 @@
+'use strict';
+var $export = require('./_export');
+var createProperty = require('./_create-property');
+
+// WebKit Array.of isn't generic
+$export($export.S + $export.F * require('./_fails')(function () {
+  function F() { /* empty */ }
+  return !(Array.of.call(F) instanceof F);
+}), 'Array', {
+  // 22.1.2.3 Array.of( ...items)
+  of: function of(/* ...args */) {
+    var index = 0;
+    var aLen = arguments.length;
+    var result = new (typeof this == 'function' ? this : Array)(aLen);
+    while (aLen > index) createProperty(result, index, arguments[index++]);
+    result.length = aLen;
+    return result;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.epsilon.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.epsilon.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.epsilon.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.1 Number.EPSILON
+var $export = require('./_export');
+
+$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.float32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.float32-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.float32-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Float32', 4, function (init) {
+  return function Float32Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.now.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.now.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.now.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.3.3.1 / 15.9.4.4 Date.now()
+var $export = require('./_export');
+
+$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_flags.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_flags.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_flags.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+// 21.2.5.3 get RegExp.prototype.flags
+var anObject = require('./_an-object');
+module.exports = function () {
+  var that = anObject(this);
+  var result = '';
+  if (that.global) result += 'g';
+  if (that.ignoreCase) result += 'i';
+  if (that.multiline) result += 'm';
+  if (that.unicode) result += 'u';
+  if (that.sticky) result += 'y';
+  return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.slice.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.slice.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.slice.js	(date 499162500000)
@@ -0,0 +1,28 @@
+'use strict';
+var $export = require('./_export');
+var html = require('./_html');
+var cof = require('./_cof');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+var arraySlice = [].slice;
+
+// fallback for not array-like ES3 strings and DOM objects
+$export($export.P + $export.F * require('./_fails')(function () {
+  if (html) arraySlice.call(html);
+}), 'Array', {
+  slice: function slice(begin, end) {
+    var len = toLength(this.length);
+    var klass = cof(this);
+    end = end === undefined ? len : end;
+    if (klass == 'Array') return arraySlice.call(this, begin, end);
+    var start = toAbsoluteIndex(begin, len);
+    var upTo = toAbsoluteIndex(end, len);
+    var size = toLength(upTo - start);
+    var cloned = new Array(size);
+    var i = 0;
+    for (; i < size; i++) cloned[i] = klass == 'String'
+      ? this.charAt(start + i)
+      : this[start + i];
+    return cloned;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_defined.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_defined.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_defined.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.2.1 RequireObjectCoercible(argument)
+module.exports = function (it) {
+  if (it == undefined) throw TypeError("Can't call method on  " + it);
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.entries.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.entries.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.entries.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/tc39/proposal-object-values-entries
+var $export = require('./_export');
+var $entries = require('./_object-to-array')(true);
+
+$export($export.S, 'Object', {
+  entries: function entries(it) {
+    return $entries(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopd.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopd.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopd.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var pIE = require('./_object-pie');
+var createDesc = require('./_property-desc');
+var toIObject = require('./_to-iobject');
+var toPrimitive = require('./_to-primitive');
+var has = require('./_has');
+var IE8_DOM_DEFINE = require('./_ie8-dom-define');
+var gOPD = Object.getOwnPropertyDescriptor;
+
+exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
+  O = toIObject(O);
+  P = toPrimitive(P, true);
+  if (IE8_DOM_DEFINE) try {
+    return gOPD(O, P);
+  } catch (e) { /* empty */ }
+  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.seal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.seal.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.seal.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.17 Object.seal(O)
+var isObject = require('./_is-object');
+var meta = require('./_meta').onFreeze;
+
+require('./_object-sap')('seal', function ($seal) {
+  return function seal(it) {
+    return $seal && isObject(it) ? $seal(meta(it)) : it;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
+var gOPD = require('./_object-gopd');
+var $export = require('./_export');
+var anObject = require('./_an-object');
+
+$export($export.S, 'Reflect', {
+  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
+    return gOPD.f(anObject(target), propertyKey);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-expm1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-expm1.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-expm1.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.2.2.14 Math.expm1(x)
+var $expm1 = Math.expm1;
+module.exports = (!$expm1
+  // Old FF bug
+  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
+  // Tor Browser bug
+  || $expm1(-2e-17) != -2e-17
+) ? function expm1(x) {
+  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
+} : $expm1;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.is-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.is-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.is-array.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
+var $export = require('./_export');
+
+$export($export.S, 'Array', { isArray: require('./_is-array') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_shared-key.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_shared-key.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_shared-key.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var shared = require('./_shared')('keys');
+var uid = require('./_uid');
+module.exports = function (key) {
+  return shared[key] || (shared[key] = uid(key));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.copy-within.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.copy-within.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.copy-within.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
+var $export = require('./_export');
+
+$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });
+
+require('./_add-to-unscopables')('copyWithin');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_property-desc.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_property-desc.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_property-desc.js	(date 499162500000)
@@ -0,0 +1,8 @@
+module.exports = function (bitmap, value) {
+  return {
+    enumerable: !(bitmap & 1),
+    configurable: !(bitmap & 2),
+    writable: !(bitmap & 4),
+    value: value
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.create.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
+$export($export.S, 'Object', { create: require('./_object-create') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-methods.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-methods.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-methods.js	(date 499162500000)
@@ -0,0 +1,44 @@
+// 0 -> Array#forEach
+// 1 -> Array#map
+// 2 -> Array#filter
+// 3 -> Array#some
+// 4 -> Array#every
+// 5 -> Array#find
+// 6 -> Array#findIndex
+var ctx = require('./_ctx');
+var IObject = require('./_iobject');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var asc = require('./_array-species-create');
+module.exports = function (TYPE, $create) {
+  var IS_MAP = TYPE == 1;
+  var IS_FILTER = TYPE == 2;
+  var IS_SOME = TYPE == 3;
+  var IS_EVERY = TYPE == 4;
+  var IS_FIND_INDEX = TYPE == 6;
+  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
+  var create = $create || asc;
+  return function ($this, callbackfn, that) {
+    var O = toObject($this);
+    var self = IObject(O);
+    var f = ctx(callbackfn, that, 3);
+    var length = toLength(self.length);
+    var index = 0;
+    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
+    var val, res;
+    for (;length > index; index++) if (NO_HOLES || index in self) {
+      val = self[index];
+      res = f(val, index, O);
+      if (TYPE) {
+        if (IS_MAP) result[index] = res;   // map
+        else if (res) switch (TYPE) {
+          case 3: return true;             // some
+          case 5: return val;              // find
+          case 6: return index;            // findIndex
+          case 2: result.push(val);        // filter
+        } else if (IS_EVERY) return false; // every
+      }
+    }
+    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.tanh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.tanh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.tanh.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// 20.2.2.33 Math.tanh(x)
+var $export = require('./_export');
+var expm1 = require('./_math-expm1');
+var exp = Math.exp;
+
+$export($export.S, 'Math', {
+  tanh: function tanh(x) {
+    var a = expm1(x = +x);
+    var b = expm1(-x);
+    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.starts-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.starts-with.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.starts-with.js	(date 499162500000)
@@ -0,0 +1,18 @@
+// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
+'use strict';
+var $export = require('./_export');
+var toLength = require('./_to-length');
+var context = require('./_string-context');
+var STARTS_WITH = 'startsWith';
+var $startsWith = ''[STARTS_WITH];
+
+$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
+  startsWith: function startsWith(searchString /* , position = 0 */) {
+    var that = context(this, searchString, STARTS_WITH);
+    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
+    var search = String(searchString);
+    return $startsWith
+      ? $startsWith.call(that, search, index)
+      : that.slice(index, index + search.length) === search;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.has-own-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.has-own-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.has-own-metadata.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var ordinaryHasOwnMetadata = metadata.has;
+var toMetaKey = metadata.key;
+
+metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
+    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.name.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.name.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.name.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var dP = require('./_object-dp').f;
+var FProto = Function.prototype;
+var nameRE = /^\s*function ([^ (]*)/;
+var NAME = 'name';
+
+// 19.2.4.2 name
+NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
+  configurable: true,
+  get: function () {
+    try {
+      return ('' + this).match(nameRE)[1];
+    } catch (e) {
+      return '';
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.sort.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.sort.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.sort.js	(date 499162500000)
@@ -0,0 +1,23 @@
+'use strict';
+var $export = require('./_export');
+var aFunction = require('./_a-function');
+var toObject = require('./_to-object');
+var fails = require('./_fails');
+var $sort = [].sort;
+var test = [1, 2, 3];
+
+$export($export.P + $export.F * (fails(function () {
+  // IE8-
+  test.sort(undefined);
+}) || !fails(function () {
+  // V8 bug
+  test.sort(null);
+  // Old WebKit
+}) || !require('./_strict-method')($sort)), 'Array', {
+  // 22.1.3.25 Array.prototype.sort(comparefn)
+  sort: function sort(comparefn) {
+    return comparefn === undefined
+      ? $sort.call(toObject(this))
+      : $sort.call(toObject(this), aFunction(comparefn));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.parse-int.js	(date 499162500000)
@@ -0,0 +1,4 @@
+var $export = require('./_export');
+var $parseInt = require('./_parse-int');
+// 18.2.5 parseInt(string, radix)
+$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.error.is-error.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.error.is-error.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.error.is-error.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/ljharb/proposal-is-error
+var $export = require('./_export');
+var cof = require('./_cof');
+
+$export($export.S, 'Error', {
+  isError: function isError(it) {
+    return cof(it) === 'Error';
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.deg-per-rad.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.deg-per-rad.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.deg-per-rad.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.fround.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.fround.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.fround.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.16 Math.fround(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', { fround: require('./_math-fround') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.reduce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.reduce.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.reduce.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $reduce = require('./_array-reduce');
+
+$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {
+  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
+  reduce: function reduce(callbackfn /* , initialValue */) {
+    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int16-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int16-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int16-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Int16', 2, function (init) {
+  return function Int16Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.bind.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.bind.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.function.bind.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
+var $export = require('./_export');
+
+$export($export.P, 'Function', { bind: require('./_bind') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.regexp.escape.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.regexp.escape.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.regexp.escape.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// https://github.com/benjamingr/RexExp.escape
+var $export = require('./_export');
+var $re = require('./_replacer')(/[\\^$*+?.()|[\]{}]/g, '\\$&');
+
+$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.find.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.find.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.find.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
+var $export = require('./_export');
+var $find = require('./_array-methods')(5);
+var KEY = 'find';
+var forced = true;
+// Shouldn't skip holes
+if (KEY in []) Array(1)[KEY](function () { forced = false; });
+$export($export.P + $export.F * forced, 'Array', {
+  find: function find(callbackfn /* , that = undefined */) {
+    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
+require('./_add-to-unscopables')(KEY);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-own-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-own-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-own-metadata.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var ordinaryGetOwnMetadata = metadata.get;
+var toMetaKey = metadata.key;
+
+metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
+    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-pie.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-pie.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-pie.js	(date 499162500000)
@@ -0,0 +1,1 @@
+exports.f = {}.propertyIsEnumerable;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gpo.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gpo.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gpo.js	(date 499162500000)
@@ -0,0 +1,13 @@
+// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
+var has = require('./_has');
+var toObject = require('./_to-object');
+var IE_PROTO = require('./_shared-key')('IE_PROTO');
+var ObjectProto = Object.prototype;
+
+module.exports = Object.getPrototypeOf || function (O) {
+  O = toObject(O);
+  if (has(O, IE_PROTO)) return O[IE_PROTO];
+  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
+    return O.constructor.prototype;
+  } return O instanceof Object ? ObjectProto : null;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.flatten.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.flatten.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.flatten.js	(date 499162500000)
@@ -0,0 +1,21 @@
+'use strict';
+// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
+var $export = require('./_export');
+var flattenIntoArray = require('./_flatten-into-array');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var toInteger = require('./_to-integer');
+var arraySpeciesCreate = require('./_array-species-create');
+
+$export($export.P, 'Array', {
+  flatten: function flatten(/* depthArg = 1 */) {
+    var depthArg = arguments[0];
+    var O = toObject(this);
+    var sourceLen = toLength(O.length);
+    var A = arraySpeciesCreate(O, 0);
+    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
+    return A;
+  }
+});
+
+require('./_add-to-unscopables')('flatten');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_wks-define.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var global = require('./_global');
+var core = require('./_core');
+var LIBRARY = require('./_library');
+var wksExt = require('./_wks-ext');
+var defineProperty = require('./_object-dp').f;
+module.exports = function (name) {
+  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
+  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.sup.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.sup.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.sup.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.14 String.prototype.sup()
+require('./_string-html')('sup', function (createHTML) {
+  return function sup() {
+    return createHTML(this, 'sup', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_function-to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_function-to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_function-to-string.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_shared')('native-function-to-string', Function.toString);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.global.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/tc39/proposal-global
+var $export = require('./_export');
+
+$export($export.G, { global: require('./_global') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.dict.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.dict.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.dict.js	(date 499162500000)
@@ -0,0 +1,157 @@
+'use strict';
+var ctx = require('./_ctx');
+var $export = require('./_export');
+var createDesc = require('./_property-desc');
+var assign = require('./_object-assign');
+var create = require('./_object-create');
+var getPrototypeOf = require('./_object-gpo');
+var getKeys = require('./_object-keys');
+var dP = require('./_object-dp');
+var keyOf = require('./_keyof');
+var aFunction = require('./_a-function');
+var forOf = require('./_for-of');
+var isIterable = require('./core.is-iterable');
+var $iterCreate = require('./_iter-create');
+var step = require('./_iter-step');
+var isObject = require('./_is-object');
+var toIObject = require('./_to-iobject');
+var DESCRIPTORS = require('./_descriptors');
+var has = require('./_has');
+
+// 0 -> Dict.forEach
+// 1 -> Dict.map
+// 2 -> Dict.filter
+// 3 -> Dict.some
+// 4 -> Dict.every
+// 5 -> Dict.find
+// 6 -> Dict.findKey
+// 7 -> Dict.mapPairs
+var createDictMethod = function (TYPE) {
+  var IS_MAP = TYPE == 1;
+  var IS_EVERY = TYPE == 4;
+  return function (object, callbackfn, that /* = undefined */) {
+    var f = ctx(callbackfn, that, 3);
+    var O = toIObject(object);
+    var result = IS_MAP || TYPE == 7 || TYPE == 2
+          ? new (typeof this == 'function' ? this : Dict)() : undefined;
+    var key, val, res;
+    for (key in O) if (has(O, key)) {
+      val = O[key];
+      res = f(val, key, object);
+      if (TYPE) {
+        if (IS_MAP) result[key] = res;          // map
+        else if (res) switch (TYPE) {
+          case 2: result[key] = val; break;     // filter
+          case 3: return true;                  // some
+          case 5: return val;                   // find
+          case 6: return key;                   // findKey
+          case 7: result[res[0]] = res[1];      // mapPairs
+        } else if (IS_EVERY) return false;      // every
+      }
+    }
+    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;
+  };
+};
+var findKey = createDictMethod(6);
+
+var createDictIter = function (kind) {
+  return function (it) {
+    return new DictIterator(it, kind);
+  };
+};
+var DictIterator = function (iterated, kind) {
+  this._t = toIObject(iterated); // target
+  this._a = getKeys(iterated);   // keys
+  this._i = 0;                   // next index
+  this._k = kind;                // kind
+};
+$iterCreate(DictIterator, 'Dict', function () {
+  var that = this;
+  var O = that._t;
+  var keys = that._a;
+  var kind = that._k;
+  var key;
+  do {
+    if (that._i >= keys.length) {
+      that._t = undefined;
+      return step(1);
+    }
+  } while (!has(O, key = keys[that._i++]));
+  if (kind == 'keys') return step(0, key);
+  if (kind == 'values') return step(0, O[key]);
+  return step(0, [key, O[key]]);
+});
+
+function Dict(iterable) {
+  var dict = create(null);
+  if (iterable != undefined) {
+    if (isIterable(iterable)) {
+      forOf(iterable, true, function (key, value) {
+        dict[key] = value;
+      });
+    } else assign(dict, iterable);
+  }
+  return dict;
+}
+Dict.prototype = null;
+
+function reduce(object, mapfn, init) {
+  aFunction(mapfn);
+  var O = toIObject(object);
+  var keys = getKeys(O);
+  var length = keys.length;
+  var i = 0;
+  var memo, key;
+  if (arguments.length < 3) {
+    if (!length) throw TypeError('Reduce of empty object with no initial value');
+    memo = O[keys[i++]];
+  } else memo = Object(init);
+  while (length > i) if (has(O, key = keys[i++])) {
+    memo = mapfn(memo, O[key], key, object);
+  }
+  return memo;
+}
+
+function includes(object, el) {
+  // eslint-disable-next-line no-self-compare
+  return (el == el ? keyOf(object, el) : findKey(object, function (it) {
+    // eslint-disable-next-line no-self-compare
+    return it != it;
+  })) !== undefined;
+}
+
+function get(object, key) {
+  if (has(object, key)) return object[key];
+}
+function set(object, key, value) {
+  if (DESCRIPTORS && key in Object) dP.f(object, key, createDesc(0, value));
+  else object[key] = value;
+  return object;
+}
+
+function isDict(it) {
+  return isObject(it) && getPrototypeOf(it) === Dict.prototype;
+}
+
+$export($export.G + $export.F, { Dict: Dict });
+
+$export($export.S, 'Dict', {
+  keys: createDictIter('keys'),
+  values: createDictIter('values'),
+  entries: createDictIter('entries'),
+  forEach: createDictMethod(0),
+  map: createDictMethod(1),
+  filter: createDictMethod(2),
+  some: createDictMethod(3),
+  every: createDictMethod(4),
+  find: createDictMethod(5),
+  findKey: findKey,
+  mapPairs: createDictMethod(7),
+  reduce: reduce,
+  keyOf: keyOf,
+  includes: includes,
+  has: has,
+  get: get,
+  set: set,
+  isDict: isDict
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.classof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.classof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.classof.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+
+$export($export.S + $export.F, 'Object', { classof: require('./_classof') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopn.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopn.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopn.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
+var $keys = require('./_object-keys-internal');
+var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');
+
+exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
+  return $keys(O, hiddenKeys);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_path.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_path.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_path.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_global');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.imul.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.imul.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.imul.js	(date 499162500000)
@@ -0,0 +1,17 @@
+// 20.2.2.18 Math.imul(x, y)
+var $export = require('./_export');
+var $imul = Math.imul;
+
+// some WebKit versions fails with big numbers, some has wrong arity
+$export($export.S + $export.F * require('./_fails')(function () {
+  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
+}), 'Math', {
+  imul: function imul(x, y) {
+    var UINT16 = 0xffff;
+    var xn = +x;
+    var yn = +y;
+    var xl = UINT16 & xn;
+    var yl = UINT16 & yn;
+    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.degrees.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.degrees.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.degrees.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+var RAD_PER_DEG = 180 / Math.PI;
+
+$export($export.S, 'Math', {
+  degrees: function degrees(radians) {
+    return radians * RAD_PER_DEG;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_shared.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_shared.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_shared.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var core = require('./_core');
+var global = require('./_global');
+var SHARED = '__core-js_shared__';
+var store = global[SHARED] || (global[SHARED] = {});
+
+(module.exports = function (key, value) {
+  return store[key] || (store[key] = value !== undefined ? value : {});
+})('versions', []).push({
+  version: core.version,
+  mode: require('./_library') ? 'pure' : 'global',
+  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopn-ext.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopn-ext.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gopn-ext.js	(date 499162500000)
@@ -0,0 +1,19 @@
+// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
+var toIObject = require('./_to-iobject');
+var gOPN = require('./_object-gopn').f;
+var toString = {}.toString;
+
+var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
+  ? Object.getOwnPropertyNames(window) : [];
+
+var getWindowNames = function (it) {
+  try {
+    return gOPN(it);
+  } catch (e) {
+    return windowNames.slice();
+  }
+};
+
+module.exports.f = function getOwnPropertyNames(it) {
+  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.observable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.observable.js	(date 499162500000)
@@ -0,0 +1,199 @@
+'use strict';
+// https://github.com/zenparsing/es-observable
+var $export = require('./_export');
+var global = require('./_global');
+var core = require('./_core');
+var microtask = require('./_microtask')();
+var OBSERVABLE = require('./_wks')('observable');
+var aFunction = require('./_a-function');
+var anObject = require('./_an-object');
+var anInstance = require('./_an-instance');
+var redefineAll = require('./_redefine-all');
+var hide = require('./_hide');
+var forOf = require('./_for-of');
+var RETURN = forOf.RETURN;
+
+var getMethod = function (fn) {
+  return fn == null ? undefined : aFunction(fn);
+};
+
+var cleanupSubscription = function (subscription) {
+  var cleanup = subscription._c;
+  if (cleanup) {
+    subscription._c = undefined;
+    cleanup();
+  }
+};
+
+var subscriptionClosed = function (subscription) {
+  return subscription._o === undefined;
+};
+
+var closeSubscription = function (subscription) {
+  if (!subscriptionClosed(subscription)) {
+    subscription._o = undefined;
+    cleanupSubscription(subscription);
+  }
+};
+
+var Subscription = function (observer, subscriber) {
+  anObject(observer);
+  this._c = undefined;
+  this._o = observer;
+  observer = new SubscriptionObserver(this);
+  try {
+    var cleanup = subscriber(observer);
+    var subscription = cleanup;
+    if (cleanup != null) {
+      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
+      else aFunction(cleanup);
+      this._c = cleanup;
+    }
+  } catch (e) {
+    observer.error(e);
+    return;
+  } if (subscriptionClosed(this)) cleanupSubscription(this);
+};
+
+Subscription.prototype = redefineAll({}, {
+  unsubscribe: function unsubscribe() { closeSubscription(this); }
+});
+
+var SubscriptionObserver = function (subscription) {
+  this._s = subscription;
+};
+
+SubscriptionObserver.prototype = redefineAll({}, {
+  next: function next(value) {
+    var subscription = this._s;
+    if (!subscriptionClosed(subscription)) {
+      var observer = subscription._o;
+      try {
+        var m = getMethod(observer.next);
+        if (m) return m.call(observer, value);
+      } catch (e) {
+        try {
+          closeSubscription(subscription);
+        } finally {
+          throw e;
+        }
+      }
+    }
+  },
+  error: function error(value) {
+    var subscription = this._s;
+    if (subscriptionClosed(subscription)) throw value;
+    var observer = subscription._o;
+    subscription._o = undefined;
+    try {
+      var m = getMethod(observer.error);
+      if (!m) throw value;
+      value = m.call(observer, value);
+    } catch (e) {
+      try {
+        cleanupSubscription(subscription);
+      } finally {
+        throw e;
+      }
+    } cleanupSubscription(subscription);
+    return value;
+  },
+  complete: function complete(value) {
+    var subscription = this._s;
+    if (!subscriptionClosed(subscription)) {
+      var observer = subscription._o;
+      subscription._o = undefined;
+      try {
+        var m = getMethod(observer.complete);
+        value = m ? m.call(observer, value) : undefined;
+      } catch (e) {
+        try {
+          cleanupSubscription(subscription);
+        } finally {
+          throw e;
+        }
+      } cleanupSubscription(subscription);
+      return value;
+    }
+  }
+});
+
+var $Observable = function Observable(subscriber) {
+  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
+};
+
+redefineAll($Observable.prototype, {
+  subscribe: function subscribe(observer) {
+    return new Subscription(observer, this._f);
+  },
+  forEach: function forEach(fn) {
+    var that = this;
+    return new (core.Promise || global.Promise)(function (resolve, reject) {
+      aFunction(fn);
+      var subscription = that.subscribe({
+        next: function (value) {
+          try {
+            return fn(value);
+          } catch (e) {
+            reject(e);
+            subscription.unsubscribe();
+          }
+        },
+        error: reject,
+        complete: resolve
+      });
+    });
+  }
+});
+
+redefineAll($Observable, {
+  from: function from(x) {
+    var C = typeof this === 'function' ? this : $Observable;
+    var method = getMethod(anObject(x)[OBSERVABLE]);
+    if (method) {
+      var observable = anObject(method.call(x));
+      return observable.constructor === C ? observable : new C(function (observer) {
+        return observable.subscribe(observer);
+      });
+    }
+    return new C(function (observer) {
+      var done = false;
+      microtask(function () {
+        if (!done) {
+          try {
+            if (forOf(x, false, function (it) {
+              observer.next(it);
+              if (done) return RETURN;
+            }) === RETURN) return;
+          } catch (e) {
+            if (done) throw e;
+            observer.error(e);
+            return;
+          } observer.complete();
+        }
+      });
+      return function () { done = true; };
+    });
+  },
+  of: function of() {
+    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
+    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
+      var done = false;
+      microtask(function () {
+        if (!done) {
+          for (var j = 0; j < items.length; ++j) {
+            observer.next(items[j]);
+            if (done) return;
+          } observer.complete();
+        }
+      });
+      return function () { done = true; };
+    });
+  }
+});
+
+hide($Observable.prototype, OBSERVABLE, function () { return this; });
+
+$export($export.G, { Observable: $Observable });
+
+require('./_set-species')('Observable');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-object.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 7.1.13 ToObject(argument)
+var defined = require('./_defined');
+module.exports = function (it) {
+  return Object(defined(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.radians.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.radians.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.radians.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+var DEG_PER_RAD = Math.PI / 180;
+
+$export($export.S, 'Math', {
+  radians: function radians(degrees) {
+    return degrees * DEG_PER_RAD;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.metadata.js	(date 499162500000)
@@ -0,0 +1,15 @@
+var $metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var aFunction = require('./_a-function');
+var toMetaKey = $metadata.key;
+var ordinaryDefineOwnMetadata = $metadata.set;
+
+$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
+  return function decorator(target, targetKey) {
+    ordinaryDefineOwnMetadata(
+      metadataKey, metadataValue,
+      (targetKey !== undefined ? anObject : aFunction)(target),
+      toMetaKey(targetKey)
+    );
+  };
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.define-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.define-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.define-property.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
+$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.own-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.own-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.own-keys.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 26.1.11 Reflect.ownKeys(target)
+var $export = require('./_export');
+
+$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-safe-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-safe-integer.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.1.2.5 Number.isSafeInteger(number)
+var $export = require('./_export');
+var isInteger = require('./_is-integer');
+var abs = Math.abs;
+
+$export($export.S, 'Number', {
+  isSafeInteger: function isSafeInteger(number) {
+    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_strict-method.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_strict-method.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_strict-method.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var fails = require('./_fails');
+
+module.exports = function (method, arg) {
+  return !!method && fails(function () {
+    // eslint-disable-next-line no-useless-call
+    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
+  });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.construct.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.construct.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.construct.js	(date 499162500000)
@@ -0,0 +1,47 @@
+// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
+var $export = require('./_export');
+var create = require('./_object-create');
+var aFunction = require('./_a-function');
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var fails = require('./_fails');
+var bind = require('./_bind');
+var rConstruct = (require('./_global').Reflect || {}).construct;
+
+// MS Edge supports only 2 arguments and argumentsList argument is optional
+// FF Nightly sets third argument as `new.target`, but does not create `this` from it
+var NEW_TARGET_BUG = fails(function () {
+  function F() { /* empty */ }
+  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
+});
+var ARGS_BUG = !fails(function () {
+  rConstruct(function () { /* empty */ });
+});
+
+$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
+  construct: function construct(Target, args /* , newTarget */) {
+    aFunction(Target);
+    anObject(args);
+    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
+    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
+    if (Target == newTarget) {
+      // w/o altered newTarget, optimization for 0-4 arguments
+      switch (args.length) {
+        case 0: return new Target();
+        case 1: return new Target(args[0]);
+        case 2: return new Target(args[0], args[1]);
+        case 3: return new Target(args[0], args[1], args[2]);
+        case 4: return new Target(args[0], args[1], args[2], args[3]);
+      }
+      // w/o altered newTarget, lot of arguments case
+      var $args = [null];
+      $args.push.apply($args, args);
+      return new (bind.apply(Target, $args))();
+    }
+    // with altered newTarget, not support built-in constructors
+    var proto = newTarget.prototype;
+    var instance = create(isObject(proto) ? proto : Object.prototype);
+    var result = Function.apply.call(Target, instance, args);
+    return isObject(result) ? result : instance;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_html.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+var document = require('./_global').document;
+module.exports = document && document.documentElement;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-reduce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-reduce.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-reduce.js	(date 499162500000)
@@ -0,0 +1,28 @@
+var aFunction = require('./_a-function');
+var toObject = require('./_to-object');
+var IObject = require('./_iobject');
+var toLength = require('./_to-length');
+
+module.exports = function (that, callbackfn, aLen, memo, isRight) {
+  aFunction(callbackfn);
+  var O = toObject(that);
+  var self = IObject(O);
+  var length = toLength(O.length);
+  var index = isRight ? length - 1 : 0;
+  var i = isRight ? -1 : 1;
+  if (aLen < 2) for (;;) {
+    if (index in self) {
+      memo = self[index];
+      index += i;
+      break;
+    }
+    index += i;
+    if (isRight ? index < 0 : length <= index) {
+      throw TypeError('Reduce of empty array with no initial value');
+    }
+  }
+  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
+    memo = callbackfn(memo, self[index], index, O);
+  }
+  return memo;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-context.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-context.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-context.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// helper for String#{startsWith, endsWith, includes}
+var isRegExp = require('./_is-regexp');
+var defined = require('./_defined');
+
+module.exports = function (that, searchString, NAME) {
+  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
+  return String(defined(that));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.flags.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.flags.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.flags.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 21.2.5.3 get RegExp.prototype.flags()
+if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
+  configurable: true,
+  get: require('./_flags')
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-from-iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-from-iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-from-iterable.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var forOf = require('./_for-of');
+
+module.exports = function (iter, ITERATOR) {
+  var result = [];
+  forOf(iter, false, result.push, result, ITERATOR);
+  return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_create-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_create-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_create-property.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+var $defineProperty = require('./_object-dp');
+var createDesc = require('./_property-desc');
+
+module.exports = function (object, index, value) {
+  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
+  else object[index] = value;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.function.part.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.function.part.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.function.part.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var path = require('./_path');
+var $export = require('./_export');
+
+// Placeholder
+require('./_core')._ = path._ = path._ || {};
+
+$export($export.P + $export.F, 'Function', { part: require('./_partial') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_advance-string-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_advance-string-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_advance-string-index.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+var at = require('./_string-at')(true);
+
+ // `AdvanceStringIndex` abstract operation
+// https://tc39.github.io/ecma262/#sec-advancestringindex
+module.exports = function (S, index, unicode) {
+  return index + (unicode ? at(S, index).length : 1);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-string.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var DateProto = Date.prototype;
+var INVALID_DATE = 'Invalid Date';
+var TO_STRING = 'toString';
+var $toString = DateProto[TO_STRING];
+var getTime = DateProto.getTime;
+if (new Date(NaN) + '' != INVALID_DATE) {
+  require('./_redefine')(DateProto, TO_STRING, function toString() {
+    var value = getTime.call(this);
+    // eslint-disable-next-line no-self-compare
+    return value === value ? $toString.call(this) : INVALID_DATE;
+  });
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_descriptors.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_descriptors.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_descriptors.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// Thank's IE8 for his funny defineProperty
+module.exports = !require('./_fails')(function () {
+  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_regexp-exec-abstract.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_regexp-exec-abstract.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_regexp-exec-abstract.js	(date 499162500000)
@@ -0,0 +1,21 @@
+'use strict';
+
+var classof = require('./_classof');
+var builtinExec = RegExp.prototype.exec;
+
+ // `RegExpExec` abstract operation
+// https://tc39.github.io/ecma262/#sec-regexpexec
+module.exports = function (R, S) {
+  var exec = R.exec;
+  if (typeof exec === 'function') {
+    var result = exec.call(R, S);
+    if (typeof result !== 'object') {
+      throw new TypeError('RegExp exec method returned something other than an Object or null');
+    }
+    return result;
+  }
+  if (classof(R) !== 'RegExp') {
+    throw new TypeError('RegExp#exec called on incompatible receiver');
+  }
+  return builtinExec.call(R, S);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-trim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-trim.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-trim.js	(date 499162500000)
@@ -0,0 +1,30 @@
+var $export = require('./_export');
+var defined = require('./_defined');
+var fails = require('./_fails');
+var spaces = require('./_string-ws');
+var space = '[' + spaces + ']';
+var non = '\u200b\u0085';
+var ltrim = RegExp('^' + space + space + '*');
+var rtrim = RegExp(space + space + '*$');
+
+var exporter = function (KEY, exec, ALIAS) {
+  var exp = {};
+  var FORCE = fails(function () {
+    return !!spaces[KEY]() || non[KEY]() != non;
+  });
+  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
+  if (ALIAS) exp[ALIAS] = fn;
+  $export($export.P + $export.F * FORCE, 'String', exp);
+};
+
+// 1 -> String#trimLeft
+// 2 -> String#trimRight
+// 3 -> String#trim
+var trim = exporter.trim = function (string, TYPE) {
+  string = String(defined(string));
+  if (TYPE & 1) string = string.replace(ltrim, '');
+  if (TYPE & 2) string = string.replace(rtrim, '');
+  return string;
+};
+
+module.exports = exporter;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.trunc.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.trunc.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.trunc.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.34 Math.trunc(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  trunc: function trunc(it) {
+    return (it > 0 ? Math.floor : Math.ceil)(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-copy-within.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-copy-within.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-copy-within.js	(date 499162500000)
@@ -0,0 +1,26 @@
+// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
+'use strict';
+var toObject = require('./_to-object');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+
+module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
+  var O = toObject(this);
+  var len = toLength(O.length);
+  var to = toAbsoluteIndex(target, len);
+  var from = toAbsoluteIndex(start, len);
+  var end = arguments.length > 2 ? arguments[2] : undefined;
+  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
+  var inc = 1;
+  if (from < to && to < from + count) {
+    inc = -1;
+    from += count - 1;
+    to += count - 1;
+  }
+  while (count-- > 0) {
+    if (from in O) O[to] = O[from];
+    else delete O[to];
+    to += inc;
+    from += inc;
+  } return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.delete-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.delete-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.delete-metadata.js	(date 499162500000)
@@ -0,0 +1,15 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var toMetaKey = metadata.key;
+var getOrCreateMetadataMap = metadata.map;
+var store = metadata.store;
+
+metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
+  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
+  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
+  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
+  if (metadataMap.size) return true;
+  var targetMetadata = store.get(target);
+  targetMetadata['delete'](targetKey);
+  return !!targetMetadata.size || store['delete'](target);
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.fill.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.fill.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.fill.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
+var $export = require('./_export');
+
+$export($export.P, 'Array', { fill: require('./_array-fill') });
+
+require('./_add-to-unscopables')('fill');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.set.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.set.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+var strong = require('./_collection-strong');
+var validate = require('./_validate-collection');
+var SET = 'Set';
+
+// 23.2 Set Objects
+module.exports = require('./_collection')(SET, function (get) {
+  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
+}, {
+  // 23.2.3.1 Set.prototype.add(value)
+  add: function add(value) {
+    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
+  }
+}, strong);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-dp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-dp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-dp.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var anObject = require('./_an-object');
+var IE8_DOM_DEFINE = require('./_ie8-dom-define');
+var toPrimitive = require('./_to-primitive');
+var dP = Object.defineProperty;
+
+exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
+  anObject(O);
+  P = toPrimitive(P, true);
+  anObject(Attributes);
+  if (IE8_DOM_DEFINE) try {
+    return dP(O, P, Attributes);
+  } catch (e) { /* empty */ }
+  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
+  if ('value' in Attributes) O[P] = Attributes.value;
+  return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.promise.try.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.promise.try.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.promise.try.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// https://github.com/tc39/proposal-promise-try
+var $export = require('./_export');
+var newPromiseCapability = require('./_new-promise-capability');
+var perform = require('./_perform');
+
+$export($export.S, 'Promise', { 'try': function (callbackfn) {
+  var promiseCapability = newPromiseCapability.f(this);
+  var result = perform(callbackfn);
+  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
+  return promiseCapability.promise;
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.min-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.min-safe-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.min-safe-integer.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.10 Number.MIN_SAFE_INTEGER
+var $export = require('./_export');
+
+$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_keyof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_keyof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_keyof.js	(date 499162500000)
@@ -0,0 +1,10 @@
+var getKeys = require('./_object-keys');
+var toIObject = require('./_to-iobject');
+module.exports = function (object, el) {
+  var O = toIObject(object);
+  var keys = getKeys(O);
+  var length = keys.length;
+  var index = 0;
+  var key;
+  while (length > index) if (O[key = keys[index++]] === el) return key;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-sealed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-sealed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.is-sealed.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 19.1.2.13 Object.isSealed(O)
+var isObject = require('./_is-object');
+
+require('./_object-sap')('isSealed', function ($isSealed) {
+  return function isSealed(it) {
+    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.map.to-json.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/DavidBruant/Map-Set.prototype.toJSON
+var $export = require('./_export');
+
+$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-collection-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-collection-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-collection-of.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// https://tc39.github.io/proposal-setmap-offrom/
+var $export = require('./_export');
+
+module.exports = function (COLLECTION) {
+  $export($export.S, COLLECTION, { of: function of() {
+    var length = arguments.length;
+    var A = new Array(length);
+    while (length--) A[length] = arguments[length];
+    return new this(A);
+  } });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.species.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.species.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_set-species')('Array');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-strong.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-strong.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-strong.js	(date 499162500000)
@@ -0,0 +1,144 @@
+'use strict';
+var dP = require('./_object-dp').f;
+var create = require('./_object-create');
+var redefineAll = require('./_redefine-all');
+var ctx = require('./_ctx');
+var anInstance = require('./_an-instance');
+var forOf = require('./_for-of');
+var $iterDefine = require('./_iter-define');
+var step = require('./_iter-step');
+var setSpecies = require('./_set-species');
+var DESCRIPTORS = require('./_descriptors');
+var fastKey = require('./_meta').fastKey;
+var validate = require('./_validate-collection');
+var SIZE = DESCRIPTORS ? '_s' : 'size';
+
+var getEntry = function (that, key) {
+  // fast case
+  var index = fastKey(key);
+  var entry;
+  if (index !== 'F') return that._i[index];
+  // frozen object case
+  for (entry = that._f; entry; entry = entry.n) {
+    if (entry.k == key) return entry;
+  }
+};
+
+module.exports = {
+  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
+    var C = wrapper(function (that, iterable) {
+      anInstance(that, C, NAME, '_i');
+      that._t = NAME;         // collection type
+      that._i = create(null); // index
+      that._f = undefined;    // first entry
+      that._l = undefined;    // last entry
+      that[SIZE] = 0;         // size
+      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
+    });
+    redefineAll(C.prototype, {
+      // 23.1.3.1 Map.prototype.clear()
+      // 23.2.3.2 Set.prototype.clear()
+      clear: function clear() {
+        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
+          entry.r = true;
+          if (entry.p) entry.p = entry.p.n = undefined;
+          delete data[entry.i];
+        }
+        that._f = that._l = undefined;
+        that[SIZE] = 0;
+      },
+      // 23.1.3.3 Map.prototype.delete(key)
+      // 23.2.3.4 Set.prototype.delete(value)
+      'delete': function (key) {
+        var that = validate(this, NAME);
+        var entry = getEntry(that, key);
+        if (entry) {
+          var next = entry.n;
+          var prev = entry.p;
+          delete that._i[entry.i];
+          entry.r = true;
+          if (prev) prev.n = next;
+          if (next) next.p = prev;
+          if (that._f == entry) that._f = next;
+          if (that._l == entry) that._l = prev;
+          that[SIZE]--;
+        } return !!entry;
+      },
+      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
+      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
+      forEach: function forEach(callbackfn /* , that = undefined */) {
+        validate(this, NAME);
+        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
+        var entry;
+        while (entry = entry ? entry.n : this._f) {
+          f(entry.v, entry.k, this);
+          // revert to the last existing entry
+          while (entry && entry.r) entry = entry.p;
+        }
+      },
+      // 23.1.3.7 Map.prototype.has(key)
+      // 23.2.3.7 Set.prototype.has(value)
+      has: function has(key) {
+        return !!getEntry(validate(this, NAME), key);
+      }
+    });
+    if (DESCRIPTORS) dP(C.prototype, 'size', {
+      get: function () {
+        return validate(this, NAME)[SIZE];
+      }
+    });
+    return C;
+  },
+  def: function (that, key, value) {
+    var entry = getEntry(that, key);
+    var prev, index;
+    // change existing entry
+    if (entry) {
+      entry.v = value;
+    // create new entry
+    } else {
+      that._l = entry = {
+        i: index = fastKey(key, true), // <- index
+        k: key,                        // <- key
+        v: value,                      // <- value
+        p: prev = that._l,             // <- previous entry
+        n: undefined,                  // <- next entry
+        r: false                       // <- removed
+      };
+      if (!that._f) that._f = entry;
+      if (prev) prev.n = entry;
+      that[SIZE]++;
+      // add to index
+      if (index !== 'F') that._i[index] = entry;
+    } return that;
+  },
+  getEntry: getEntry,
+  setStrong: function (C, NAME, IS_MAP) {
+    // add .keys, .values, .entries, [@@iterator]
+    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
+    $iterDefine(C, NAME, function (iterated, kind) {
+      this._t = validate(iterated, NAME); // target
+      this._k = kind;                     // kind
+      this._l = undefined;                // previous
+    }, function () {
+      var that = this;
+      var kind = that._k;
+      var entry = that._l;
+      // revert to the last existing entry
+      while (entry && entry.r) entry = entry.p;
+      // get next entry
+      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
+        // or finish the iteration
+        that._t = undefined;
+        return step(1);
+      }
+      // return step by kind
+      if (kind == 'keys') return step(0, entry.k);
+      if (kind == 'values') return step(0, entry.v);
+      return step(0, [entry.k, entry.v]);
+    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);
+
+    // add [@@species], 23.1.2.2, 23.2.2.2
+    setSpecies(NAME);
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.replace.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.replace.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.replace.js	(date 499162500000)
@@ -0,0 +1,118 @@
+'use strict';
+
+var anObject = require('./_an-object');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var toInteger = require('./_to-integer');
+var advanceStringIndex = require('./_advance-string-index');
+var regExpExec = require('./_regexp-exec-abstract');
+var max = Math.max;
+var min = Math.min;
+var floor = Math.floor;
+var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
+var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;
+
+var maybeToString = function (it) {
+  return it === undefined ? it : String(it);
+};
+
+// @@replace logic
+require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
+  return [
+    // `String.prototype.replace` method
+    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
+    function replace(searchValue, replaceValue) {
+      var O = defined(this);
+      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
+      return fn !== undefined
+        ? fn.call(searchValue, O, replaceValue)
+        : $replace.call(String(O), searchValue, replaceValue);
+    },
+    // `RegExp.prototype[@@replace]` method
+    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
+    function (regexp, replaceValue) {
+      var res = maybeCallNative($replace, regexp, this, replaceValue);
+      if (res.done) return res.value;
+
+      var rx = anObject(regexp);
+      var S = String(this);
+      var functionalReplace = typeof replaceValue === 'function';
+      if (!functionalReplace) replaceValue = String(replaceValue);
+      var global = rx.global;
+      if (global) {
+        var fullUnicode = rx.unicode;
+        rx.lastIndex = 0;
+      }
+      var results = [];
+      while (true) {
+        var result = regExpExec(rx, S);
+        if (result === null) break;
+        results.push(result);
+        if (!global) break;
+        var matchStr = String(result[0]);
+        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
+      }
+      var accumulatedResult = '';
+      var nextSourcePosition = 0;
+      for (var i = 0; i < results.length; i++) {
+        result = results[i];
+        var matched = String(result[0]);
+        var position = max(min(toInteger(result.index), S.length), 0);
+        var captures = [];
+        // NOTE: This is equivalent to
+        //   captures = result.slice(1).map(maybeToString)
+        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
+        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
+        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
+        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
+        var namedCaptures = result.groups;
+        if (functionalReplace) {
+          var replacerArgs = [matched].concat(captures, position, S);
+          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
+          var replacement = String(replaceValue.apply(undefined, replacerArgs));
+        } else {
+          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
+        }
+        if (position >= nextSourcePosition) {
+          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
+          nextSourcePosition = position + matched.length;
+        }
+      }
+      return accumulatedResult + S.slice(nextSourcePosition);
+    }
+  ];
+
+    // https://tc39.github.io/ecma262/#sec-getsubstitution
+  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
+    var tailPos = position + matched.length;
+    var m = captures.length;
+    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
+    if (namedCaptures !== undefined) {
+      namedCaptures = toObject(namedCaptures);
+      symbols = SUBSTITUTION_SYMBOLS;
+    }
+    return $replace.call(replacement, symbols, function (match, ch) {
+      var capture;
+      switch (ch.charAt(0)) {
+        case '$': return '$';
+        case '&': return matched;
+        case '`': return str.slice(0, position);
+        case "'": return str.slice(tailPos);
+        case '<':
+          capture = namedCaptures[ch.slice(1, -1)];
+          break;
+        default: // \d\d?
+          var n = +ch;
+          if (n === 0) return match;
+          if (n > m) {
+            var f = floor(n / 10);
+            if (f === 0) return match;
+            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
+            return match;
+          }
+          capture = captures[n - 1];
+      }
+      return capture === undefined ? '' : capture;
+    });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.keys.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.14 Object.keys(O)
+var toObject = require('./_to-object');
+var $keys = require('./_object-keys');
+
+require('./_object-sap')('keys', function () {
+  return function keys(it) {
+    return $keys(toObject(it));
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
+require('./_set-collection-of')('Set');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_bind.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_bind.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_bind.js	(date 499162500000)
@@ -0,0 +1,25 @@
+'use strict';
+var aFunction = require('./_a-function');
+var isObject = require('./_is-object');
+var invoke = require('./_invoke');
+var arraySlice = [].slice;
+var factories = {};
+
+var construct = function (F, len, args) {
+  if (!(len in factories)) {
+    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
+    // eslint-disable-next-line no-new-func
+    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
+  } return factories[len](F, args);
+};
+
+module.exports = Function.bind || function bind(that /* , ...args */) {
+  var fn = aFunction(this);
+  var partArgs = arraySlice.call(arguments, 1);
+  var bound = function (/* args... */) {
+    var args = partArgs.concat(arraySlice.call(arguments));
+    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
+  };
+  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
+  return bound;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.find-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.find-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.find-index.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
+var $export = require('./_export');
+var $find = require('./_array-methods')(6);
+var KEY = 'findIndex';
+var forced = true;
+// Shouldn't skip holes
+if (KEY in []) Array(1)[KEY](function () { forced = false; });
+$export($export.P + $export.F * forced, 'Array', {
+  findIndex: function findIndex(callbackfn /* , that = undefined */) {
+    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
+require('./_add-to-unscopables')(KEY);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-sign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-sign.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-sign.js	(date 499162500000)
@@ -0,0 +1,5 @@
+// 20.2.2.28 Math.sign(x)
+module.exports = Math.sign || function sign(x) {
+  // eslint-disable-next-line no-self-compare
+  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.trim-left.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.trim-left.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.trim-left.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
+require('./_string-trim')('trimLeft', function ($trim) {
+  return function trimLeft() {
+    return $trim(this, 1);
+  };
+}, 'trimStart');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint8-clamped-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint8-clamped-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint8-clamped-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint8', 1, function (init) {
+  return function Uint8ClampedArray(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+}, true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.every.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.every.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.every.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $every = require('./_array-methods')(4);
+
+$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {
+  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
+  every: function every(callbackfn /* , thisArg */) {
+    return $every(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-to-string-tag.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-to-string-tag.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-to-string-tag.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var def = require('./_object-dp').f;
+var has = require('./_has');
+var TAG = require('./_wks')('toStringTag');
+
+module.exports = function (it, tag, stat) {
+  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-finite.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-finite.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-finite.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.1.2.2 Number.isFinite(number)
+var $export = require('./_export');
+var _isFinite = require('./_global').isFinite;
+
+$export($export.S, 'Number', {
+  isFinite: function isFinite(it) {
+    return typeof it == 'number' && _isFinite(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_redefine-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_redefine-all.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_redefine-all.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var redefine = require('./_redefine');
+module.exports = function (target, src, safe) {
+  for (var key in src) redefine(target, key, src[key], safe);
+  return target;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.rad-per-deg.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.rad-per-deg.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.rad-per-deg.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gops.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gops.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-gops.js	(date 499162500000)
@@ -0,0 +1,1 @@
+exports.f = Object.getOwnPropertySymbols;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.delete-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.delete-property.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.delete-property.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// 26.1.4 Reflect.deleteProperty(target, propertyKey)
+var $export = require('./_export');
+var gOPD = require('./_object-gopd').f;
+var anObject = require('./_an-object');
+
+$export($export.S, 'Reflect', {
+  deleteProperty: function deleteProperty(target, propertyKey) {
+    var desc = gOPD(anObject(target), propertyKey);
+    return desc && !desc.configurable ? false : delete target[propertyKey];
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.prevent-extensions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.prevent-extensions.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.prevent-extensions.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 19.1.2.15 Object.preventExtensions(O)
+var isObject = require('./_is-object');
+var meta = require('./_meta').onFreeze;
+
+require('./_object-sap')('preventExtensions', function ($preventExtensions) {
+  return function preventExtensions(it) {
+    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
+require('./_set-collection-from')('Set');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-species-create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-species-create.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-species-create.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
+var speciesConstructor = require('./_array-species-constructor');
+
+module.exports = function (original, length) {
+  return new (speciesConstructor(original))(length);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-define.js	(date 499162500000)
@@ -0,0 +1,69 @@
+'use strict';
+var LIBRARY = require('./_library');
+var $export = require('./_export');
+var redefine = require('./_redefine');
+var hide = require('./_hide');
+var Iterators = require('./_iterators');
+var $iterCreate = require('./_iter-create');
+var setToStringTag = require('./_set-to-string-tag');
+var getPrototypeOf = require('./_object-gpo');
+var ITERATOR = require('./_wks')('iterator');
+var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
+var FF_ITERATOR = '@@iterator';
+var KEYS = 'keys';
+var VALUES = 'values';
+
+var returnThis = function () { return this; };
+
+module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
+  $iterCreate(Constructor, NAME, next);
+  var getMethod = function (kind) {
+    if (!BUGGY && kind in proto) return proto[kind];
+    switch (kind) {
+      case KEYS: return function keys() { return new Constructor(this, kind); };
+      case VALUES: return function values() { return new Constructor(this, kind); };
+    } return function entries() { return new Constructor(this, kind); };
+  };
+  var TAG = NAME + ' Iterator';
+  var DEF_VALUES = DEFAULT == VALUES;
+  var VALUES_BUG = false;
+  var proto = Base.prototype;
+  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
+  var $default = $native || getMethod(DEFAULT);
+  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
+  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
+  var methods, key, IteratorPrototype;
+  // Fix native
+  if ($anyNative) {
+    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
+    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
+      // Set @@toStringTag to native iterators
+      setToStringTag(IteratorPrototype, TAG, true);
+      // fix for some old engines
+      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
+    }
+  }
+  // fix Array#{values, @@iterator}.name in V8 / FF
+  if (DEF_VALUES && $native && $native.name !== VALUES) {
+    VALUES_BUG = true;
+    $default = function values() { return $native.call(this); };
+  }
+  // Define iterator
+  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
+    hide(proto, ITERATOR, $default);
+  }
+  // Plug for library
+  Iterators[NAME] = $default;
+  Iterators[TAG] = returnThis;
+  if (DEFAULT) {
+    methods = {
+      values: DEF_VALUES ? $default : getMethod(VALUES),
+      keys: IS_SET ? $default : getMethod(KEYS),
+      entries: $entries
+    };
+    if (FORCED) for (key in methods) {
+      if (!(key in proto)) redefine(proto, key, methods[key]);
+    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
+  }
+  return methods;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.link.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.link.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.link.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.10 String.prototype.link(url)
+require('./_string-html')('link', function (createHTML) {
+  return function link(url) {
+    return createHTML(this, 'a', 'href', url);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.asinh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.asinh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.asinh.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.2.2.5 Math.asinh(x)
+var $export = require('./_export');
+var $asinh = Math.asinh;
+
+function asinh(x) {
+  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
+}
+
+// Tor Browser bug: Math.asinh(0) -> -0
+$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed-array.js	(date 499162500000)
@@ -0,0 +1,480 @@
+'use strict';
+if (require('./_descriptors')) {
+  var LIBRARY = require('./_library');
+  var global = require('./_global');
+  var fails = require('./_fails');
+  var $export = require('./_export');
+  var $typed = require('./_typed');
+  var $buffer = require('./_typed-buffer');
+  var ctx = require('./_ctx');
+  var anInstance = require('./_an-instance');
+  var propertyDesc = require('./_property-desc');
+  var hide = require('./_hide');
+  var redefineAll = require('./_redefine-all');
+  var toInteger = require('./_to-integer');
+  var toLength = require('./_to-length');
+  var toIndex = require('./_to-index');
+  var toAbsoluteIndex = require('./_to-absolute-index');
+  var toPrimitive = require('./_to-primitive');
+  var has = require('./_has');
+  var classof = require('./_classof');
+  var isObject = require('./_is-object');
+  var toObject = require('./_to-object');
+  var isArrayIter = require('./_is-array-iter');
+  var create = require('./_object-create');
+  var getPrototypeOf = require('./_object-gpo');
+  var gOPN = require('./_object-gopn').f;
+  var getIterFn = require('./core.get-iterator-method');
+  var uid = require('./_uid');
+  var wks = require('./_wks');
+  var createArrayMethod = require('./_array-methods');
+  var createArrayIncludes = require('./_array-includes');
+  var speciesConstructor = require('./_species-constructor');
+  var ArrayIterators = require('./es6.array.iterator');
+  var Iterators = require('./_iterators');
+  var $iterDetect = require('./_iter-detect');
+  var setSpecies = require('./_set-species');
+  var arrayFill = require('./_array-fill');
+  var arrayCopyWithin = require('./_array-copy-within');
+  var $DP = require('./_object-dp');
+  var $GOPD = require('./_object-gopd');
+  var dP = $DP.f;
+  var gOPD = $GOPD.f;
+  var RangeError = global.RangeError;
+  var TypeError = global.TypeError;
+  var Uint8Array = global.Uint8Array;
+  var ARRAY_BUFFER = 'ArrayBuffer';
+  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
+  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
+  var PROTOTYPE = 'prototype';
+  var ArrayProto = Array[PROTOTYPE];
+  var $ArrayBuffer = $buffer.ArrayBuffer;
+  var $DataView = $buffer.DataView;
+  var arrayForEach = createArrayMethod(0);
+  var arrayFilter = createArrayMethod(2);
+  var arraySome = createArrayMethod(3);
+  var arrayEvery = createArrayMethod(4);
+  var arrayFind = createArrayMethod(5);
+  var arrayFindIndex = createArrayMethod(6);
+  var arrayIncludes = createArrayIncludes(true);
+  var arrayIndexOf = createArrayIncludes(false);
+  var arrayValues = ArrayIterators.values;
+  var arrayKeys = ArrayIterators.keys;
+  var arrayEntries = ArrayIterators.entries;
+  var arrayLastIndexOf = ArrayProto.lastIndexOf;
+  var arrayReduce = ArrayProto.reduce;
+  var arrayReduceRight = ArrayProto.reduceRight;
+  var arrayJoin = ArrayProto.join;
+  var arraySort = ArrayProto.sort;
+  var arraySlice = ArrayProto.slice;
+  var arrayToString = ArrayProto.toString;
+  var arrayToLocaleString = ArrayProto.toLocaleString;
+  var ITERATOR = wks('iterator');
+  var TAG = wks('toStringTag');
+  var TYPED_CONSTRUCTOR = uid('typed_constructor');
+  var DEF_CONSTRUCTOR = uid('def_constructor');
+  var ALL_CONSTRUCTORS = $typed.CONSTR;
+  var TYPED_ARRAY = $typed.TYPED;
+  var VIEW = $typed.VIEW;
+  var WRONG_LENGTH = 'Wrong length!';
+
+  var $map = createArrayMethod(1, function (O, length) {
+    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
+  });
+
+  var LITTLE_ENDIAN = fails(function () {
+    // eslint-disable-next-line no-undef
+    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
+  });
+
+  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
+    new Uint8Array(1).set({});
+  });
+
+  var toOffset = function (it, BYTES) {
+    var offset = toInteger(it);
+    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
+    return offset;
+  };
+
+  var validate = function (it) {
+    if (isObject(it) && TYPED_ARRAY in it) return it;
+    throw TypeError(it + ' is not a typed array!');
+  };
+
+  var allocate = function (C, length) {
+    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
+      throw TypeError('It is not a typed array constructor!');
+    } return new C(length);
+  };
+
+  var speciesFromList = function (O, list) {
+    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
+  };
+
+  var fromList = function (C, list) {
+    var index = 0;
+    var length = list.length;
+    var result = allocate(C, length);
+    while (length > index) result[index] = list[index++];
+    return result;
+  };
+
+  var addGetter = function (it, key, internal) {
+    dP(it, key, { get: function () { return this._d[internal]; } });
+  };
+
+  var $from = function from(source /* , mapfn, thisArg */) {
+    var O = toObject(source);
+    var aLen = arguments.length;
+    var mapfn = aLen > 1 ? arguments[1] : undefined;
+    var mapping = mapfn !== undefined;
+    var iterFn = getIterFn(O);
+    var i, length, values, result, step, iterator;
+    if (iterFn != undefined && !isArrayIter(iterFn)) {
+      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
+        values.push(step.value);
+      } O = values;
+    }
+    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
+    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
+      result[i] = mapping ? mapfn(O[i], i) : O[i];
+    }
+    return result;
+  };
+
+  var $of = function of(/* ...items */) {
+    var index = 0;
+    var length = arguments.length;
+    var result = allocate(this, length);
+    while (length > index) result[index] = arguments[index++];
+    return result;
+  };
+
+  // iOS Safari 6.x fails here
+  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });
+
+  var $toLocaleString = function toLocaleString() {
+    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
+  };
+
+  var proto = {
+    copyWithin: function copyWithin(target, start /* , end */) {
+      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
+    },
+    every: function every(callbackfn /* , thisArg */) {
+      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
+      return arrayFill.apply(validate(this), arguments);
+    },
+    filter: function filter(callbackfn /* , thisArg */) {
+      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
+        arguments.length > 1 ? arguments[1] : undefined));
+    },
+    find: function find(predicate /* , thisArg */) {
+      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    findIndex: function findIndex(predicate /* , thisArg */) {
+      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    forEach: function forEach(callbackfn /* , thisArg */) {
+      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    indexOf: function indexOf(searchElement /* , fromIndex */) {
+      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    includes: function includes(searchElement /* , fromIndex */) {
+      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    join: function join(separator) { // eslint-disable-line no-unused-vars
+      return arrayJoin.apply(validate(this), arguments);
+    },
+    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
+      return arrayLastIndexOf.apply(validate(this), arguments);
+    },
+    map: function map(mapfn /* , thisArg */) {
+      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
+      return arrayReduce.apply(validate(this), arguments);
+    },
+    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
+      return arrayReduceRight.apply(validate(this), arguments);
+    },
+    reverse: function reverse() {
+      var that = this;
+      var length = validate(that).length;
+      var middle = Math.floor(length / 2);
+      var index = 0;
+      var value;
+      while (index < middle) {
+        value = that[index];
+        that[index++] = that[--length];
+        that[length] = value;
+      } return that;
+    },
+    some: function some(callbackfn /* , thisArg */) {
+      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
+    },
+    sort: function sort(comparefn) {
+      return arraySort.call(validate(this), comparefn);
+    },
+    subarray: function subarray(begin, end) {
+      var O = validate(this);
+      var length = O.length;
+      var $begin = toAbsoluteIndex(begin, length);
+      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
+        O.buffer,
+        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
+        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
+      );
+    }
+  };
+
+  var $slice = function slice(start, end) {
+    return speciesFromList(this, arraySlice.call(validate(this), start, end));
+  };
+
+  var $set = function set(arrayLike /* , offset */) {
+    validate(this);
+    var offset = toOffset(arguments[1], 1);
+    var length = this.length;
+    var src = toObject(arrayLike);
+    var len = toLength(src.length);
+    var index = 0;
+    if (len + offset > length) throw RangeError(WRONG_LENGTH);
+    while (index < len) this[offset + index] = src[index++];
+  };
+
+  var $iterators = {
+    entries: function entries() {
+      return arrayEntries.call(validate(this));
+    },
+    keys: function keys() {
+      return arrayKeys.call(validate(this));
+    },
+    values: function values() {
+      return arrayValues.call(validate(this));
+    }
+  };
+
+  var isTAIndex = function (target, key) {
+    return isObject(target)
+      && target[TYPED_ARRAY]
+      && typeof key != 'symbol'
+      && key in target
+      && String(+key) == String(key);
+  };
+  var $getDesc = function getOwnPropertyDescriptor(target, key) {
+    return isTAIndex(target, key = toPrimitive(key, true))
+      ? propertyDesc(2, target[key])
+      : gOPD(target, key);
+  };
+  var $setDesc = function defineProperty(target, key, desc) {
+    if (isTAIndex(target, key = toPrimitive(key, true))
+      && isObject(desc)
+      && has(desc, 'value')
+      && !has(desc, 'get')
+      && !has(desc, 'set')
+      // TODO: add validation descriptor w/o calling accessors
+      && !desc.configurable
+      && (!has(desc, 'writable') || desc.writable)
+      && (!has(desc, 'enumerable') || desc.enumerable)
+    ) {
+      target[key] = desc.value;
+      return target;
+    } return dP(target, key, desc);
+  };
+
+  if (!ALL_CONSTRUCTORS) {
+    $GOPD.f = $getDesc;
+    $DP.f = $setDesc;
+  }
+
+  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
+    getOwnPropertyDescriptor: $getDesc,
+    defineProperty: $setDesc
+  });
+
+  if (fails(function () { arrayToString.call({}); })) {
+    arrayToString = arrayToLocaleString = function toString() {
+      return arrayJoin.call(this);
+    };
+  }
+
+  var $TypedArrayPrototype$ = redefineAll({}, proto);
+  redefineAll($TypedArrayPrototype$, $iterators);
+  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
+  redefineAll($TypedArrayPrototype$, {
+    slice: $slice,
+    set: $set,
+    constructor: function () { /* noop */ },
+    toString: arrayToString,
+    toLocaleString: $toLocaleString
+  });
+  addGetter($TypedArrayPrototype$, 'buffer', 'b');
+  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
+  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
+  addGetter($TypedArrayPrototype$, 'length', 'e');
+  dP($TypedArrayPrototype$, TAG, {
+    get: function () { return this[TYPED_ARRAY]; }
+  });
+
+  // eslint-disable-next-line max-statements
+  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
+    CLAMPED = !!CLAMPED;
+    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
+    var GETTER = 'get' + KEY;
+    var SETTER = 'set' + KEY;
+    var TypedArray = global[NAME];
+    var Base = TypedArray || {};
+    var TAC = TypedArray && getPrototypeOf(TypedArray);
+    var FORCED = !TypedArray || !$typed.ABV;
+    var O = {};
+    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
+    var getter = function (that, index) {
+      var data = that._d;
+      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
+    };
+    var setter = function (that, index, value) {
+      var data = that._d;
+      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
+      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
+    };
+    var addElement = function (that, index) {
+      dP(that, index, {
+        get: function () {
+          return getter(this, index);
+        },
+        set: function (value) {
+          return setter(this, index, value);
+        },
+        enumerable: true
+      });
+    };
+    if (FORCED) {
+      TypedArray = wrapper(function (that, data, $offset, $length) {
+        anInstance(that, TypedArray, NAME, '_d');
+        var index = 0;
+        var offset = 0;
+        var buffer, byteLength, length, klass;
+        if (!isObject(data)) {
+          length = toIndex(data);
+          byteLength = length * BYTES;
+          buffer = new $ArrayBuffer(byteLength);
+        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
+          buffer = data;
+          offset = toOffset($offset, BYTES);
+          var $len = data.byteLength;
+          if ($length === undefined) {
+            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
+            byteLength = $len - offset;
+            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
+          } else {
+            byteLength = toLength($length) * BYTES;
+            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
+          }
+          length = byteLength / BYTES;
+        } else if (TYPED_ARRAY in data) {
+          return fromList(TypedArray, data);
+        } else {
+          return $from.call(TypedArray, data);
+        }
+        hide(that, '_d', {
+          b: buffer,
+          o: offset,
+          l: byteLength,
+          e: length,
+          v: new $DataView(buffer)
+        });
+        while (index < length) addElement(that, index++);
+      });
+      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
+      hide(TypedArrayPrototype, 'constructor', TypedArray);
+    } else if (!fails(function () {
+      TypedArray(1);
+    }) || !fails(function () {
+      new TypedArray(-1); // eslint-disable-line no-new
+    }) || !$iterDetect(function (iter) {
+      new TypedArray(); // eslint-disable-line no-new
+      new TypedArray(null); // eslint-disable-line no-new
+      new TypedArray(1.5); // eslint-disable-line no-new
+      new TypedArray(iter); // eslint-disable-line no-new
+    }, true)) {
+      TypedArray = wrapper(function (that, data, $offset, $length) {
+        anInstance(that, TypedArray, NAME);
+        var klass;
+        // `ws` module bug, temporarily remove validation length for Uint8Array
+        // https://github.com/websockets/ws/pull/645
+        if (!isObject(data)) return new Base(toIndex(data));
+        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
+          return $length !== undefined
+            ? new Base(data, toOffset($offset, BYTES), $length)
+            : $offset !== undefined
+              ? new Base(data, toOffset($offset, BYTES))
+              : new Base(data);
+        }
+        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
+        return $from.call(TypedArray, data);
+      });
+      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
+        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
+      });
+      TypedArray[PROTOTYPE] = TypedArrayPrototype;
+      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
+    }
+    var $nativeIterator = TypedArrayPrototype[ITERATOR];
+    var CORRECT_ITER_NAME = !!$nativeIterator
+      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
+    var $iterator = $iterators.values;
+    hide(TypedArray, TYPED_CONSTRUCTOR, true);
+    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
+    hide(TypedArrayPrototype, VIEW, true);
+    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
+
+    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
+      dP(TypedArrayPrototype, TAG, {
+        get: function () { return NAME; }
+      });
+    }
+
+    O[NAME] = TypedArray;
+
+    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
+
+    $export($export.S, NAME, {
+      BYTES_PER_ELEMENT: BYTES
+    });
+
+    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
+      from: $from,
+      of: $of
+    });
+
+    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
+
+    $export($export.P, NAME, proto);
+
+    setSpecies(NAME);
+
+    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });
+
+    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
+
+    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;
+
+    $export($export.P + $export.F * fails(function () {
+      new TypedArray(1).slice();
+    }), NAME, { slice: $slice });
+
+    $export($export.P + $export.F * (fails(function () {
+      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
+    }) || !fails(function () {
+      TypedArrayPrototype.toLocaleString.call([1, 2]);
+    })), NAME, { toLocaleString: $toLocaleString });
+
+    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
+    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
+  };
+} else module.exports = function () { /* empty */ };
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-collection-from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-collection-from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-collection-from.js	(date 499162500000)
@@ -0,0 +1,28 @@
+'use strict';
+// https://tc39.github.io/proposal-setmap-offrom/
+var $export = require('./_export');
+var aFunction = require('./_a-function');
+var ctx = require('./_ctx');
+var forOf = require('./_for-of');
+
+module.exports = function (COLLECTION) {
+  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
+    var mapFn = arguments[1];
+    var mapping, A, n, cb;
+    aFunction(this);
+    mapping = mapFn !== undefined;
+    if (mapping) aFunction(mapFn);
+    if (source == undefined) return new this();
+    A = [];
+    if (mapping) {
+      n = 0;
+      cb = ctx(mapFn, arguments[2], 2);
+      forOf(source, false, function (nextItem) {
+        A.push(cb(nextItem, n++));
+      });
+    } else {
+      forOf(source, false, A.push, A);
+    }
+    return new this(A);
+  } });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.cbrt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.cbrt.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.cbrt.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.2.2.9 Math.cbrt(x)
+var $export = require('./_export');
+var sign = require('./_math-sign');
+
+$export($export.S, 'Math', {
+  cbrt: function cbrt(x) {
+    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed-buffer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed-buffer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed-buffer.js	(date 499162500000)
@@ -0,0 +1,276 @@
+'use strict';
+var global = require('./_global');
+var DESCRIPTORS = require('./_descriptors');
+var LIBRARY = require('./_library');
+var $typed = require('./_typed');
+var hide = require('./_hide');
+var redefineAll = require('./_redefine-all');
+var fails = require('./_fails');
+var anInstance = require('./_an-instance');
+var toInteger = require('./_to-integer');
+var toLength = require('./_to-length');
+var toIndex = require('./_to-index');
+var gOPN = require('./_object-gopn').f;
+var dP = require('./_object-dp').f;
+var arrayFill = require('./_array-fill');
+var setToStringTag = require('./_set-to-string-tag');
+var ARRAY_BUFFER = 'ArrayBuffer';
+var DATA_VIEW = 'DataView';
+var PROTOTYPE = 'prototype';
+var WRONG_LENGTH = 'Wrong length!';
+var WRONG_INDEX = 'Wrong index!';
+var $ArrayBuffer = global[ARRAY_BUFFER];
+var $DataView = global[DATA_VIEW];
+var Math = global.Math;
+var RangeError = global.RangeError;
+// eslint-disable-next-line no-shadow-restricted-names
+var Infinity = global.Infinity;
+var BaseBuffer = $ArrayBuffer;
+var abs = Math.abs;
+var pow = Math.pow;
+var floor = Math.floor;
+var log = Math.log;
+var LN2 = Math.LN2;
+var BUFFER = 'buffer';
+var BYTE_LENGTH = 'byteLength';
+var BYTE_OFFSET = 'byteOffset';
+var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
+var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
+var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;
+
+// IEEE754 conversions based on https://github.com/feross/ieee754
+function packIEEE754(value, mLen, nBytes) {
+  var buffer = new Array(nBytes);
+  var eLen = nBytes * 8 - mLen - 1;
+  var eMax = (1 << eLen) - 1;
+  var eBias = eMax >> 1;
+  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
+  var i = 0;
+  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
+  var e, m, c;
+  value = abs(value);
+  // eslint-disable-next-line no-self-compare
+  if (value != value || value === Infinity) {
+    // eslint-disable-next-line no-self-compare
+    m = value != value ? 1 : 0;
+    e = eMax;
+  } else {
+    e = floor(log(value) / LN2);
+    if (value * (c = pow(2, -e)) < 1) {
+      e--;
+      c *= 2;
+    }
+    if (e + eBias >= 1) {
+      value += rt / c;
+    } else {
+      value += rt * pow(2, 1 - eBias);
+    }
+    if (value * c >= 2) {
+      e++;
+      c /= 2;
+    }
+    if (e + eBias >= eMax) {
+      m = 0;
+      e = eMax;
+    } else if (e + eBias >= 1) {
+      m = (value * c - 1) * pow(2, mLen);
+      e = e + eBias;
+    } else {
+      m = value * pow(2, eBias - 1) * pow(2, mLen);
+      e = 0;
+    }
+  }
+  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
+  e = e << mLen | m;
+  eLen += mLen;
+  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
+  buffer[--i] |= s * 128;
+  return buffer;
+}
+function unpackIEEE754(buffer, mLen, nBytes) {
+  var eLen = nBytes * 8 - mLen - 1;
+  var eMax = (1 << eLen) - 1;
+  var eBias = eMax >> 1;
+  var nBits = eLen - 7;
+  var i = nBytes - 1;
+  var s = buffer[i--];
+  var e = s & 127;
+  var m;
+  s >>= 7;
+  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
+  m = e & (1 << -nBits) - 1;
+  e >>= -nBits;
+  nBits += mLen;
+  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
+  if (e === 0) {
+    e = 1 - eBias;
+  } else if (e === eMax) {
+    return m ? NaN : s ? -Infinity : Infinity;
+  } else {
+    m = m + pow(2, mLen);
+    e = e - eBias;
+  } return (s ? -1 : 1) * m * pow(2, e - mLen);
+}
+
+function unpackI32(bytes) {
+  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
+}
+function packI8(it) {
+  return [it & 0xff];
+}
+function packI16(it) {
+  return [it & 0xff, it >> 8 & 0xff];
+}
+function packI32(it) {
+  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
+}
+function packF64(it) {
+  return packIEEE754(it, 52, 8);
+}
+function packF32(it) {
+  return packIEEE754(it, 23, 4);
+}
+
+function addGetter(C, key, internal) {
+  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
+}
+
+function get(view, bytes, index, isLittleEndian) {
+  var numIndex = +index;
+  var intIndex = toIndex(numIndex);
+  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
+  var store = view[$BUFFER]._b;
+  var start = intIndex + view[$OFFSET];
+  var pack = store.slice(start, start + bytes);
+  return isLittleEndian ? pack : pack.reverse();
+}
+function set(view, bytes, index, conversion, value, isLittleEndian) {
+  var numIndex = +index;
+  var intIndex = toIndex(numIndex);
+  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
+  var store = view[$BUFFER]._b;
+  var start = intIndex + view[$OFFSET];
+  var pack = conversion(+value);
+  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
+}
+
+if (!$typed.ABV) {
+  $ArrayBuffer = function ArrayBuffer(length) {
+    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
+    var byteLength = toIndex(length);
+    this._b = arrayFill.call(new Array(byteLength), 0);
+    this[$LENGTH] = byteLength;
+  };
+
+  $DataView = function DataView(buffer, byteOffset, byteLength) {
+    anInstance(this, $DataView, DATA_VIEW);
+    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
+    var bufferLength = buffer[$LENGTH];
+    var offset = toInteger(byteOffset);
+    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
+    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
+    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
+    this[$BUFFER] = buffer;
+    this[$OFFSET] = offset;
+    this[$LENGTH] = byteLength;
+  };
+
+  if (DESCRIPTORS) {
+    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
+    addGetter($DataView, BUFFER, '_b');
+    addGetter($DataView, BYTE_LENGTH, '_l');
+    addGetter($DataView, BYTE_OFFSET, '_o');
+  }
+
+  redefineAll($DataView[PROTOTYPE], {
+    getInt8: function getInt8(byteOffset) {
+      return get(this, 1, byteOffset)[0] << 24 >> 24;
+    },
+    getUint8: function getUint8(byteOffset) {
+      return get(this, 1, byteOffset)[0];
+    },
+    getInt16: function getInt16(byteOffset /* , littleEndian */) {
+      var bytes = get(this, 2, byteOffset, arguments[1]);
+      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
+    },
+    getUint16: function getUint16(byteOffset /* , littleEndian */) {
+      var bytes = get(this, 2, byteOffset, arguments[1]);
+      return bytes[1] << 8 | bytes[0];
+    },
+    getInt32: function getInt32(byteOffset /* , littleEndian */) {
+      return unpackI32(get(this, 4, byteOffset, arguments[1]));
+    },
+    getUint32: function getUint32(byteOffset /* , littleEndian */) {
+      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
+    },
+    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
+      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
+    },
+    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
+      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
+    },
+    setInt8: function setInt8(byteOffset, value) {
+      set(this, 1, byteOffset, packI8, value);
+    },
+    setUint8: function setUint8(byteOffset, value) {
+      set(this, 1, byteOffset, packI8, value);
+    },
+    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
+      set(this, 2, byteOffset, packI16, value, arguments[2]);
+    },
+    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
+      set(this, 2, byteOffset, packI16, value, arguments[2]);
+    },
+    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
+      set(this, 4, byteOffset, packI32, value, arguments[2]);
+    },
+    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
+      set(this, 4, byteOffset, packI32, value, arguments[2]);
+    },
+    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
+      set(this, 4, byteOffset, packF32, value, arguments[2]);
+    },
+    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
+      set(this, 8, byteOffset, packF64, value, arguments[2]);
+    }
+  });
+} else {
+  if (!fails(function () {
+    $ArrayBuffer(1);
+  }) || !fails(function () {
+    new $ArrayBuffer(-1); // eslint-disable-line no-new
+  }) || fails(function () {
+    new $ArrayBuffer(); // eslint-disable-line no-new
+    new $ArrayBuffer(1.5); // eslint-disable-line no-new
+    new $ArrayBuffer(NaN); // eslint-disable-line no-new
+    return $ArrayBuffer.name != ARRAY_BUFFER;
+  })) {
+    $ArrayBuffer = function ArrayBuffer(length) {
+      anInstance(this, $ArrayBuffer);
+      return new BaseBuffer(toIndex(length));
+    };
+    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
+    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
+      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
+    }
+    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
+  }
+  // iOS Safari 7.x bug
+  var view = new $DataView(new $ArrayBuffer(2));
+  var $setInt8 = $DataView[PROTOTYPE].setInt8;
+  view.setInt8(0, 2147483648);
+  view.setInt8(1, 2147483649);
+  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
+    setInt8: function setInt8(byteOffset, value) {
+      $setInt8.call(this, byteOffset, value << 24 >> 24);
+    },
+    setUint8: function setUint8(byteOffset, value) {
+      $setInt8.call(this, byteOffset, value << 24 >> 24);
+    }
+  }, true);
+}
+setToStringTag($ArrayBuffer, ARRAY_BUFFER);
+setToStringTag($DataView, DATA_VIEW);
+hide($DataView[PROTOTYPE], $typed.VIEW, true);
+exports[ARRAY_BUFFER] = $ArrayBuffer;
+exports[DATA_VIEW] = $DataView;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-define.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-define.js	(date 499162500000)
@@ -0,0 +1,13 @@
+var dP = require('./_object-dp');
+var gOPD = require('./_object-gopd');
+var ownKeys = require('./_own-keys');
+var toIObject = require('./_to-iobject');
+
+module.exports = function define(target, mixin) {
+  var keys = ownKeys(toIObject(mixin));
+  var length = keys.length;
+  var i = 0;
+  var key;
+  while (length > i) dP.f(target, key = keys[i++], gOPD.f(mixin, key));
+  return target;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.umulh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.umulh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.umulh.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  umulh: function umulh(u, v) {
+    var UINT16 = 0xffff;
+    var $u = +u;
+    var $v = +v;
+    var u0 = $u & UINT16;
+    var v0 = $v & UINT16;
+    var u1 = $u >>> 16;
+    var v1 = $v >>> 16;
+    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
+    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.get-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.get-iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.get-iterator.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var anObject = require('./_an-object');
+var get = require('./core.get-iterator-method');
+module.exports = require('./_core').getIterator = function (it) {
+  var iterFn = get(it);
+  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
+  return anObject(iterFn.call(it));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.blink.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.blink.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.blink.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.4 String.prototype.blink()
+require('./_string-html')('blink', function (createHTML) {
+  return function blink() {
+    return createHTML(this, 'blink', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.values.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.values.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.values.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/tc39/proposal-object-values-entries
+var $export = require('./_export');
+var $values = require('./_object-to-array')(false);
+
+$export($export.S, 'Object', {
+  values: function values(it) {
+    return $values(it);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.strike.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.strike.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.strike.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.12 String.prototype.strike()
+require('./_string-html')('strike', function (createHTML) {
+  return function strike() {
+    return createHTML(this, 'strike', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-weak.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-weak.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-weak.js	(date 499162500000)
@@ -0,0 +1,85 @@
+'use strict';
+var redefineAll = require('./_redefine-all');
+var getWeak = require('./_meta').getWeak;
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var anInstance = require('./_an-instance');
+var forOf = require('./_for-of');
+var createArrayMethod = require('./_array-methods');
+var $has = require('./_has');
+var validate = require('./_validate-collection');
+var arrayFind = createArrayMethod(5);
+var arrayFindIndex = createArrayMethod(6);
+var id = 0;
+
+// fallback for uncaught frozen keys
+var uncaughtFrozenStore = function (that) {
+  return that._l || (that._l = new UncaughtFrozenStore());
+};
+var UncaughtFrozenStore = function () {
+  this.a = [];
+};
+var findUncaughtFrozen = function (store, key) {
+  return arrayFind(store.a, function (it) {
+    return it[0] === key;
+  });
+};
+UncaughtFrozenStore.prototype = {
+  get: function (key) {
+    var entry = findUncaughtFrozen(this, key);
+    if (entry) return entry[1];
+  },
+  has: function (key) {
+    return !!findUncaughtFrozen(this, key);
+  },
+  set: function (key, value) {
+    var entry = findUncaughtFrozen(this, key);
+    if (entry) entry[1] = value;
+    else this.a.push([key, value]);
+  },
+  'delete': function (key) {
+    var index = arrayFindIndex(this.a, function (it) {
+      return it[0] === key;
+    });
+    if (~index) this.a.splice(index, 1);
+    return !!~index;
+  }
+};
+
+module.exports = {
+  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
+    var C = wrapper(function (that, iterable) {
+      anInstance(that, C, NAME, '_i');
+      that._t = NAME;      // collection type
+      that._i = id++;      // collection id
+      that._l = undefined; // leak store for uncaught frozen objects
+      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
+    });
+    redefineAll(C.prototype, {
+      // 23.3.3.2 WeakMap.prototype.delete(key)
+      // 23.4.3.3 WeakSet.prototype.delete(value)
+      'delete': function (key) {
+        if (!isObject(key)) return false;
+        var data = getWeak(key);
+        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
+        return data && $has(data, this._i) && delete data[this._i];
+      },
+      // 23.3.3.4 WeakMap.prototype.has(key)
+      // 23.4.3.4 WeakSet.prototype.has(value)
+      has: function has(key) {
+        if (!isObject(key)) return false;
+        var data = getWeak(key);
+        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
+        return data && $has(data, this._i);
+      }
+    });
+    return C;
+  },
+  def: function (that, key, value) {
+    var data = getWeak(anObject(key), true);
+    if (data === true) uncaughtFrozenStore(that).set(key, value);
+    else data[that._i] = value;
+    return that;
+  },
+  ufstore: uncaughtFrozenStore
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.weak-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.weak-map.js	(date 499162500000)
@@ -0,0 +1,60 @@
+'use strict';
+var global = require('./_global');
+var each = require('./_array-methods')(0);
+var redefine = require('./_redefine');
+var meta = require('./_meta');
+var assign = require('./_object-assign');
+var weak = require('./_collection-weak');
+var isObject = require('./_is-object');
+var validate = require('./_validate-collection');
+var NATIVE_WEAK_MAP = require('./_validate-collection');
+var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
+var WEAK_MAP = 'WeakMap';
+var getWeak = meta.getWeak;
+var isExtensible = Object.isExtensible;
+var uncaughtFrozenStore = weak.ufstore;
+var InternalMap;
+
+var wrapper = function (get) {
+  return function WeakMap() {
+    return get(this, arguments.length > 0 ? arguments[0] : undefined);
+  };
+};
+
+var methods = {
+  // 23.3.3.3 WeakMap.prototype.get(key)
+  get: function get(key) {
+    if (isObject(key)) {
+      var data = getWeak(key);
+      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
+      return data ? data[this._i] : undefined;
+    }
+  },
+  // 23.3.3.5 WeakMap.prototype.set(key, value)
+  set: function set(key, value) {
+    return weak.def(validate(this, WEAK_MAP), key, value);
+  }
+};
+
+// 23.3 WeakMap Objects
+var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);
+
+// IE11 WeakMap frozen keys fix
+if (NATIVE_WEAK_MAP && IS_IE11) {
+  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
+  assign(InternalMap.prototype, methods);
+  meta.NEED = true;
+  each(['delete', 'has', 'get', 'set'], function (key) {
+    var proto = $WeakMap.prototype;
+    var method = proto[key];
+    redefine(proto, key, function (a, b) {
+      // store frozen objects on internal weakmap shim
+      if (isObject(a) && !isExtensible(a)) {
+        if (!this._f) this._f = new InternalMap();
+        var result = this._f[key](a, b);
+        return key == 'set' ? this : result;
+      // store all the rest on native weakmap
+      } return method.call(this, a, b);
+    });
+  });
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_an-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_an-instance.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_an-instance.js	(date 499162500000)
@@ -0,0 +1,5 @@
+module.exports = function (it, Constructor, name, forbiddenField) {
+  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
+    throw TypeError(name + ': incorrect invocation!');
+  } return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log1p.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log1p.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.log1p.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.20 Math.log1p(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', { log1p: require('./_math-log1p') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.clz32.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.clz32.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.clz32.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 20.2.2.11 Math.clz32(x)
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  clz32: function clz32(x) {
+    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.prevent-extensions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.prevent-extensions.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.prevent-extensions.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// 26.1.12 Reflect.preventExtensions(target)
+var $export = require('./_export');
+var anObject = require('./_an-object');
+var $preventExtensions = Object.preventExtensions;
+
+$export($export.S, 'Reflect', {
+  preventExtensions: function preventExtensions(target) {
+    anObject(target);
+    try {
+      if ($preventExtensions) $preventExtensions(target);
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-regexp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-regexp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-regexp.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 7.2.8 IsRegExp(argument)
+var isObject = require('./_is-object');
+var cof = require('./_cof');
+var MATCH = require('./_wks')('match');
+module.exports = function (it) {
+  var isRegExp;
+  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.sinh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.sinh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.sinh.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// 20.2.2.30 Math.sinh(x)
+var $export = require('./_export');
+var expm1 = require('./_math-expm1');
+var exp = Math.exp;
+
+// V8 near Chromium 38 has a problem with very small numbers
+$export($export.S + $export.F * require('./_fails')(function () {
+  return !Math.sinh(-2e-17) != -2e-17;
+}), 'Math', {
+  sinh: function sinh(x) {
+    return Math.abs(x = +x) < 1
+      ? (expm1(x) - expm1(-x)) / 2
+      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint8-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint8-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint8-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint8', 1, function (init) {
+  return function Uint8Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.delay.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.delay.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.delay.js	(date 499162500000)
@@ -0,0 +1,12 @@
+var global = require('./_global');
+var core = require('./_core');
+var $export = require('./_export');
+var partial = require('./_partial');
+// https://esdiscuss.org/topic/promise-returning-delay-function
+$export($export.G + $export.F, {
+  delay: function delay(time) {
+    return new (core.Promise || global.Promise)(function (resolve) {
+      setTimeout(partial.call(resolve, true), time);
+    });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-length.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-length.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-length.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 7.1.15 ToLength
+var toInteger = require('./_to-integer');
+var min = Math.min;
+module.exports = function (it) {
+  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_ctx.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_ctx.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_ctx.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// optional / simple context binding
+var aFunction = require('./_a-function');
+module.exports = function (fn, that, length) {
+  aFunction(fn);
+  if (that === undefined) return fn;
+  switch (length) {
+    case 1: return function (a) {
+      return fn.call(that, a);
+    };
+    case 2: return function (a, b) {
+      return fn.call(that, a, b);
+    };
+    case 3: return function (a, b, c) {
+      return fn.call(that, a, b, c);
+    };
+  }
+  return function (/* ...args */) {
+    return fn.apply(that, arguments);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_perform.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_perform.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_perform.js	(date 499162500000)
@@ -0,0 +1,7 @@
+module.exports = function (exec) {
+  try {
+    return { e: false, v: exec() };
+  } catch (e) {
+    return { e: true, v: e };
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.has.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.has.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.has.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// 26.1.9 Reflect.has(target, propertyKey)
+var $export = require('./_export');
+
+$export($export.S, 'Reflect', {
+  has: function has(target, propertyKey) {
+    return propertyKey in target;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.lookup-getter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.lookup-getter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.lookup-getter.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+var getPrototypeOf = require('./_object-gpo');
+var getOwnPropertyDescriptor = require('./_object-gopd').f;
+
+// B.2.2.4 Object.prototype.__lookupGetter__(P)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __lookupGetter__: function __lookupGetter__(P) {
+    var O = toObject(this);
+    var K = toPrimitive(P, true);
+    var D;
+    do {
+      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
+    } while (O = getPrototypeOf(O));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-at.js	(date 499162500000)
@@ -0,0 +1,17 @@
+var toInteger = require('./_to-integer');
+var defined = require('./_defined');
+// true  -> String#at
+// false -> String#codePointAt
+module.exports = function (TO_STRING) {
+  return function (that, pos) {
+    var s = String(defined(that));
+    var i = toInteger(pos);
+    var l = s.length;
+    var a, b;
+    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
+    a = s.charCodeAt(i);
+    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
+      ? TO_STRING ? s.charAt(i) : a
+      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_classof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_classof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_classof.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// getting tag from 19.1.3.6 Object.prototype.toString()
+var cof = require('./_cof');
+var TAG = require('./_wks')('toStringTag');
+// ES3 wrong here
+var ARG = cof(function () { return arguments; }()) == 'Arguments';
+
+// fallback for IE11 Script Access Denied error
+var tryGet = function (it, key) {
+  try {
+    return it[key];
+  } catch (e) { /* empty */ }
+};
+
+module.exports = function (it) {
+  var O, T, B;
+  return it === undefined ? 'Undefined' : it === null ? 'Null'
+    // @@toStringTag case
+    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
+    // builtinTag case
+    : ARG ? cof(O)
+    // ES3 arguments fallback
+    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.constructor.js	(date 499162500000)
@@ -0,0 +1,69 @@
+'use strict';
+var global = require('./_global');
+var has = require('./_has');
+var cof = require('./_cof');
+var inheritIfRequired = require('./_inherit-if-required');
+var toPrimitive = require('./_to-primitive');
+var fails = require('./_fails');
+var gOPN = require('./_object-gopn').f;
+var gOPD = require('./_object-gopd').f;
+var dP = require('./_object-dp').f;
+var $trim = require('./_string-trim').trim;
+var NUMBER = 'Number';
+var $Number = global[NUMBER];
+var Base = $Number;
+var proto = $Number.prototype;
+// Opera ~12 has broken Object#toString
+var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
+var TRIM = 'trim' in String.prototype;
+
+// 7.1.3 ToNumber(argument)
+var toNumber = function (argument) {
+  var it = toPrimitive(argument, false);
+  if (typeof it == 'string' && it.length > 2) {
+    it = TRIM ? it.trim() : $trim(it, 3);
+    var first = it.charCodeAt(0);
+    var third, radix, maxCode;
+    if (first === 43 || first === 45) {
+      third = it.charCodeAt(2);
+      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
+    } else if (first === 48) {
+      switch (it.charCodeAt(1)) {
+        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
+        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
+        default: return +it;
+      }
+      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
+        code = digits.charCodeAt(i);
+        // parseInt parses a string to a first unavailable symbol
+        // but ToNumber should return NaN if a string contains unavailable symbols
+        if (code < 48 || code > maxCode) return NaN;
+      } return parseInt(digits, radix);
+    }
+  } return +it;
+};
+
+if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
+  $Number = function Number(value) {
+    var it = arguments.length < 1 ? 0 : value;
+    var that = this;
+    return that instanceof $Number
+      // check on 1..constructor(foo) case
+      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
+        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
+  };
+  for (var keys = require('./_descriptors') ? gOPN(Base) : (
+    // ES3:
+    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
+    // ES6 (in case, if modules with ES6 Number statics required before):
+    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
+    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
+  ).split(','), j = 0, key; keys.length > j; j++) {
+    if (has(Base, key = keys[j]) && !has($Number, key)) {
+      dP($Number, key, gOPD(Base, key));
+    }
+  }
+  $Number.prototype = proto;
+  proto.constructor = $Number;
+  require('./_redefine')(global, NUMBER, $Number);
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-integer.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// 20.1.2.3 Number.isInteger(number)
+var isObject = require('./_is-object');
+var floor = Math.floor;
+module.exports = function isInteger(it) {
+  return !isObject(it) && isFinite(it) && floor(it) === it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.get-iterator-method.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.get-iterator-method.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.get-iterator-method.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var classof = require('./_classof');
+var ITERATOR = require('./_wks')('iterator');
+var Iterators = require('./_iterators');
+module.exports = require('./_core').getIteratorMethod = function (it) {
+  if (it != undefined) return it[ITERATOR]
+    || it['@@iterator']
+    || Iterators[classof(it)];
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-species-constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-species-constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-species-constructor.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var isObject = require('./_is-object');
+var isArray = require('./_is-array');
+var SPECIES = require('./_wks')('species');
+
+module.exports = function (original) {
+  var C;
+  if (isArray(original)) {
+    C = original.constructor;
+    // cross-realm fallback
+    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
+    if (isObject(C)) {
+      C = C[SPECIES];
+      if (C === null) C = undefined;
+    }
+  } return C === undefined ? Array : C;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-pad.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-pad.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-pad.js	(date 499162500000)
@@ -0,0 +1,16 @@
+// https://github.com/tc39/proposal-string-pad-start-end
+var toLength = require('./_to-length');
+var repeat = require('./_string-repeat');
+var defined = require('./_defined');
+
+module.exports = function (that, maxLength, fillString, left) {
+  var S = String(defined(that));
+  var stringLength = S.length;
+  var fillStr = fillString === undefined ? ' ' : String(fillString);
+  var intMaxLength = toLength(maxLength);
+  if (intMaxLength <= stringLength || fillStr == '') return S;
+  var fillLen = intMaxLength - stringLength;
+  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
+  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
+  return left ? stringFiller + S : S + stringFiller;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.promise.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.promise.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.promise.js	(date 499162500000)
@@ -0,0 +1,286 @@
+'use strict';
+var LIBRARY = require('./_library');
+var global = require('./_global');
+var ctx = require('./_ctx');
+var classof = require('./_classof');
+var $export = require('./_export');
+var isObject = require('./_is-object');
+var aFunction = require('./_a-function');
+var anInstance = require('./_an-instance');
+var forOf = require('./_for-of');
+var speciesConstructor = require('./_species-constructor');
+var task = require('./_task').set;
+var microtask = require('./_microtask')();
+var newPromiseCapabilityModule = require('./_new-promise-capability');
+var perform = require('./_perform');
+var userAgent = require('./_user-agent');
+var promiseResolve = require('./_promise-resolve');
+var PROMISE = 'Promise';
+var TypeError = global.TypeError;
+var process = global.process;
+var versions = process && process.versions;
+var v8 = versions && versions.v8 || '';
+var $Promise = global[PROMISE];
+var isNode = classof(process) == 'process';
+var empty = function () { /* empty */ };
+var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
+var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;
+
+var USE_NATIVE = !!function () {
+  try {
+    // correct subclassing with @@species support
+    var promise = $Promise.resolve(1);
+    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
+      exec(empty, empty);
+    };
+    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
+    return (isNode || typeof PromiseRejectionEvent == 'function')
+      && promise.then(empty) instanceof FakePromise
+      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
+      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
+      // we can't detect it synchronously, so just check versions
+      && v8.indexOf('6.6') !== 0
+      && userAgent.indexOf('Chrome/66') === -1;
+  } catch (e) { /* empty */ }
+}();
+
+// helpers
+var isThenable = function (it) {
+  var then;
+  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
+};
+var notify = function (promise, isReject) {
+  if (promise._n) return;
+  promise._n = true;
+  var chain = promise._c;
+  microtask(function () {
+    var value = promise._v;
+    var ok = promise._s == 1;
+    var i = 0;
+    var run = function (reaction) {
+      var handler = ok ? reaction.ok : reaction.fail;
+      var resolve = reaction.resolve;
+      var reject = reaction.reject;
+      var domain = reaction.domain;
+      var result, then, exited;
+      try {
+        if (handler) {
+          if (!ok) {
+            if (promise._h == 2) onHandleUnhandled(promise);
+            promise._h = 1;
+          }
+          if (handler === true) result = value;
+          else {
+            if (domain) domain.enter();
+            result = handler(value); // may throw
+            if (domain) {
+              domain.exit();
+              exited = true;
+            }
+          }
+          if (result === reaction.promise) {
+            reject(TypeError('Promise-chain cycle'));
+          } else if (then = isThenable(result)) {
+            then.call(result, resolve, reject);
+          } else resolve(result);
+        } else reject(value);
+      } catch (e) {
+        if (domain && !exited) domain.exit();
+        reject(e);
+      }
+    };
+    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
+    promise._c = [];
+    promise._n = false;
+    if (isReject && !promise._h) onUnhandled(promise);
+  });
+};
+var onUnhandled = function (promise) {
+  task.call(global, function () {
+    var value = promise._v;
+    var unhandled = isUnhandled(promise);
+    var result, handler, console;
+    if (unhandled) {
+      result = perform(function () {
+        if (isNode) {
+          process.emit('unhandledRejection', value, promise);
+        } else if (handler = global.onunhandledrejection) {
+          handler({ promise: promise, reason: value });
+        } else if ((console = global.console) && console.error) {
+          console.error('Unhandled promise rejection', value);
+        }
+      });
+      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
+      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
+    } promise._a = undefined;
+    if (unhandled && result.e) throw result.v;
+  });
+};
+var isUnhandled = function (promise) {
+  return promise._h !== 1 && (promise._a || promise._c).length === 0;
+};
+var onHandleUnhandled = function (promise) {
+  task.call(global, function () {
+    var handler;
+    if (isNode) {
+      process.emit('rejectionHandled', promise);
+    } else if (handler = global.onrejectionhandled) {
+      handler({ promise: promise, reason: promise._v });
+    }
+  });
+};
+var $reject = function (value) {
+  var promise = this;
+  if (promise._d) return;
+  promise._d = true;
+  promise = promise._w || promise; // unwrap
+  promise._v = value;
+  promise._s = 2;
+  if (!promise._a) promise._a = promise._c.slice();
+  notify(promise, true);
+};
+var $resolve = function (value) {
+  var promise = this;
+  var then;
+  if (promise._d) return;
+  promise._d = true;
+  promise = promise._w || promise; // unwrap
+  try {
+    if (promise === value) throw TypeError("Promise can't be resolved itself");
+    if (then = isThenable(value)) {
+      microtask(function () {
+        var wrapper = { _w: promise, _d: false }; // wrap
+        try {
+          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
+        } catch (e) {
+          $reject.call(wrapper, e);
+        }
+      });
+    } else {
+      promise._v = value;
+      promise._s = 1;
+      notify(promise, false);
+    }
+  } catch (e) {
+    $reject.call({ _w: promise, _d: false }, e); // wrap
+  }
+};
+
+// constructor polyfill
+if (!USE_NATIVE) {
+  // 25.4.3.1 Promise(executor)
+  $Promise = function Promise(executor) {
+    anInstance(this, $Promise, PROMISE, '_h');
+    aFunction(executor);
+    Internal.call(this);
+    try {
+      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
+    } catch (err) {
+      $reject.call(this, err);
+    }
+  };
+  // eslint-disable-next-line no-unused-vars
+  Internal = function Promise(executor) {
+    this._c = [];             // <- awaiting reactions
+    this._a = undefined;      // <- checked in isUnhandled reactions
+    this._s = 0;              // <- state
+    this._d = false;          // <- done
+    this._v = undefined;      // <- value
+    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
+    this._n = false;          // <- notify
+  };
+  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
+    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
+    then: function then(onFulfilled, onRejected) {
+      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
+      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
+      reaction.fail = typeof onRejected == 'function' && onRejected;
+      reaction.domain = isNode ? process.domain : undefined;
+      this._c.push(reaction);
+      if (this._a) this._a.push(reaction);
+      if (this._s) notify(this, false);
+      return reaction.promise;
+    },
+    // 25.4.5.1 Promise.prototype.catch(onRejected)
+    'catch': function (onRejected) {
+      return this.then(undefined, onRejected);
+    }
+  });
+  OwnPromiseCapability = function () {
+    var promise = new Internal();
+    this.promise = promise;
+    this.resolve = ctx($resolve, promise, 1);
+    this.reject = ctx($reject, promise, 1);
+  };
+  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
+    return C === $Promise || C === Wrapper
+      ? new OwnPromiseCapability(C)
+      : newGenericPromiseCapability(C);
+  };
+}
+
+$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
+require('./_set-to-string-tag')($Promise, PROMISE);
+require('./_set-species')(PROMISE);
+Wrapper = require('./_core')[PROMISE];
+
+// statics
+$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
+  // 25.4.4.5 Promise.reject(r)
+  reject: function reject(r) {
+    var capability = newPromiseCapability(this);
+    var $$reject = capability.reject;
+    $$reject(r);
+    return capability.promise;
+  }
+});
+$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
+  // 25.4.4.6 Promise.resolve(x)
+  resolve: function resolve(x) {
+    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
+  }
+});
+$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
+  $Promise.all(iter)['catch'](empty);
+})), PROMISE, {
+  // 25.4.4.1 Promise.all(iterable)
+  all: function all(iterable) {
+    var C = this;
+    var capability = newPromiseCapability(C);
+    var resolve = capability.resolve;
+    var reject = capability.reject;
+    var result = perform(function () {
+      var values = [];
+      var index = 0;
+      var remaining = 1;
+      forOf(iterable, false, function (promise) {
+        var $index = index++;
+        var alreadyCalled = false;
+        values.push(undefined);
+        remaining++;
+        C.resolve(promise).then(function (value) {
+          if (alreadyCalled) return;
+          alreadyCalled = true;
+          values[$index] = value;
+          --remaining || resolve(values);
+        }, reject);
+      });
+      --remaining || resolve(values);
+    });
+    if (result.e) reject(result.v);
+    return capability.promise;
+  },
+  // 25.4.4.4 Promise.race(iterable)
+  race: function race(iterable) {
+    var C = this;
+    var capability = newPromiseCapability(C);
+    var reject = capability.reject;
+    var result = perform(function () {
+      forOf(iterable, false, function (promise) {
+        C.resolve(promise).then(capability.resolve, reject);
+      });
+    });
+    if (result.e) reject(result.v);
+    return capability.promise;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.match.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.match.js	(date 499162500000)
@@ -0,0 +1,40 @@
+'use strict';
+
+var anObject = require('./_an-object');
+var toLength = require('./_to-length');
+var advanceStringIndex = require('./_advance-string-index');
+var regExpExec = require('./_regexp-exec-abstract');
+
+// @@match logic
+require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {
+  return [
+    // `String.prototype.match` method
+    // https://tc39.github.io/ecma262/#sec-string.prototype.match
+    function match(regexp) {
+      var O = defined(this);
+      var fn = regexp == undefined ? undefined : regexp[MATCH];
+      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
+    },
+    // `RegExp.prototype[@@match]` method
+    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
+    function (regexp) {
+      var res = maybeCallNative($match, regexp, this);
+      if (res.done) return res.value;
+      var rx = anObject(regexp);
+      var S = String(this);
+      if (!rx.global) return regExpExec(rx, S);
+      var fullUnicode = rx.unicode;
+      rx.lastIndex = 0;
+      var A = [];
+      var n = 0;
+      var result;
+      while ((result = regExpExec(rx, S)) !== null) {
+        var matchStr = String(result[0]);
+        A[n] = matchStr;
+        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
+        n++;
+      }
+      return n === 0 ? null : A;
+    }
+  ];
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-integer.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.3 Number.isInteger(number)
+var $export = require('./_export');
+
+$export($export.S, 'Number', { isInteger: require('./_is-integer') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.symbol.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.symbol.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.symbol.js	(date 499162500000)
@@ -0,0 +1,234 @@
+'use strict';
+// ECMAScript 6 symbols shim
+var global = require('./_global');
+var has = require('./_has');
+var DESCRIPTORS = require('./_descriptors');
+var $export = require('./_export');
+var redefine = require('./_redefine');
+var META = require('./_meta').KEY;
+var $fails = require('./_fails');
+var shared = require('./_shared');
+var setToStringTag = require('./_set-to-string-tag');
+var uid = require('./_uid');
+var wks = require('./_wks');
+var wksExt = require('./_wks-ext');
+var wksDefine = require('./_wks-define');
+var enumKeys = require('./_enum-keys');
+var isArray = require('./_is-array');
+var anObject = require('./_an-object');
+var isObject = require('./_is-object');
+var toIObject = require('./_to-iobject');
+var toPrimitive = require('./_to-primitive');
+var createDesc = require('./_property-desc');
+var _create = require('./_object-create');
+var gOPNExt = require('./_object-gopn-ext');
+var $GOPD = require('./_object-gopd');
+var $DP = require('./_object-dp');
+var $keys = require('./_object-keys');
+var gOPD = $GOPD.f;
+var dP = $DP.f;
+var gOPN = gOPNExt.f;
+var $Symbol = global.Symbol;
+var $JSON = global.JSON;
+var _stringify = $JSON && $JSON.stringify;
+var PROTOTYPE = 'prototype';
+var HIDDEN = wks('_hidden');
+var TO_PRIMITIVE = wks('toPrimitive');
+var isEnum = {}.propertyIsEnumerable;
+var SymbolRegistry = shared('symbol-registry');
+var AllSymbols = shared('symbols');
+var OPSymbols = shared('op-symbols');
+var ObjectProto = Object[PROTOTYPE];
+var USE_NATIVE = typeof $Symbol == 'function';
+var QObject = global.QObject;
+// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
+var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
+
+// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
+var setSymbolDesc = DESCRIPTORS && $fails(function () {
+  return _create(dP({}, 'a', {
+    get: function () { return dP(this, 'a', { value: 7 }).a; }
+  })).a != 7;
+}) ? function (it, key, D) {
+  var protoDesc = gOPD(ObjectProto, key);
+  if (protoDesc) delete ObjectProto[key];
+  dP(it, key, D);
+  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
+} : dP;
+
+var wrap = function (tag) {
+  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
+  sym._k = tag;
+  return sym;
+};
+
+var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
+  return typeof it == 'symbol';
+} : function (it) {
+  return it instanceof $Symbol;
+};
+
+var $defineProperty = function defineProperty(it, key, D) {
+  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
+  anObject(it);
+  key = toPrimitive(key, true);
+  anObject(D);
+  if (has(AllSymbols, key)) {
+    if (!D.enumerable) {
+      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
+      it[HIDDEN][key] = true;
+    } else {
+      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
+      D = _create(D, { enumerable: createDesc(0, false) });
+    } return setSymbolDesc(it, key, D);
+  } return dP(it, key, D);
+};
+var $defineProperties = function defineProperties(it, P) {
+  anObject(it);
+  var keys = enumKeys(P = toIObject(P));
+  var i = 0;
+  var l = keys.length;
+  var key;
+  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
+  return it;
+};
+var $create = function create(it, P) {
+  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
+};
+var $propertyIsEnumerable = function propertyIsEnumerable(key) {
+  var E = isEnum.call(this, key = toPrimitive(key, true));
+  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
+  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
+};
+var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
+  it = toIObject(it);
+  key = toPrimitive(key, true);
+  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
+  var D = gOPD(it, key);
+  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
+  return D;
+};
+var $getOwnPropertyNames = function getOwnPropertyNames(it) {
+  var names = gOPN(toIObject(it));
+  var result = [];
+  var i = 0;
+  var key;
+  while (names.length > i) {
+    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
+  } return result;
+};
+var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
+  var IS_OP = it === ObjectProto;
+  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
+  var result = [];
+  var i = 0;
+  var key;
+  while (names.length > i) {
+    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
+  } return result;
+};
+
+// 19.4.1.1 Symbol([description])
+if (!USE_NATIVE) {
+  $Symbol = function Symbol() {
+    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
+    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
+    var $set = function (value) {
+      if (this === ObjectProto) $set.call(OPSymbols, value);
+      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
+      setSymbolDesc(this, tag, createDesc(1, value));
+    };
+    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
+    return wrap(tag);
+  };
+  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
+    return this._k;
+  });
+
+  $GOPD.f = $getOwnPropertyDescriptor;
+  $DP.f = $defineProperty;
+  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
+  require('./_object-pie').f = $propertyIsEnumerable;
+  require('./_object-gops').f = $getOwnPropertySymbols;
+
+  if (DESCRIPTORS && !require('./_library')) {
+    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
+  }
+
+  wksExt.f = function (name) {
+    return wrap(wks(name));
+  };
+}
+
+$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
+
+for (var es6Symbols = (
+  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
+  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
+).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);
+
+for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
+
+$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
+  // 19.4.2.1 Symbol.for(key)
+  'for': function (key) {
+    return has(SymbolRegistry, key += '')
+      ? SymbolRegistry[key]
+      : SymbolRegistry[key] = $Symbol(key);
+  },
+  // 19.4.2.5 Symbol.keyFor(sym)
+  keyFor: function keyFor(sym) {
+    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
+    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
+  },
+  useSetter: function () { setter = true; },
+  useSimple: function () { setter = false; }
+});
+
+$export($export.S + $export.F * !USE_NATIVE, 'Object', {
+  // 19.1.2.2 Object.create(O [, Properties])
+  create: $create,
+  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
+  defineProperty: $defineProperty,
+  // 19.1.2.3 Object.defineProperties(O, Properties)
+  defineProperties: $defineProperties,
+  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
+  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
+  // 19.1.2.7 Object.getOwnPropertyNames(O)
+  getOwnPropertyNames: $getOwnPropertyNames,
+  // 19.1.2.8 Object.getOwnPropertySymbols(O)
+  getOwnPropertySymbols: $getOwnPropertySymbols
+});
+
+// 24.3.2 JSON.stringify(value [, replacer [, space]])
+$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
+  var S = $Symbol();
+  // MS Edge converts symbol values to JSON as {}
+  // WebKit converts symbol values to JSON as null
+  // V8 throws on boxed symbols
+  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
+})), 'JSON', {
+  stringify: function stringify(it) {
+    var args = [it];
+    var i = 1;
+    var replacer, $replacer;
+    while (arguments.length > i) args.push(arguments[i++]);
+    $replacer = replacer = args[1];
+    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
+    if (!isArray(replacer)) replacer = function (key, value) {
+      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
+      if (!isSymbol(value)) return value;
+    };
+    args[1] = replacer;
+    return _stringify.apply($JSON, args);
+  }
+});
+
+// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
+$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
+// 19.4.3.5 Symbol.prototype[@@toStringTag]
+setToStringTag($Symbol, 'Symbol');
+// 20.2.1.9 Math[@@toStringTag]
+setToStringTag(Math, 'Math', true);
+// 24.3.3 JSON[@@toStringTag]
+setToStringTag(global.JSON, 'JSON', true);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-fill.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-fill.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-fill.js	(date 499162500000)
@@ -0,0 +1,15 @@
+// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
+'use strict';
+var toObject = require('./_to-object');
+var toAbsoluteIndex = require('./_to-absolute-index');
+var toLength = require('./_to-length');
+module.exports = function fill(value /* , start = 0, end = @length */) {
+  var O = toObject(this);
+  var length = toLength(O.length);
+  var aLen = arguments.length;
+  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
+  var end = aLen > 2 ? arguments[2] : undefined;
+  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
+  while (endPos > index) O[index++] = value;
+  return O;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.is-iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.is-iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.is-iterable.js	(date 499162500000)
@@ -0,0 +1,10 @@
+var classof = require('./_classof');
+var ITERATOR = require('./_wks')('iterator');
+var Iterators = require('./_iterators');
+module.exports = require('./_core').isIterable = function (it) {
+  var O = Object(it);
+  return O[ITERATOR] !== undefined
+    || '@@iterator' in O
+    // eslint-disable-next-line no-prototype-builtins
+    || Iterators.hasOwnProperty(classof(O));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.set-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.set-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.set-prototype-of.js	(date 499162500000)
@@ -0,0 +1,3 @@
+// 19.1.3.19 Object.setPrototypeOf(O, proto)
+var $export = require('./_export');
+$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fails.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fails.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fails.js	(date 499162500000)
@@ -0,0 +1,7 @@
+module.exports = function (exec) {
+  try {
+    return !!exec();
+  } catch (e) {
+    return true;
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-array-iter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-array-iter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_is-array-iter.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// check on default Array iterator
+var Iterators = require('./_iterators');
+var ITERATOR = require('./_wks')('iterator');
+var ArrayProto = Array.prototype;
+
+module.exports = function (it) {
+  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint16-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint16-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint16-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint16', 2, function (init) {
+  return function Uint16Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-own-property-names.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-own-property-names.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.get-own-property-names.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 19.1.2.7 Object.getOwnPropertyNames(O)
+require('./_object-sap')('getOwnPropertyNames', function () {
+  return require('./_object-gopn-ext').f;
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.filter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.filter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.filter.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+var $export = require('./_export');
+var $filter = require('./_array-methods')(2);
+
+$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {
+  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
+  filter: function filter(callbackfn /* , thisArg */) {
+    return $filter(this, callbackfn, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iobject.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iobject.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iobject.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// fallback for non-array-like ES3 and non-enumerable old V8 strings
+var cof = require('./_cof');
+// eslint-disable-next-line no-prototype-builtins
+module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
+  return cof(it) == 'String' ? it.split('') : Object(it);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_array-includes.js	(date 499162500000)
@@ -0,0 +1,23 @@
+// false -> Array#indexOf
+// true  -> Array#includes
+var toIObject = require('./_to-iobject');
+var toLength = require('./_to-length');
+var toAbsoluteIndex = require('./_to-absolute-index');
+module.exports = function (IS_INCLUDES) {
+  return function ($this, el, fromIndex) {
+    var O = toIObject($this);
+    var length = toLength(O.length);
+    var index = toAbsoluteIndex(fromIndex, length);
+    var value;
+    // Array#includes uses SameValueZero equality algorithm
+    // eslint-disable-next-line no-self-compare
+    if (IS_INCLUDES && el != el) while (length > index) {
+      value = O[index++];
+      // eslint-disable-next-line no-self-compare
+      if (value != value) return true;
+    // Array#indexOf ignores holes, Array#includes - not
+    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
+      if (O[index] === el) return IS_INCLUDES || index || 0;
+    } return !IS_INCLUDES && -1;
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.make.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.make.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.make.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var $export = require('./_export');
+var define = require('./_object-define');
+var create = require('./_object-create');
+
+$export($export.S + $export.F, 'Object', {
+  make: function (proto, mixin) {
+    return define(create(proto), mixin);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-species.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_set-species.js	(date 499162500000)
@@ -0,0 +1,13 @@
+'use strict';
+var global = require('./_global');
+var dP = require('./_object-dp');
+var DESCRIPTORS = require('./_descriptors');
+var SPECIES = require('./_wks')('species');
+
+module.exports = function (KEY) {
+  var C = global[KEY];
+  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
+    configurable: true,
+    get: function () { return this; }
+  });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es5.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es5.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es5.js	(date 499162500000)
@@ -0,0 +1,35 @@
+// This file still here for a legacy code and will be removed in a near time
+require('./es6.object.create');
+require('./es6.object.define-property');
+require('./es6.object.define-properties');
+require('./es6.object.get-own-property-descriptor');
+require('./es6.object.get-prototype-of');
+require('./es6.object.keys');
+require('./es6.object.get-own-property-names');
+require('./es6.object.freeze');
+require('./es6.object.seal');
+require('./es6.object.prevent-extensions');
+require('./es6.object.is-frozen');
+require('./es6.object.is-sealed');
+require('./es6.object.is-extensible');
+require('./es6.function.bind');
+require('./es6.array.is-array');
+require('./es6.array.join');
+require('./es6.array.slice');
+require('./es6.array.sort');
+require('./es6.array.for-each');
+require('./es6.array.map');
+require('./es6.array.filter');
+require('./es6.array.some');
+require('./es6.array.every');
+require('./es6.array.reduce');
+require('./es6.array.reduce-right');
+require('./es6.array.index-of');
+require('./es6.array.last-index-of');
+require('./es6.date.now');
+require('./es6.date.to-iso-string');
+require('./es6.date.to-json');
+require('./es6.parse-int');
+require('./es6.parse-float');
+require('./es6.string.trim');
+require('./es6.regexp.to-string');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-repeat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-repeat.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_string-repeat.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+var toInteger = require('./_to-integer');
+var defined = require('./_defined');
+
+module.exports = function repeat(count) {
+  var str = String(defined(this));
+  var res = '';
+  var n = toInteger(count);
+  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
+  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
+  return res;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_date-to-iso-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_date-to-iso-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_date-to-iso-string.js	(date 499162500000)
@@ -0,0 +1,26 @@
+'use strict';
+// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
+var fails = require('./_fails');
+var getTime = Date.prototype.getTime;
+var $toISOString = Date.prototype.toISOString;
+
+var lz = function (num) {
+  return num > 9 ? num : '0' + num;
+};
+
+// PhantomJS / old WebKit has a broken implementations
+module.exports = (fails(function () {
+  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
+}) || !fails(function () {
+  $toISOString.call(new Date(NaN));
+})) ? function toISOString() {
+  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
+  var d = this;
+  var y = d.getUTCFullYear();
+  var m = d.getUTCMilliseconds();
+  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
+  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
+    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
+    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
+    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
+} : $toISOString;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_global.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_global.js	(date 499162500000)
@@ -0,0 +1,6 @@
+// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
+var global = module.exports = typeof window != 'undefined' && window.Math == Math
+  ? window : typeof self != 'undefined' && self.Math == Math ? self
+  // eslint-disable-next-line no-new-func
+  : Function('return this')();
+if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-sap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-sap.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-sap.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// most Object methods by ES6 should accept primitives
+var $export = require('./_export');
+var core = require('./_core');
+var fails = require('./_fails');
+module.exports = function (KEY, exec) {
+  var fn = (core.Object || {})[KEY] || Object[KEY];
+  var exp = {};
+  exp[KEY] = exec(fn);
+  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_replacer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_replacer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_replacer.js	(date 499162500000)
@@ -0,0 +1,8 @@
+module.exports = function (regExp, replace) {
+  var replacer = replace === Object(replace) ? function (part) {
+    return replace[part];
+  } : replace;
+  return function (it) {
+    return String(it).replace(regExp, replacer);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.flat-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.flat-map.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.flat-map.js	(date 499162500000)
@@ -0,0 +1,22 @@
+'use strict';
+// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
+var $export = require('./_export');
+var flattenIntoArray = require('./_flatten-into-array');
+var toObject = require('./_to-object');
+var toLength = require('./_to-length');
+var aFunction = require('./_a-function');
+var arraySpeciesCreate = require('./_array-species-create');
+
+$export($export.P, 'Array', {
+  flatMap: function flatMap(callbackfn /* , thisArg */) {
+    var O = toObject(this);
+    var sourceLen, A;
+    aFunction(callbackfn);
+    sourceLen = toLength(O.length);
+    A = arraySpeciesCreate(O, 0);
+    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
+    return A;
+  }
+});
+
+require('./_add-to-unscopables')('flatMap');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.lookup-setter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.lookup-setter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.lookup-setter.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+var getPrototypeOf = require('./_object-gpo');
+var getOwnPropertyDescriptor = require('./_object-gopd').f;
+
+// B.2.2.5 Object.prototype.__lookupSetter__(P)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __lookupSetter__: function __lookupSetter__(P) {
+    var O = toObject(this);
+    var K = toPrimitive(P, true);
+    var D;
+    do {
+      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
+    } while (O = getPrototypeOf(O));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.split.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.split.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.split.js	(date 499162500000)
@@ -0,0 +1,134 @@
+'use strict';
+
+var isRegExp = require('./_is-regexp');
+var anObject = require('./_an-object');
+var speciesConstructor = require('./_species-constructor');
+var advanceStringIndex = require('./_advance-string-index');
+var toLength = require('./_to-length');
+var callRegExpExec = require('./_regexp-exec-abstract');
+var regexpExec = require('./_regexp-exec');
+var fails = require('./_fails');
+var $min = Math.min;
+var $push = [].push;
+var $SPLIT = 'split';
+var LENGTH = 'length';
+var LAST_INDEX = 'lastIndex';
+var MAX_UINT32 = 0xffffffff;
+
+// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
+var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });
+
+// @@split logic
+require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
+  var internalSplit;
+  if (
+    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
+    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
+    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
+    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
+    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
+    ''[$SPLIT](/.?/)[LENGTH]
+  ) {
+    // based on es5-shim implementation, need to rework it
+    internalSplit = function (separator, limit) {
+      var string = String(this);
+      if (separator === undefined && limit === 0) return [];
+      // If `separator` is not a regex, use native split
+      if (!isRegExp(separator)) return $split.call(string, separator, limit);
+      var output = [];
+      var flags = (separator.ignoreCase ? 'i' : '') +
+                  (separator.multiline ? 'm' : '') +
+                  (separator.unicode ? 'u' : '') +
+                  (separator.sticky ? 'y' : '');
+      var lastLastIndex = 0;
+      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
+      // Make `global` and avoid `lastIndex` issues by working with a copy
+      var separatorCopy = new RegExp(separator.source, flags + 'g');
+      var match, lastIndex, lastLength;
+      while (match = regexpExec.call(separatorCopy, string)) {
+        lastIndex = separatorCopy[LAST_INDEX];
+        if (lastIndex > lastLastIndex) {
+          output.push(string.slice(lastLastIndex, match.index));
+          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
+          lastLength = match[0][LENGTH];
+          lastLastIndex = lastIndex;
+          if (output[LENGTH] >= splitLimit) break;
+        }
+        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
+      }
+      if (lastLastIndex === string[LENGTH]) {
+        if (lastLength || !separatorCopy.test('')) output.push('');
+      } else output.push(string.slice(lastLastIndex));
+      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
+    };
+  // Chakra, V8
+  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
+    internalSplit = function (separator, limit) {
+      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
+    };
+  } else {
+    internalSplit = $split;
+  }
+
+  return [
+    // `String.prototype.split` method
+    // https://tc39.github.io/ecma262/#sec-string.prototype.split
+    function split(separator, limit) {
+      var O = defined(this);
+      var splitter = separator == undefined ? undefined : separator[SPLIT];
+      return splitter !== undefined
+        ? splitter.call(separator, O, limit)
+        : internalSplit.call(String(O), separator, limit);
+    },
+    // `RegExp.prototype[@@split]` method
+    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
+    //
+    // NOTE: This cannot be properly polyfilled in engines that don't support
+    // the 'y' flag.
+    function (regexp, limit) {
+      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
+      if (res.done) return res.value;
+
+      var rx = anObject(regexp);
+      var S = String(this);
+      var C = speciesConstructor(rx, RegExp);
+
+      var unicodeMatching = rx.unicode;
+      var flags = (rx.ignoreCase ? 'i' : '') +
+                  (rx.multiline ? 'm' : '') +
+                  (rx.unicode ? 'u' : '') +
+                  (SUPPORTS_Y ? 'y' : 'g');
+
+      // ^(? + rx + ) is needed, in combination with some S slicing, to
+      // simulate the 'y' flag.
+      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
+      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
+      if (lim === 0) return [];
+      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
+      var p = 0;
+      var q = 0;
+      var A = [];
+      while (q < S.length) {
+        splitter.lastIndex = SUPPORTS_Y ? q : 0;
+        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
+        var e;
+        if (
+          z === null ||
+          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
+        ) {
+          q = advanceStringIndex(S, q, unicodeMatching);
+        } else {
+          A.push(S.slice(p, q));
+          if (A.length === lim) return A;
+          for (var i = 1; i <= z.length - 1; i++) {
+            A.push(z[i]);
+            if (A.length === lim) return A;
+          }
+          q = p = e;
+        }
+      }
+      A.push(S.slice(p));
+      return A;
+    }
+  ];
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get-prototype-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.reflect.get-prototype-of.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 26.1.8 Reflect.getPrototypeOf(target)
+var $export = require('./_export');
+var getProto = require('./_object-gpo');
+var anObject = require('./_an-object');
+
+$export($export.S, 'Reflect', {
+  getPrototypeOf: function getPrototypeOf(target) {
+    return getProto(anObject(target));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.at.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.at.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+// https://github.com/mathiasbynens/String.prototype.at
+var $export = require('./_export');
+var $at = require('./_string-at')(true);
+
+$export($export.P, 'String', {
+  at: function at(pos) {
+    return $at(this, pos);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_typed.js	(date 499162500000)
@@ -0,0 +1,28 @@
+var global = require('./_global');
+var hide = require('./_hide');
+var uid = require('./_uid');
+var TYPED = uid('typed_array');
+var VIEW = uid('view');
+var ABV = !!(global.ArrayBuffer && global.DataView);
+var CONSTR = ABV;
+var i = 0;
+var l = 9;
+var Typed;
+
+var TypedArrayConstructors = (
+  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
+).split(',');
+
+while (i < l) {
+  if (Typed = global[TypedArrayConstructors[i++]]) {
+    hide(Typed.prototype, TYPED, true);
+    hide(Typed.prototype, VIEW, true);
+  } else CONSTR = false;
+}
+
+module.exports = {
+  ABV: ABV,
+  CONSTR: CONSTR,
+  TYPED: TYPED,
+  VIEW: VIEW
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.is-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.is-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/core.object.is-object.js	(date 499162500000)
@@ -0,0 +1,3 @@
+var $export = require('./_export');
+
+$export($export.S + $export.F, 'Object', { isObject: require('./_is-object') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int8-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int8-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.int8-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Int8', 1, function (init) {
+  return function Int8Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.asap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.asap.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.asap.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
+var $export = require('./_export');
+var microtask = require('./_microtask')();
+var process = require('./_global').process;
+var isNode = require('./_cof')(process) == 'process';
+
+$export($export.G, {
+  asap: function asap(fn) {
+    var domain = isNode && process.domain;
+    microtask(domain ? domain.bind(fn) : fn);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.pad-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.pad-start.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.string.pad-start.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+// https://github.com/tc39/proposal-string-pad-start-end
+var $export = require('./_export');
+var $pad = require('./_string-pad');
+var userAgent = require('./_user-agent');
+
+// https://github.com/zloirock/core-js/issues/280
+var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);
+
+$export($export.P + $export.F * WEBKIT_BUG, 'String', {
+  padStart: function padStart(maxLength /* , fillString = ' ' */) {
+    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fontsize.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fontsize.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.fontsize.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.8 String.prototype.fontsize(size)
+require('./_string-html')('fontsize', function (createHTML) {
+  return function fontsize(size) {
+    return createHTML(this, 'font', 'size', size);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.acosh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.acosh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.acosh.js	(date 499162500000)
@@ -0,0 +1,18 @@
+// 20.2.2.3 Math.acosh(x)
+var $export = require('./_export');
+var log1p = require('./_math-log1p');
+var sqrt = Math.sqrt;
+var $acosh = Math.acosh;
+
+$export($export.S + $export.F * !($acosh
+  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
+  && Math.floor($acosh(Number.MAX_VALUE)) == 710
+  // Tor Browser bug: Math.acosh(Infinity) -> NaN
+  && $acosh(Infinity) == Infinity
+), 'Math', {
+  acosh: function acosh(x) {
+    return (x = +x) < 1 ? NaN : x > 94906265.62425156
+      ? Math.log(x) + Math.LN2
+      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.max-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.max-safe-integer.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.max-safe-integer.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.1.2.6 Number.MAX_SAFE_INTEGER
+var $export = require('./_export');
+
+$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_an-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_an-object.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_an-object.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var isObject = require('./_is-object');
+module.exports = function (it) {
+  if (!isObject(it)) throw TypeError(it + ' is not an object!');
+  return it;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.index-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.index-of.js	(date 499162500000)
@@ -0,0 +1,15 @@
+'use strict';
+var $export = require('./_export');
+var $indexOf = require('./_array-includes')(false);
+var $native = [].indexOf;
+var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
+
+$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
+  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
+  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
+    return NEGATIVE_ZERO
+      // convert -0 to +0
+      ? $native.apply(this, arguments) || 0
+      : $indexOf(this, searchElement, arguments[1]);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.promise.finally.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.promise.finally.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.promise.finally.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// https://github.com/tc39/proposal-promise-finally
+'use strict';
+var $export = require('./_export');
+var core = require('./_core');
+var global = require('./_global');
+var speciesConstructor = require('./_species-constructor');
+var promiseResolve = require('./_promise-resolve');
+
+$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
+  var C = speciesConstructor(this, core.Promise || global.Promise);
+  var isFunction = typeof onFinally == 'function';
+  return this.then(
+    isFunction ? function (x) {
+      return promiseResolve(C, onFinally()).then(function () { return x; });
+    } : onFinally,
+    isFunction ? function (e) {
+      return promiseResolve(C, onFinally()).then(function () { throw e; });
+    } : onFinally
+  );
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_date-to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_date-to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_date-to-primitive.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+var anObject = require('./_an-object');
+var toPrimitive = require('./_to-primitive');
+var NUMBER = 'number';
+
+module.exports = function (hint) {
+  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
+  return toPrimitive(anObject(this), hint != NUMBER);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_collection-to-json.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// https://github.com/DavidBruant/Map-Set.prototype.toJSON
+var classof = require('./_classof');
+var from = require('./_array-from-iterable');
+module.exports = function (NAME) {
+  return function toJSON() {
+    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
+    return from(this);
+  };
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.has-metadata.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.has-metadata.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.has-metadata.js	(date 499162500000)
@@ -0,0 +1,16 @@
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var getPrototypeOf = require('./_object-gpo');
+var ordinaryHasOwnMetadata = metadata.has;
+var toMetaKey = metadata.key;
+
+var ordinaryHasMetadata = function (MetadataKey, O, P) {
+  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
+  if (hasOwn) return true;
+  var parent = getPrototypeOf(O);
+  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
+};
+
+metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
+  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.immediate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.immediate.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/web.immediate.js	(date 499162500000)
@@ -0,0 +1,6 @@
+var $export = require('./_export');
+var $task = require('./_task');
+$export($export.G + $export.B, {
+  setImmediate: $task.set,
+  clearImmediate: $task.clear
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_core.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_core.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_core.js	(date 499162500000)
@@ -0,0 +1,2 @@
+var core = module.exports = { version: '2.6.5' };
+if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-metadata-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-metadata-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.reflect.get-metadata-keys.js	(date 499162500000)
@@ -0,0 +1,19 @@
+var Set = require('./es6.set');
+var from = require('./_array-from-iterable');
+var metadata = require('./_metadata');
+var anObject = require('./_an-object');
+var getPrototypeOf = require('./_object-gpo');
+var ordinaryOwnMetadataKeys = metadata.keys;
+var toMetaKey = metadata.key;
+
+var ordinaryMetadataKeys = function (O, P) {
+  var oKeys = ordinaryOwnMetadataKeys(O, P);
+  var parent = getPrototypeOf(O);
+  if (parent === null) return oKeys;
+  var pKeys = ordinaryMetadataKeys(parent, P);
+  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
+};
+
+metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
+  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
+} });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.last-index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.last-index-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.array.last-index-of.js	(date 499162500000)
@@ -0,0 +1,22 @@
+'use strict';
+var $export = require('./_export');
+var toIObject = require('./_to-iobject');
+var toInteger = require('./_to-integer');
+var toLength = require('./_to-length');
+var $native = [].lastIndexOf;
+var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
+
+$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {
+  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
+  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
+    // convert -0 to +0
+    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
+    var O = toIObject(this);
+    var length = toLength(O.length);
+    var index = length - 1;
+    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
+    if (index < 0) index = length + index;
+    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
+    return -1;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_uid.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_uid.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_uid.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var id = 0;
+var px = Math.random();
+module.exports = function (key) {
+  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-nan.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-nan.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.is-nan.js	(date 499162500000)
@@ -0,0 +1,9 @@
+// 20.1.2.4 Number.isNaN(number)
+var $export = require('./_export');
+
+$export($export.S, 'Number', {
+  isNaN: function isNaN(number) {
+    // eslint-disable-next-line no-self-compare
+    return number != number;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint32-array.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.typed.uint32-array.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('./_typed-array')('Uint32', 4, function (init) {
+  return function Uint32Array(data, byteOffset, length) {
+    return init(this, data, byteOffset, length);
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.clamp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.clamp.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.clamp.js	(date 499162500000)
@@ -0,0 +1,8 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  clamp: function clamp(x, lower, upper) {
+    return Math.min(upper, Math.max(lower, x));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.date.to-json.js	(date 499162500000)
@@ -0,0 +1,16 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+
+$export($export.P + $export.F * require('./_fails')(function () {
+  return new Date(NaN).toJSON() !== null
+    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
+}), 'Date', {
+  // eslint-disable-next-line no-unused-vars
+  toJSON: function toJSON(key) {
+    var O = toObject(this);
+    var pv = toPrimitive(O);
+    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_parse-float.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_parse-float.js	(date 499162500000)
@@ -0,0 +1,8 @@
+var $parseFloat = require('./_global').parseFloat;
+var $trim = require('./_string-trim').trim;
+
+module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
+  var string = $trim(String(str), 3);
+  var result = $parseFloat(string);
+  return result === 0 && string.charAt(0) == '-' ? -0 : result;
+} : $parseFloat;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-forced-pam.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-forced-pam.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-forced-pam.js	(date 499162500000)
@@ -0,0 +1,9 @@
+'use strict';
+// Forced replacement prototype accessors methods
+module.exports = require('./_library') || !require('./_fails')(function () {
+  var K = Math.random();
+  // In FF throws only define methods
+  // eslint-disable-next-line no-undef, no-useless-call
+  __defineSetter__.call(null, K, function () { /* empty */ });
+  delete require('./_global')[K];
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_own-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_own-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_own-keys.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// all object keys, includes non-enumerable and symbols
+var gOPN = require('./_object-gopn');
+var gOPS = require('./_object-gops');
+var anObject = require('./_an-object');
+var Reflect = require('./_global').Reflect;
+module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
+  var keys = gOPN.f(anObject(it));
+  var getSymbols = gOPS.f;
+  return getSymbols ? keys.concat(getSymbols(it)) : keys;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-absolute-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-absolute-index.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_to-absolute-index.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var toInteger = require('./_to-integer');
+var max = Math.max;
+var min = Math.min;
+module.exports = function (index, length) {
+  index = toInteger(index);
+  return index < 0 ? max(index + length, 0) : min(index, length);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-call.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-call.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iter-call.js	(date 499162500000)
@@ -0,0 +1,12 @@
+// call something on iterator step with safe closing on error
+var anObject = require('./_an-object');
+module.exports = function (iterator, fn, value, entries) {
+  try {
+    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
+  // 7.4.6 IteratorClose(iterator, completion)
+  } catch (e) {
+    var ret = iterator['return'];
+    if (ret !== undefined) anObject(ret.call(iterator));
+    throw e;
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.regexp.constructor.js	(date 499162500000)
@@ -0,0 +1,43 @@
+var global = require('./_global');
+var inheritIfRequired = require('./_inherit-if-required');
+var dP = require('./_object-dp').f;
+var gOPN = require('./_object-gopn').f;
+var isRegExp = require('./_is-regexp');
+var $flags = require('./_flags');
+var $RegExp = global.RegExp;
+var Base = $RegExp;
+var proto = $RegExp.prototype;
+var re1 = /a/g;
+var re2 = /a/g;
+// "new" creates a new object, old webkit buggy here
+var CORRECT_NEW = new $RegExp(re1) !== re1;
+
+if (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {
+  re2[require('./_wks')('match')] = false;
+  // RegExp constructor can alter flags and IsRegExp works correct with @@match
+  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
+}))) {
+  $RegExp = function RegExp(p, f) {
+    var tiRE = this instanceof $RegExp;
+    var piRE = isRegExp(p);
+    var fiU = f === undefined;
+    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
+      : inheritIfRequired(CORRECT_NEW
+        ? new Base(piRE && !fiU ? p.source : p, f)
+        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
+      , tiRE ? this : proto, $RegExp);
+  };
+  var proxy = function (key) {
+    key in $RegExp || dP($RegExp, key, {
+      configurable: true,
+      get: function () { return Base[key]; },
+      set: function (it) { Base[key] = it; }
+    });
+  };
+  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
+  proto.constructor = $RegExp;
+  $RegExp.prototype = proto;
+  require('./_redefine')(global, 'RegExp', $RegExp);
+}
+
+require('./_set-species')('RegExp');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_parse-int.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_parse-int.js	(date 499162500000)
@@ -0,0 +1,9 @@
+var $parseInt = require('./_global').parseInt;
+var $trim = require('./_string-trim').trim;
+var ws = require('./_string-ws');
+var hex = /^[-+]?0[xX]/;
+
+module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
+  var string = $trim(String(str), 3);
+  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
+} : $parseInt;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.get-own-property-descriptors.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.get-own-property-descriptors.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.get-own-property-descriptors.js	(date 499162500000)
@@ -0,0 +1,22 @@
+// https://github.com/tc39/proposal-object-getownpropertydescriptors
+var $export = require('./_export');
+var ownKeys = require('./_own-keys');
+var toIObject = require('./_to-iobject');
+var gOPD = require('./_object-gopd');
+var createProperty = require('./_create-property');
+
+$export($export.S, 'Object', {
+  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
+    var O = toIObject(object);
+    var getDesc = gOPD.f;
+    var keys = ownKeys(O);
+    var result = {};
+    var i = 0;
+    var key, desc;
+    while (keys.length > i) {
+      desc = getDesc(O, key = keys[i++]);
+      if (desc !== undefined) createProperty(result, key, desc);
+    }
+    return result;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.bold.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.bold.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.bold.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.5 String.prototype.bold()
+require('./_string-html')('bold', function (createHTML) {
+  return function bold() {
+    return createHTML(this, 'b', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.atanh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.atanh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.math.atanh.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// 20.2.2.7 Math.atanh(x)
+var $export = require('./_export');
+var $atanh = Math.atanh;
+
+// Tor Browser bug: Math.atanh(-0) -> 0
+$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
+  atanh: function atanh(x) {
+    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.big.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.big.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.big.js	(date 499162500000)
@@ -0,0 +1,7 @@
+'use strict';
+// B.2.3.3 String.prototype.big()
+require('./_string-html')('big', function (createHTML) {
+  return function big() {
+    return createHTML(this, 'big', '', '');
+  };
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-set.from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-set.from.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-set.from.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
+require('./_set-collection-from')('WeakSet');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.fscale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.fscale.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.fscale.js	(date 499162500000)
@@ -0,0 +1,10 @@
+// https://rwaldron.github.io/proposal-math-extensions/
+var $export = require('./_export');
+var scale = require('./_math-scale');
+var fround = require('./_math-fround');
+
+$export($export.S, 'Math', {
+  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
+    return fround(scale(x, inLow, inHigh, outLow, outHigh));
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.define-setter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.define-setter.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.object.define-setter.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var aFunction = require('./_a-function');
+var $defineProperty = require('./_object-dp');
+
+// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
+require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
+  __defineSetter__: function __defineSetter__(P, setter) {
+    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.object.to-string.js	(date 499162500000)
@@ -0,0 +1,10 @@
+'use strict';
+// 19.1.3.6 Object.prototype.toString()
+var classof = require('./_classof');
+var test = {};
+test[require('./_wks')('toStringTag')] = 'z';
+if (test + '' != '[object z]') {
+  require('./_redefine')(Object.prototype, 'toString', function toString() {
+    return '[object ' + classof(this) + ']';
+  }, true);
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-map.of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-map.of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.weak-map.of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
+require('./_set-collection-of')('WeakMap');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.isubh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.isubh.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.math.isubh.js	(date 499162500000)
@@ -0,0 +1,11 @@
+// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
+var $export = require('./_export');
+
+$export($export.S, 'Math', {
+  isubh: function isubh(x0, x1, y0, y1) {
+    var $x0 = x0 >>> 0;
+    var $x1 = x1 >>> 0;
+    var $y0 = y0 >>> 0;
+    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-keys-internal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-keys-internal.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-keys-internal.js	(date 499162500000)
@@ -0,0 +1,17 @@
+var has = require('./_has');
+var toIObject = require('./_to-iobject');
+var arrayIndexOf = require('./_array-includes')(false);
+var IE_PROTO = require('./_shared-key')('IE_PROTO');
+
+module.exports = function (object, names) {
+  var O = toIObject(object);
+  var i = 0;
+  var result = [];
+  var key;
+  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
+  // Don't enum bug & hidden keys
+  while (names.length > i) if (has(O, key = names[i++])) {
+    ~arrayIndexOf(result, key) || result.push(key);
+  }
+  return result;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-keys.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_object-keys.js	(date 499162500000)
@@ -0,0 +1,7 @@
+// 19.1.2.14 / 15.2.3.14 Object.keys(O)
+var $keys = require('./_object-keys-internal');
+var enumBugKeys = require('./_enum-bug-keys');
+
+module.exports = Object.keys || function keys(O) {
+  return $keys(O, enumBugKeys);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iterators.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iterators.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_iterators.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = {};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_meta.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_meta.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_meta.js	(date 499162500000)
@@ -0,0 +1,53 @@
+var META = require('./_uid')('meta');
+var isObject = require('./_is-object');
+var has = require('./_has');
+var setDesc = require('./_object-dp').f;
+var id = 0;
+var isExtensible = Object.isExtensible || function () {
+  return true;
+};
+var FREEZE = !require('./_fails')(function () {
+  return isExtensible(Object.preventExtensions({}));
+});
+var setMeta = function (it) {
+  setDesc(it, META, { value: {
+    i: 'O' + ++id, // object ID
+    w: {}          // weak collections IDs
+  } });
+};
+var fastKey = function (it, create) {
+  // return primitive with prefix
+  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
+  if (!has(it, META)) {
+    // can't set metadata to uncaught frozen object
+    if (!isExtensible(it)) return 'F';
+    // not necessary to add metadata
+    if (!create) return 'E';
+    // add missing metadata
+    setMeta(it);
+  // return object ID
+  } return it[META].i;
+};
+var getWeak = function (it, create) {
+  if (!has(it, META)) {
+    // can't set metadata to uncaught frozen object
+    if (!isExtensible(it)) return true;
+    // not necessary to add metadata
+    if (!create) return false;
+    // add missing metadata
+    setMeta(it);
+  // return hash weak collections IDs
+  } return it[META].w;
+};
+// add metadata on freeze-family methods calling
+var onFreeze = function (it) {
+  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
+  return it;
+};
+var meta = module.exports = {
+  KEY: META,
+  NEED: false,
+  fastKey: fastKey,
+  getWeak: getWeak,
+  onFreeze: onFreeze
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.includes.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.array.includes.js	(date 499162500000)
@@ -0,0 +1,12 @@
+'use strict';
+// https://github.com/tc39/Array.prototype.includes
+var $export = require('./_export');
+var $includes = require('./_array-includes')(true);
+
+$export($export.P, 'Array', {
+  includes: function includes(el /* , fromIndex = 0 */) {
+    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
+  }
+});
+
+require('./_add-to-unscopables')('includes');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.symbol.async-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.symbol.async-iterator.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.symbol.async-iterator.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_wks-define')('asyncIterator');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_task.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_task.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_task.js	(date 499162500000)
@@ -0,0 +1,84 @@
+var ctx = require('./_ctx');
+var invoke = require('./_invoke');
+var html = require('./_html');
+var cel = require('./_dom-create');
+var global = require('./_global');
+var process = global.process;
+var setTask = global.setImmediate;
+var clearTask = global.clearImmediate;
+var MessageChannel = global.MessageChannel;
+var Dispatch = global.Dispatch;
+var counter = 0;
+var queue = {};
+var ONREADYSTATECHANGE = 'onreadystatechange';
+var defer, channel, port;
+var run = function () {
+  var id = +this;
+  // eslint-disable-next-line no-prototype-builtins
+  if (queue.hasOwnProperty(id)) {
+    var fn = queue[id];
+    delete queue[id];
+    fn();
+  }
+};
+var listener = function (event) {
+  run.call(event.data);
+};
+// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
+if (!setTask || !clearTask) {
+  setTask = function setImmediate(fn) {
+    var args = [];
+    var i = 1;
+    while (arguments.length > i) args.push(arguments[i++]);
+    queue[++counter] = function () {
+      // eslint-disable-next-line no-new-func
+      invoke(typeof fn == 'function' ? fn : Function(fn), args);
+    };
+    defer(counter);
+    return counter;
+  };
+  clearTask = function clearImmediate(id) {
+    delete queue[id];
+  };
+  // Node.js 0.8-
+  if (require('./_cof')(process) == 'process') {
+    defer = function (id) {
+      process.nextTick(ctx(run, id, 1));
+    };
+  // Sphere (JS game engine) Dispatch API
+  } else if (Dispatch && Dispatch.now) {
+    defer = function (id) {
+      Dispatch.now(ctx(run, id, 1));
+    };
+  // Browsers with MessageChannel, includes WebWorkers
+  } else if (MessageChannel) {
+    channel = new MessageChannel();
+    port = channel.port2;
+    channel.port1.onmessage = listener;
+    defer = ctx(port.postMessage, port, 1);
+  // Browsers with postMessage, skip WebWorkers
+  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
+  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
+    defer = function (id) {
+      global.postMessage(id + '', '*');
+    };
+    global.addEventListener('message', listener, false);
+  // IE8-
+  } else if (ONREADYSTATECHANGE in cel('script')) {
+    defer = function (id) {
+      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
+        html.removeChild(this);
+        run.call(id);
+      };
+    };
+  // Rest old browsers
+  } else {
+    defer = function (id) {
+      setTimeout(ctx(run, id, 1), 0);
+    };
+  }
+}
+module.exports = {
+  set: setTask,
+  clear: clearTask
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_for-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_for-of.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_for-of.js	(date 499162500000)
@@ -0,0 +1,25 @@
+var ctx = require('./_ctx');
+var call = require('./_iter-call');
+var isArrayIter = require('./_is-array-iter');
+var anObject = require('./_an-object');
+var toLength = require('./_to-length');
+var getIterFn = require('./core.get-iterator-method');
+var BREAK = {};
+var RETURN = {};
+var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
+  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
+  var f = ctx(fn, that, entries ? 2 : 1);
+  var index = 0;
+  var length, step, iterator, result;
+  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
+  // fast case for arrays with default iterator
+  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
+    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
+    if (result === BREAK || result === RETURN) return result;
+  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
+    result = call(iterator, f, step.value, entries);
+    if (result === BREAK || result === RETURN) return result;
+  }
+};
+exports.BREAK = BREAK;
+exports.RETURN = RETURN;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-log1p.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-log1p.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_math-log1p.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// 20.2.2.20 Math.log1p(x)
+module.exports = Math.log1p || function log1p(x) {
+  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es7.set.to-json.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// https://github.com/DavidBruant/Map-Set.prototype.toJSON
+var $export = require('./_export');
+
+$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_cof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_cof.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_cof.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var toString = {}.toString;
+
+module.exports = function (it) {
+  return toString.call(it).slice(8, -1);
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.ends-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.ends-with.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.string.ends-with.js	(date 499162500000)
@@ -0,0 +1,20 @@
+// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
+'use strict';
+var $export = require('./_export');
+var toLength = require('./_to-length');
+var context = require('./_string-context');
+var ENDS_WITH = 'endsWith';
+var $endsWith = ''[ENDS_WITH];
+
+$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
+  endsWith: function endsWith(searchString /* , endPosition = @length */) {
+    var that = context(this, searchString, ENDS_WITH);
+    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
+    var len = toLength(that.length);
+    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
+    var search = String(searchString);
+    return $endsWith
+      ? $endsWith.call(that, search, end)
+      : that.slice(end - search.length, end) === search;
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.to-precision.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.to-precision.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/es6.number.to-precision.js	(date 499162500000)
@@ -0,0 +1,18 @@
+'use strict';
+var $export = require('./_export');
+var $fails = require('./_fails');
+var aNumberValue = require('./_a-number-value');
+var $toPrecision = 1.0.toPrecision;
+
+$export($export.P + $export.F * ($fails(function () {
+  // IE7-
+  return $toPrecision.call(1, undefined) !== '1';
+}) || !$fails(function () {
+  // V8 ~ Android 4.3-
+  $toPrecision.call({});
+})), 'Number', {
+  toPrecision: function toPrecision(precision) {
+    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
+    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fix-re-wks.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fix-re-wks.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/_fix-re-wks.js	(date 499162500000)
@@ -0,0 +1,96 @@
+'use strict';
+require('./es6.regexp.exec');
+var redefine = require('./_redefine');
+var hide = require('./_hide');
+var fails = require('./_fails');
+var defined = require('./_defined');
+var wks = require('./_wks');
+var regexpExec = require('./_regexp-exec');
+
+var SPECIES = wks('species');
+
+var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
+  // #replace needs built-in support for named groups.
+  // #match works fine because it just return the exec results, even if it has
+  // a "grops" property.
+  var re = /./;
+  re.exec = function () {
+    var result = [];
+    result.groups = { a: '7' };
+    return result;
+  };
+  return ''.replace(re, '$<a>') !== '7';
+});
+
+var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
+  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
+  var re = /(?:)/;
+  var originalExec = re.exec;
+  re.exec = function () { return originalExec.apply(this, arguments); };
+  var result = 'ab'.split(re);
+  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
+})();
+
+module.exports = function (KEY, length, exec) {
+  var SYMBOL = wks(KEY);
+
+  var DELEGATES_TO_SYMBOL = !fails(function () {
+    // String methods call symbol-named RegEp methods
+    var O = {};
+    O[SYMBOL] = function () { return 7; };
+    return ''[KEY](O) != 7;
+  });
+
+  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
+    // Symbol-named RegExp methods call .exec
+    var execCalled = false;
+    var re = /a/;
+    re.exec = function () { execCalled = true; return null; };
+    if (KEY === 'split') {
+      // RegExp[@@split] doesn't call the regex's exec method, but first creates
+      // a new one. We need to return the patched regex when creating the new one.
+      re.constructor = {};
+      re.constructor[SPECIES] = function () { return re; };
+    }
+    re[SYMBOL]('');
+    return !execCalled;
+  }) : undefined;
+
+  if (
+    !DELEGATES_TO_SYMBOL ||
+    !DELEGATES_TO_EXEC ||
+    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
+    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
+  ) {
+    var nativeRegExpMethod = /./[SYMBOL];
+    var fns = exec(
+      defined,
+      SYMBOL,
+      ''[KEY],
+      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
+        if (regexp.exec === regexpExec) {
+          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
+            // The native String method already delegates to @@method (this
+            // polyfilled function), leasing to infinite recursion.
+            // We avoid it by directly calling the native @@method method.
+            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
+          }
+          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
+        }
+        return { done: false };
+      }
+    );
+    var strfn = fns[0];
+    var rxfn = fns[1];
+
+    redefine(String.prototype, KEY, strfn);
+    hide(RegExp.prototype, SYMBOL, length == 2
+      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
+      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
+      ? function (string, arg) { return rxfn.call(string, this, arg); }
+      // 21.2.5.6 RegExp.prototype[@@match](string)
+      // 21.2.5.9 RegExp.prototype[@@search](string)
+      : function (string) { return rxfn.call(string, this); }
+    );
+  }
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.constructor.js	(date 499162500000)
@@ -0,0 +1,1 @@
+require('./_set-species')('RegExp');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_add-to-unscopables.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_add-to-unscopables.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_add-to-unscopables.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = function () { /* empty */ };
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.replace.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.replace.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.replace.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_redefine-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_redefine-all.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_redefine-all.js	(date 499162500000)
@@ -0,0 +1,7 @@
+var hide = require('./_hide');
+module.exports = function (target, src, safe) {
+  for (var key in src) {
+    if (safe && target[key]) target[key] = src[key];
+    else hide(target, key, src[key]);
+  } return target;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-primitive.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-primitive.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.number.constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.number.constructor.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.number.constructor.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_regexp-exec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_regexp-exec.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_regexp-exec.js	(date 499162500000)
@@ -0,0 +1,1 @@
+// empty
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_collection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_collection.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_collection.js	(date 499162500000)
@@ -0,0 +1,59 @@
+'use strict';
+var global = require('./_global');
+var $export = require('./_export');
+var meta = require('./_meta');
+var fails = require('./_fails');
+var hide = require('./_hide');
+var redefineAll = require('./_redefine-all');
+var forOf = require('./_for-of');
+var anInstance = require('./_an-instance');
+var isObject = require('./_is-object');
+var setToStringTag = require('./_set-to-string-tag');
+var dP = require('./_object-dp').f;
+var each = require('./_array-methods')(0);
+var DESCRIPTORS = require('./_descriptors');
+
+module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
+  var Base = global[NAME];
+  var C = Base;
+  var ADDER = IS_MAP ? 'set' : 'add';
+  var proto = C && C.prototype;
+  var O = {};
+  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
+    new C().entries().next();
+  }))) {
+    // create collection constructor
+    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
+    redefineAll(C.prototype, methods);
+    meta.NEED = true;
+  } else {
+    C = wrapper(function (target, iterable) {
+      anInstance(target, C, NAME, '_c');
+      target._c = new Base();
+      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
+    });
+    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
+      var IS_ADDER = KEY == 'add' || KEY == 'set';
+      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
+        anInstance(this, C, KEY);
+        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
+        var result = this._c[KEY](a === 0 ? 0 : a, b);
+        return IS_ADDER ? this : result;
+      });
+    });
+    IS_WEAK || dP(C.prototype, 'size', {
+      get: function () {
+        return this._c.size;
+      }
+    });
+  }
+
+  setToStringTag(C, NAME);
+
+  O[NAME] = C;
+  $export($export.G + $export.W + $export.F, O);
+
+  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
+
+  return C;
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.object.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.object.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.object.to-string.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-string.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-json.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.date.to-json.js	(date 499162500000)
@@ -0,0 +1,19 @@
+'use strict';
+var $export = require('./_export');
+var toObject = require('./_to-object');
+var toPrimitive = require('./_to-primitive');
+var toISOString = require('./_date-to-iso-string');
+var classof = require('./_classof');
+
+$export($export.P + $export.F * require('./_fails')(function () {
+  return new Date(NaN).toJSON() !== null
+    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
+}), 'Date', {
+  // eslint-disable-next-line no-unused-vars
+  toJSON: function toJSON(key) {
+    var O = toObject(this);
+    var pv = toPrimitive(O);
+    return typeof pv == 'number' && !isFinite(pv) ? null :
+      (!('toISOString' in O) && classof(O) == 'Date') ? toISOString.call(O) : O.toISOString();
+  }
+});
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.to-string.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.to-string.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.match.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.match.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_set-species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_set-species.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_set-species.js	(date 499162500000)
@@ -0,0 +1,14 @@
+'use strict';
+var global = require('./_global');
+var core = require('./_core');
+var dP = require('./_object-dp');
+var DESCRIPTORS = require('./_descriptors');
+var SPECIES = require('./_wks')('species');
+
+module.exports = function (KEY) {
+  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
+  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
+    configurable: true,
+    get: function () { return this; }
+  });
+};
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_path.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_path.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_path.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_library.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_library.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_library.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = true;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.search.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.search.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/web.dom.iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/web.dom.iterable.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/web.dom.iterable.js	(date 499162500000)
@@ -0,0 +1,19 @@
+require('./es6.array.iterator');
+var global = require('./_global');
+var hide = require('./_hide');
+var Iterators = require('./_iterators');
+var TO_STRING_TAG = require('./_wks')('toStringTag');
+
+var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
+  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
+  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
+  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
+  'TextTrackList,TouchList').split(',');
+
+for (var i = 0; i < DOMIterables.length; i++) {
+  var NAME = DOMIterables[i];
+  var Collection = global[NAME];
+  var proto = Collection && Collection.prototype;
+  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
+  Iterators[NAME] = Iterators.Array;
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.function.name.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.function.name.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.function.name.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_regexp-exec-abstract.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_regexp-exec-abstract.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_regexp-exec-abstract.js	(date 499162500000)
@@ -0,0 +1,1 @@
+// empty
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.split.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.split.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.split.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_export.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_export.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_export.js	(date 499162500000)
@@ -0,0 +1,62 @@
+var global = require('./_global');
+var core = require('./_core');
+var ctx = require('./_ctx');
+var hide = require('./_hide');
+var has = require('./_has');
+var PROTOTYPE = 'prototype';
+
+var $export = function (type, name, source) {
+  var IS_FORCED = type & $export.F;
+  var IS_GLOBAL = type & $export.G;
+  var IS_STATIC = type & $export.S;
+  var IS_PROTO = type & $export.P;
+  var IS_BIND = type & $export.B;
+  var IS_WRAP = type & $export.W;
+  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
+  var expProto = exports[PROTOTYPE];
+  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
+  var key, own, out;
+  if (IS_GLOBAL) source = name;
+  for (key in source) {
+    // contains in native
+    own = !IS_FORCED && target && target[key] !== undefined;
+    if (own && has(exports, key)) continue;
+    // export native or passed
+    out = own ? target[key] : source[key];
+    // prevent global pollution for namespaces
+    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
+    // bind timers to global for call from export context
+    : IS_BIND && own ? ctx(out, global)
+    // wrap global constructors for prevent change them in library
+    : IS_WRAP && target[key] == out ? (function (C) {
+      var F = function (a, b, c) {
+        if (this instanceof C) {
+          switch (arguments.length) {
+            case 0: return new C();
+            case 1: return new C(a);
+            case 2: return new C(a, b);
+          } return new C(a, b, c);
+        } return C.apply(this, arguments);
+      };
+      F[PROTOTYPE] = C[PROTOTYPE];
+      return F;
+    // make static versions for prototype methods
+    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
+    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
+    if (IS_PROTO) {
+      (exports.virtual || (exports.virtual = {}))[key] = out;
+      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
+      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
+    }
+  }
+};
+// type bitmap
+$export.F = 1;   // forced
+$export.G = 2;   // global
+$export.S = 4;   // static
+$export.P = 8;   // proto
+$export.B = 16;  // bind
+$export.W = 32;  // wrap
+$export.U = 64;  // safe
+$export.R = 128; // real proto method for `library`
+module.exports = $export;
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.flags.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.flags.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.flags.js	(date 499162500000)
@@ -0,0 +1,0 @@
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.exec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.exec.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/es6.regexp.exec.js	(date 499162500000)
@@ -0,0 +1,1 @@
+// empty
Index: node_modules/_core-js@2.6.5@core-js/shim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/shim.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/shim.js	(date 499162500000)
@@ -0,0 +1,198 @@
+require('./modules/es6.symbol');
+require('./modules/es6.object.create');
+require('./modules/es6.object.define-property');
+require('./modules/es6.object.define-properties');
+require('./modules/es6.object.get-own-property-descriptor');
+require('./modules/es6.object.get-prototype-of');
+require('./modules/es6.object.keys');
+require('./modules/es6.object.get-own-property-names');
+require('./modules/es6.object.freeze');
+require('./modules/es6.object.seal');
+require('./modules/es6.object.prevent-extensions');
+require('./modules/es6.object.is-frozen');
+require('./modules/es6.object.is-sealed');
+require('./modules/es6.object.is-extensible');
+require('./modules/es6.object.assign');
+require('./modules/es6.object.is');
+require('./modules/es6.object.set-prototype-of');
+require('./modules/es6.object.to-string');
+require('./modules/es6.function.bind');
+require('./modules/es6.function.name');
+require('./modules/es6.function.has-instance');
+require('./modules/es6.parse-int');
+require('./modules/es6.parse-float');
+require('./modules/es6.number.constructor');
+require('./modules/es6.number.to-fixed');
+require('./modules/es6.number.to-precision');
+require('./modules/es6.number.epsilon');
+require('./modules/es6.number.is-finite');
+require('./modules/es6.number.is-integer');
+require('./modules/es6.number.is-nan');
+require('./modules/es6.number.is-safe-integer');
+require('./modules/es6.number.max-safe-integer');
+require('./modules/es6.number.min-safe-integer');
+require('./modules/es6.number.parse-float');
+require('./modules/es6.number.parse-int');
+require('./modules/es6.math.acosh');
+require('./modules/es6.math.asinh');
+require('./modules/es6.math.atanh');
+require('./modules/es6.math.cbrt');
+require('./modules/es6.math.clz32');
+require('./modules/es6.math.cosh');
+require('./modules/es6.math.expm1');
+require('./modules/es6.math.fround');
+require('./modules/es6.math.hypot');
+require('./modules/es6.math.imul');
+require('./modules/es6.math.log10');
+require('./modules/es6.math.log1p');
+require('./modules/es6.math.log2');
+require('./modules/es6.math.sign');
+require('./modules/es6.math.sinh');
+require('./modules/es6.math.tanh');
+require('./modules/es6.math.trunc');
+require('./modules/es6.string.from-code-point');
+require('./modules/es6.string.raw');
+require('./modules/es6.string.trim');
+require('./modules/es6.string.iterator');
+require('./modules/es6.string.code-point-at');
+require('./modules/es6.string.ends-with');
+require('./modules/es6.string.includes');
+require('./modules/es6.string.repeat');
+require('./modules/es6.string.starts-with');
+require('./modules/es6.string.anchor');
+require('./modules/es6.string.big');
+require('./modules/es6.string.blink');
+require('./modules/es6.string.bold');
+require('./modules/es6.string.fixed');
+require('./modules/es6.string.fontcolor');
+require('./modules/es6.string.fontsize');
+require('./modules/es6.string.italics');
+require('./modules/es6.string.link');
+require('./modules/es6.string.small');
+require('./modules/es6.string.strike');
+require('./modules/es6.string.sub');
+require('./modules/es6.string.sup');
+require('./modules/es6.date.now');
+require('./modules/es6.date.to-json');
+require('./modules/es6.date.to-iso-string');
+require('./modules/es6.date.to-string');
+require('./modules/es6.date.to-primitive');
+require('./modules/es6.array.is-array');
+require('./modules/es6.array.from');
+require('./modules/es6.array.of');
+require('./modules/es6.array.join');
+require('./modules/es6.array.slice');
+require('./modules/es6.array.sort');
+require('./modules/es6.array.for-each');
+require('./modules/es6.array.map');
+require('./modules/es6.array.filter');
+require('./modules/es6.array.some');
+require('./modules/es6.array.every');
+require('./modules/es6.array.reduce');
+require('./modules/es6.array.reduce-right');
+require('./modules/es6.array.index-of');
+require('./modules/es6.array.last-index-of');
+require('./modules/es6.array.copy-within');
+require('./modules/es6.array.fill');
+require('./modules/es6.array.find');
+require('./modules/es6.array.find-index');
+require('./modules/es6.array.species');
+require('./modules/es6.array.iterator');
+require('./modules/es6.regexp.constructor');
+require('./modules/es6.regexp.exec');
+require('./modules/es6.regexp.to-string');
+require('./modules/es6.regexp.flags');
+require('./modules/es6.regexp.match');
+require('./modules/es6.regexp.replace');
+require('./modules/es6.regexp.search');
+require('./modules/es6.regexp.split');
+require('./modules/es6.promise');
+require('./modules/es6.map');
+require('./modules/es6.set');
+require('./modules/es6.weak-map');
+require('./modules/es6.weak-set');
+require('./modules/es6.typed.array-buffer');
+require('./modules/es6.typed.data-view');
+require('./modules/es6.typed.int8-array');
+require('./modules/es6.typed.uint8-array');
+require('./modules/es6.typed.uint8-clamped-array');
+require('./modules/es6.typed.int16-array');
+require('./modules/es6.typed.uint16-array');
+require('./modules/es6.typed.int32-array');
+require('./modules/es6.typed.uint32-array');
+require('./modules/es6.typed.float32-array');
+require('./modules/es6.typed.float64-array');
+require('./modules/es6.reflect.apply');
+require('./modules/es6.reflect.construct');
+require('./modules/es6.reflect.define-property');
+require('./modules/es6.reflect.delete-property');
+require('./modules/es6.reflect.enumerate');
+require('./modules/es6.reflect.get');
+require('./modules/es6.reflect.get-own-property-descriptor');
+require('./modules/es6.reflect.get-prototype-of');
+require('./modules/es6.reflect.has');
+require('./modules/es6.reflect.is-extensible');
+require('./modules/es6.reflect.own-keys');
+require('./modules/es6.reflect.prevent-extensions');
+require('./modules/es6.reflect.set');
+require('./modules/es6.reflect.set-prototype-of');
+require('./modules/es7.array.includes');
+require('./modules/es7.array.flat-map');
+require('./modules/es7.array.flatten');
+require('./modules/es7.string.at');
+require('./modules/es7.string.pad-start');
+require('./modules/es7.string.pad-end');
+require('./modules/es7.string.trim-left');
+require('./modules/es7.string.trim-right');
+require('./modules/es7.string.match-all');
+require('./modules/es7.symbol.async-iterator');
+require('./modules/es7.symbol.observable');
+require('./modules/es7.object.get-own-property-descriptors');
+require('./modules/es7.object.values');
+require('./modules/es7.object.entries');
+require('./modules/es7.object.define-getter');
+require('./modules/es7.object.define-setter');
+require('./modules/es7.object.lookup-getter');
+require('./modules/es7.object.lookup-setter');
+require('./modules/es7.map.to-json');
+require('./modules/es7.set.to-json');
+require('./modules/es7.map.of');
+require('./modules/es7.set.of');
+require('./modules/es7.weak-map.of');
+require('./modules/es7.weak-set.of');
+require('./modules/es7.map.from');
+require('./modules/es7.set.from');
+require('./modules/es7.weak-map.from');
+require('./modules/es7.weak-set.from');
+require('./modules/es7.global');
+require('./modules/es7.system.global');
+require('./modules/es7.error.is-error');
+require('./modules/es7.math.clamp');
+require('./modules/es7.math.deg-per-rad');
+require('./modules/es7.math.degrees');
+require('./modules/es7.math.fscale');
+require('./modules/es7.math.iaddh');
+require('./modules/es7.math.isubh');
+require('./modules/es7.math.imulh');
+require('./modules/es7.math.rad-per-deg');
+require('./modules/es7.math.radians');
+require('./modules/es7.math.scale');
+require('./modules/es7.math.umulh');
+require('./modules/es7.math.signbit');
+require('./modules/es7.promise.finally');
+require('./modules/es7.promise.try');
+require('./modules/es7.reflect.define-metadata');
+require('./modules/es7.reflect.delete-metadata');
+require('./modules/es7.reflect.get-metadata');
+require('./modules/es7.reflect.get-metadata-keys');
+require('./modules/es7.reflect.get-own-metadata');
+require('./modules/es7.reflect.get-own-metadata-keys');
+require('./modules/es7.reflect.has-metadata');
+require('./modules/es7.reflect.has-own-metadata');
+require('./modules/es7.reflect.metadata');
+require('./modules/es7.asap');
+require('./modules/es7.observable');
+require('./modules/web.timers');
+require('./modules/web.immediate');
+require('./modules/web.dom.iterable');
+module.exports = require('./modules/_core');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/package.json	(date 1553691964005)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/package.json	(date 1553691964005)
@@ -0,0 +1,21 @@
+{
+  "name": "regenerator-runtime",
+  "author": "Ben Newman <bn@cs.stanford.edu>",
+  "description": "Runtime for Regenerator-compiled generator and async functions.",
+  "version": "0.11.1",
+  "main": "runtime-module.js",
+  "keywords": [
+    "regenerator",
+    "runtime",
+    "generator",
+    "async"
+  ],
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/facebook/regenerator/tree/master/packages/regenerator-runtime"
+  },
+  "license": "MIT",
+  "__npminstall_done": "Wed Mar 27 2019 21:06:04 GMT+0800 (GMT+08:00)",
+  "_from": "regenerator-runtime@0.11.1",
+  "_resolved": "http://registry.npm.taobao.org/regenerator-runtime/download/regenerator-runtime-0.11.1.tgz"
+}
\ No newline at end of file
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/README.md	(date 1462203069000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/README.md	(date 1462203069000)
@@ -0,0 +1,31 @@
+# regenerator-runtime
+
+Standalone runtime for
+[Regenerator](https://github.com/facebook/regenerator)-compiled generator
+and `async` functions.
+
+To import the runtime as a module (recommended), either of the following
+import styles will work:
+```js
+// CommonJS
+const regeneratorRuntime = require("regenerator-runtime");
+
+// ECMAScript 2015
+import regeneratorRuntime from "regenerator-runtime";
+```
+
+To ensure that `regeneratorRuntime` is defined globally, either of the
+following styles will work:
+```js
+// CommonJS
+require("regenerator-runtime/runtime");
+
+// ECMAScript 2015
+import "regenerator-runtime/runtime";
+```
+
+To get the absolute file system path of `runtime.js`, evaluate the
+following expression:
+```js
+require("regenerator-runtime/path").path
+```
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js	(date 1512675310000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js	(date 1512675310000)
@@ -0,0 +1,35 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+// This method of obtaining a reference to the global object needs to be
+// kept identical to the way it is obtained in runtime.js
+var g = (function() { return this })() || Function("return this")();
+
+// Use `getOwnPropertyNames` because not all browsers support calling
+// `hasOwnProperty` on the global `self` object in a worker. See #183.
+var hadRuntime = g.regeneratorRuntime &&
+  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
+
+// Save the old regeneratorRuntime in case it needs to be restored later.
+var oldRuntime = hadRuntime && g.regeneratorRuntime;
+
+// Force reevalutation of runtime.js.
+g.regeneratorRuntime = undefined;
+
+module.exports = require("./runtime");
+
+if (hadRuntime) {
+  // Restore the original runtime.
+  g.regeneratorRuntime = oldRuntime;
+} else {
+  // Remove the global property added by runtime.js.
+  try {
+    delete g.regeneratorRuntime;
+  } catch(e) {
+    g.regeneratorRuntime = undefined;
+  }
+}
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js	(date 1512675310000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js	(date 1512675310000)
@@ -0,0 +1,727 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+!(function(global) {
+  "use strict";
+
+  var Op = Object.prototype;
+  var hasOwn = Op.hasOwnProperty;
+  var undefined; // More compressible than void 0.
+  var $Symbol = typeof Symbol === "function" ? Symbol : {};
+  var iteratorSymbol = $Symbol.iterator || "@@iterator";
+  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
+  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
+
+  var inModule = typeof module === "object";
+  var runtime = global.regeneratorRuntime;
+  if (runtime) {
+    if (inModule) {
+      // If regeneratorRuntime is defined globally and we're in a module,
+      // make the exports object identical to regeneratorRuntime.
+      module.exports = runtime;
+    }
+    // Don't bother evaluating the rest of this file if the runtime was
+    // already defined globally.
+    return;
+  }
+
+  // Define the runtime globally (as expected by generated code) as either
+  // module.exports (if we're in a module) or a new, empty object.
+  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
+
+  function wrap(innerFn, outerFn, self, tryLocsList) {
+    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
+    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
+    var generator = Object.create(protoGenerator.prototype);
+    var context = new Context(tryLocsList || []);
+
+    // The ._invoke method unifies the implementations of the .next,
+    // .throw, and .return methods.
+    generator._invoke = makeInvokeMethod(innerFn, self, context);
+
+    return generator;
+  }
+  runtime.wrap = wrap;
+
+  // Try/catch helper to minimize deoptimizations. Returns a completion
+  // record like context.tryEntries[i].completion. This interface could
+  // have been (and was previously) designed to take a closure to be
+  // invoked without arguments, but in all the cases we care about we
+  // already have an existing method we want to call, so there's no need
+  // to create a new function object. We can even get away with assuming
+  // the method takes exactly one argument, since that happens to be true
+  // in every case, so we don't have to touch the arguments object. The
+  // only additional allocation required is the completion record, which
+  // has a stable shape and so hopefully should be cheap to allocate.
+  function tryCatch(fn, obj, arg) {
+    try {
+      return { type: "normal", arg: fn.call(obj, arg) };
+    } catch (err) {
+      return { type: "throw", arg: err };
+    }
+  }
+
+  var GenStateSuspendedStart = "suspendedStart";
+  var GenStateSuspendedYield = "suspendedYield";
+  var GenStateExecuting = "executing";
+  var GenStateCompleted = "completed";
+
+  // Returning this object from the innerFn has the same effect as
+  // breaking out of the dispatch switch statement.
+  var ContinueSentinel = {};
+
+  // Dummy constructor functions that we use as the .constructor and
+  // .constructor.prototype properties for functions that return Generator
+  // objects. For full spec compliance, you may wish to configure your
+  // minifier not to mangle the names of these two functions.
+  function Generator() {}
+  function GeneratorFunction() {}
+  function GeneratorFunctionPrototype() {}
+
+  // This is a polyfill for %IteratorPrototype% for environments that
+  // don't natively support it.
+  var IteratorPrototype = {};
+  IteratorPrototype[iteratorSymbol] = function () {
+    return this;
+  };
+
+  var getProto = Object.getPrototypeOf;
+  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
+  if (NativeIteratorPrototype &&
+      NativeIteratorPrototype !== Op &&
+      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
+    // This environment has a native %IteratorPrototype%; use it instead
+    // of the polyfill.
+    IteratorPrototype = NativeIteratorPrototype;
+  }
+
+  var Gp = GeneratorFunctionPrototype.prototype =
+    Generator.prototype = Object.create(IteratorPrototype);
+  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
+  GeneratorFunctionPrototype.constructor = GeneratorFunction;
+  GeneratorFunctionPrototype[toStringTagSymbol] =
+    GeneratorFunction.displayName = "GeneratorFunction";
+
+  // Helper for defining the .next, .throw, and .return methods of the
+  // Iterator interface in terms of a single ._invoke method.
+  function defineIteratorMethods(prototype) {
+    ["next", "throw", "return"].forEach(function(method) {
+      prototype[method] = function(arg) {
+        return this._invoke(method, arg);
+      };
+    });
+  }
+
+  runtime.isGeneratorFunction = function(genFun) {
+    var ctor = typeof genFun === "function" && genFun.constructor;
+    return ctor
+      ? ctor === GeneratorFunction ||
+        // For the native GeneratorFunction constructor, the best we can
+        // do is to check its .name property.
+        (ctor.displayName || ctor.name) === "GeneratorFunction"
+      : false;
+  };
+
+  runtime.mark = function(genFun) {
+    if (Object.setPrototypeOf) {
+      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
+    } else {
+      genFun.__proto__ = GeneratorFunctionPrototype;
+      if (!(toStringTagSymbol in genFun)) {
+        genFun[toStringTagSymbol] = "GeneratorFunction";
+      }
+    }
+    genFun.prototype = Object.create(Gp);
+    return genFun;
+  };
+
+  // Within the body of any async function, `await x` is transformed to
+  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
+  // `hasOwn.call(value, "__await")` to determine if the yielded value is
+  // meant to be awaited.
+  runtime.awrap = function(arg) {
+    return { __await: arg };
+  };
+
+  function AsyncIterator(generator) {
+    function invoke(method, arg, resolve, reject) {
+      var record = tryCatch(generator[method], generator, arg);
+      if (record.type === "throw") {
+        reject(record.arg);
+      } else {
+        var result = record.arg;
+        var value = result.value;
+        if (value &&
+            typeof value === "object" &&
+            hasOwn.call(value, "__await")) {
+          return Promise.resolve(value.__await).then(function(value) {
+            invoke("next", value, resolve, reject);
+          }, function(err) {
+            invoke("throw", err, resolve, reject);
+          });
+        }
+
+        return Promise.resolve(value).then(function(unwrapped) {
+          // When a yielded Promise is resolved, its final value becomes
+          // the .value of the Promise<{value,done}> result for the
+          // current iteration. If the Promise is rejected, however, the
+          // result for this iteration will be rejected with the same
+          // reason. Note that rejections of yielded Promises are not
+          // thrown back into the generator function, as is the case
+          // when an awaited Promise is rejected. This difference in
+          // behavior between yield and await is important, because it
+          // allows the consumer to decide what to do with the yielded
+          // rejection (swallow it and continue, manually .throw it back
+          // into the generator, abandon iteration, whatever). With
+          // await, by contrast, there is no opportunity to examine the
+          // rejection reason outside the generator function, so the
+          // only option is to throw it from the await expression, and
+          // let the generator function handle the exception.
+          result.value = unwrapped;
+          resolve(result);
+        }, reject);
+      }
+    }
+
+    var previousPromise;
+
+    function enqueue(method, arg) {
+      function callInvokeWithMethodAndArg() {
+        return new Promise(function(resolve, reject) {
+          invoke(method, arg, resolve, reject);
+        });
+      }
+
+      return previousPromise =
+        // If enqueue has been called before, then we want to wait until
+        // all previous Promises have been resolved before calling invoke,
+        // so that results are always delivered in the correct order. If
+        // enqueue has not been called before, then it is important to
+        // call invoke immediately, without waiting on a callback to fire,
+        // so that the async generator function has the opportunity to do
+        // any necessary setup in a predictable way. This predictability
+        // is why the Promise constructor synchronously invokes its
+        // executor callback, and why async functions synchronously
+        // execute code before the first await. Since we implement simple
+        // async functions in terms of async generators, it is especially
+        // important to get this right, even though it requires care.
+        previousPromise ? previousPromise.then(
+          callInvokeWithMethodAndArg,
+          // Avoid propagating failures to Promises returned by later
+          // invocations of the iterator.
+          callInvokeWithMethodAndArg
+        ) : callInvokeWithMethodAndArg();
+    }
+
+    // Define the unified helper method that is used to implement .next,
+    // .throw, and .return (see defineIteratorMethods).
+    this._invoke = enqueue;
+  }
+
+  defineIteratorMethods(AsyncIterator.prototype);
+  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
+    return this;
+  };
+  runtime.AsyncIterator = AsyncIterator;
+
+  // Note that simple async functions are implemented on top of
+  // AsyncIterator objects; they just return a Promise for the value of
+  // the final result produced by the iterator.
+  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
+    var iter = new AsyncIterator(
+      wrap(innerFn, outerFn, self, tryLocsList)
+    );
+
+    return runtime.isGeneratorFunction(outerFn)
+      ? iter // If outerFn is a generator, return the full iterator.
+      : iter.next().then(function(result) {
+          return result.done ? result.value : iter.next();
+        });
+  };
+
+  function makeInvokeMethod(innerFn, self, context) {
+    var state = GenStateSuspendedStart;
+
+    return function invoke(method, arg) {
+      if (state === GenStateExecuting) {
+        throw new Error("Generator is already running");
+      }
+
+      if (state === GenStateCompleted) {
+        if (method === "throw") {
+          throw arg;
+        }
+
+        // Be forgiving, per 25.3.3.3.3 of the spec:
+        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
+        return doneResult();
+      }
+
+      context.method = method;
+      context.arg = arg;
+
+      while (true) {
+        var delegate = context.delegate;
+        if (delegate) {
+          var delegateResult = maybeInvokeDelegate(delegate, context);
+          if (delegateResult) {
+            if (delegateResult === ContinueSentinel) continue;
+            return delegateResult;
+          }
+        }
+
+        if (context.method === "next") {
+          // Setting context._sent for legacy support of Babel's
+          // function.sent implementation.
+          context.sent = context._sent = context.arg;
+
+        } else if (context.method === "throw") {
+          if (state === GenStateSuspendedStart) {
+            state = GenStateCompleted;
+            throw context.arg;
+          }
+
+          context.dispatchException(context.arg);
+
+        } else if (context.method === "return") {
+          context.abrupt("return", context.arg);
+        }
+
+        state = GenStateExecuting;
+
+        var record = tryCatch(innerFn, self, context);
+        if (record.type === "normal") {
+          // If an exception is thrown from innerFn, we leave state ===
+          // GenStateExecuting and loop back for another invocation.
+          state = context.done
+            ? GenStateCompleted
+            : GenStateSuspendedYield;
+
+          if (record.arg === ContinueSentinel) {
+            continue;
+          }
+
+          return {
+            value: record.arg,
+            done: context.done
+          };
+
+        } else if (record.type === "throw") {
+          state = GenStateCompleted;
+          // Dispatch the exception by looping back around to the
+          // context.dispatchException(context.arg) call above.
+          context.method = "throw";
+          context.arg = record.arg;
+        }
+      }
+    };
+  }
+
+  // Call delegate.iterator[context.method](context.arg) and handle the
+  // result, either by returning a { value, done } result from the
+  // delegate iterator, or by modifying context.method and context.arg,
+  // setting context.delegate to null, and returning the ContinueSentinel.
+  function maybeInvokeDelegate(delegate, context) {
+    var method = delegate.iterator[context.method];
+    if (method === undefined) {
+      // A .throw or .return when the delegate iterator has no .throw
+      // method always terminates the yield* loop.
+      context.delegate = null;
+
+      if (context.method === "throw") {
+        if (delegate.iterator.return) {
+          // If the delegate iterator has a return method, give it a
+          // chance to clean up.
+          context.method = "return";
+          context.arg = undefined;
+          maybeInvokeDelegate(delegate, context);
+
+          if (context.method === "throw") {
+            // If maybeInvokeDelegate(context) changed context.method from
+            // "return" to "throw", let that override the TypeError below.
+            return ContinueSentinel;
+          }
+        }
+
+        context.method = "throw";
+        context.arg = new TypeError(
+          "The iterator does not provide a 'throw' method");
+      }
+
+      return ContinueSentinel;
+    }
+
+    var record = tryCatch(method, delegate.iterator, context.arg);
+
+    if (record.type === "throw") {
+      context.method = "throw";
+      context.arg = record.arg;
+      context.delegate = null;
+      return ContinueSentinel;
+    }
+
+    var info = record.arg;
+
+    if (! info) {
+      context.method = "throw";
+      context.arg = new TypeError("iterator result is not an object");
+      context.delegate = null;
+      return ContinueSentinel;
+    }
+
+    if (info.done) {
+      // Assign the result of the finished delegate to the temporary
+      // variable specified by delegate.resultName (see delegateYield).
+      context[delegate.resultName] = info.value;
+
+      // Resume execution at the desired location (see delegateYield).
+      context.next = delegate.nextLoc;
+
+      // If context.method was "throw" but the delegate handled the
+      // exception, let the outer generator proceed normally. If
+      // context.method was "next", forget context.arg since it has been
+      // "consumed" by the delegate iterator. If context.method was
+      // "return", allow the original .return call to continue in the
+      // outer generator.
+      if (context.method !== "return") {
+        context.method = "next";
+        context.arg = undefined;
+      }
+
+    } else {
+      // Re-yield the result returned by the delegate method.
+      return info;
+    }
+
+    // The delegate iterator is finished, so forget it and continue with
+    // the outer generator.
+    context.delegate = null;
+    return ContinueSentinel;
+  }
+
+  // Define Generator.prototype.{next,throw,return} in terms of the
+  // unified ._invoke helper method.
+  defineIteratorMethods(Gp);
+
+  Gp[toStringTagSymbol] = "Generator";
+
+  // A Generator should always return itself as the iterator object when the
+  // @@iterator function is called on it. Some browsers' implementations of the
+  // iterator prototype chain incorrectly implement this, causing the Generator
+  // object to not be returned from this call. This ensures that doesn't happen.
+  // See https://github.com/facebook/regenerator/issues/274 for more details.
+  Gp[iteratorSymbol] = function() {
+    return this;
+  };
+
+  Gp.toString = function() {
+    return "[object Generator]";
+  };
+
+  function pushTryEntry(locs) {
+    var entry = { tryLoc: locs[0] };
+
+    if (1 in locs) {
+      entry.catchLoc = locs[1];
+    }
+
+    if (2 in locs) {
+      entry.finallyLoc = locs[2];
+      entry.afterLoc = locs[3];
+    }
+
+    this.tryEntries.push(entry);
+  }
+
+  function resetTryEntry(entry) {
+    var record = entry.completion || {};
+    record.type = "normal";
+    delete record.arg;
+    entry.completion = record;
+  }
+
+  function Context(tryLocsList) {
+    // The root entry object (effectively a try statement without a catch
+    // or a finally block) gives us a place to store values thrown from
+    // locations where there is no enclosing try statement.
+    this.tryEntries = [{ tryLoc: "root" }];
+    tryLocsList.forEach(pushTryEntry, this);
+    this.reset(true);
+  }
+
+  runtime.keys = function(object) {
+    var keys = [];
+    for (var key in object) {
+      keys.push(key);
+    }
+    keys.reverse();
+
+    // Rather than returning an object with a next method, we keep
+    // things simple and return the next function itself.
+    return function next() {
+      while (keys.length) {
+        var key = keys.pop();
+        if (key in object) {
+          next.value = key;
+          next.done = false;
+          return next;
+        }
+      }
+
+      // To avoid creating an additional object, we just hang the .value
+      // and .done properties off the next function object itself. This
+      // also ensures that the minifier will not anonymize the function.
+      next.done = true;
+      return next;
+    };
+  };
+
+  function values(iterable) {
+    if (iterable) {
+      var iteratorMethod = iterable[iteratorSymbol];
+      if (iteratorMethod) {
+        return iteratorMethod.call(iterable);
+      }
+
+      if (typeof iterable.next === "function") {
+        return iterable;
+      }
+
+      if (!isNaN(iterable.length)) {
+        var i = -1, next = function next() {
+          while (++i < iterable.length) {
+            if (hasOwn.call(iterable, i)) {
+              next.value = iterable[i];
+              next.done = false;
+              return next;
+            }
+          }
+
+          next.value = undefined;
+          next.done = true;
+
+          return next;
+        };
+
+        return next.next = next;
+      }
+    }
+
+    // Return an iterator with no values.
+    return { next: doneResult };
+  }
+  runtime.values = values;
+
+  function doneResult() {
+    return { value: undefined, done: true };
+  }
+
+  Context.prototype = {
+    constructor: Context,
+
+    reset: function(skipTempReset) {
+      this.prev = 0;
+      this.next = 0;
+      // Resetting context._sent for legacy support of Babel's
+      // function.sent implementation.
+      this.sent = this._sent = undefined;
+      this.done = false;
+      this.delegate = null;
+
+      this.method = "next";
+      this.arg = undefined;
+
+      this.tryEntries.forEach(resetTryEntry);
+
+      if (!skipTempReset) {
+        for (var name in this) {
+          // Not sure about the optimal order of these conditions:
+          if (name.charAt(0) === "t" &&
+              hasOwn.call(this, name) &&
+              !isNaN(+name.slice(1))) {
+            this[name] = undefined;
+          }
+        }
+      }
+    },
+
+    stop: function() {
+      this.done = true;
+
+      var rootEntry = this.tryEntries[0];
+      var rootRecord = rootEntry.completion;
+      if (rootRecord.type === "throw") {
+        throw rootRecord.arg;
+      }
+
+      return this.rval;
+    },
+
+    dispatchException: function(exception) {
+      if (this.done) {
+        throw exception;
+      }
+
+      var context = this;
+      function handle(loc, caught) {
+        record.type = "throw";
+        record.arg = exception;
+        context.next = loc;
+
+        if (caught) {
+          // If the dispatched exception was caught by a catch block,
+          // then let that catch block handle the exception normally.
+          context.method = "next";
+          context.arg = undefined;
+        }
+
+        return !! caught;
+      }
+
+      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
+        var entry = this.tryEntries[i];
+        var record = entry.completion;
+
+        if (entry.tryLoc === "root") {
+          // Exception thrown outside of any try block that could handle
+          // it, so set the completion value of the entire function to
+          // throw the exception.
+          return handle("end");
+        }
+
+        if (entry.tryLoc <= this.prev) {
+          var hasCatch = hasOwn.call(entry, "catchLoc");
+          var hasFinally = hasOwn.call(entry, "finallyLoc");
+
+          if (hasCatch && hasFinally) {
+            if (this.prev < entry.catchLoc) {
+              return handle(entry.catchLoc, true);
+            } else if (this.prev < entry.finallyLoc) {
+              return handle(entry.finallyLoc);
+            }
+
+          } else if (hasCatch) {
+            if (this.prev < entry.catchLoc) {
+              return handle(entry.catchLoc, true);
+            }
+
+          } else if (hasFinally) {
+            if (this.prev < entry.finallyLoc) {
+              return handle(entry.finallyLoc);
+            }
+
+          } else {
+            throw new Error("try statement without catch or finally");
+          }
+        }
+      }
+    },
+
+    abrupt: function(type, arg) {
+      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
+        var entry = this.tryEntries[i];
+        if (entry.tryLoc <= this.prev &&
+            hasOwn.call(entry, "finallyLoc") &&
+            this.prev < entry.finallyLoc) {
+          var finallyEntry = entry;
+          break;
+        }
+      }
+
+      if (finallyEntry &&
+          (type === "break" ||
+           type === "continue") &&
+          finallyEntry.tryLoc <= arg &&
+          arg <= finallyEntry.finallyLoc) {
+        // Ignore the finally entry if control is not jumping to a
+        // location outside the try/catch block.
+        finallyEntry = null;
+      }
+
+      var record = finallyEntry ? finallyEntry.completion : {};
+      record.type = type;
+      record.arg = arg;
+
+      if (finallyEntry) {
+        this.method = "next";
+        this.next = finallyEntry.finallyLoc;
+        return ContinueSentinel;
+      }
+
+      return this.complete(record);
+    },
+
+    complete: function(record, afterLoc) {
+      if (record.type === "throw") {
+        throw record.arg;
+      }
+
+      if (record.type === "break" ||
+          record.type === "continue") {
+        this.next = record.arg;
+      } else if (record.type === "return") {
+        this.rval = this.arg = record.arg;
+        this.method = "return";
+        this.next = "end";
+      } else if (record.type === "normal" && afterLoc) {
+        this.next = afterLoc;
+      }
+
+      return ContinueSentinel;
+    },
+
+    finish: function(finallyLoc) {
+      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
+        var entry = this.tryEntries[i];
+        if (entry.finallyLoc === finallyLoc) {
+          this.complete(entry.completion, entry.afterLoc);
+          resetTryEntry(entry);
+          return ContinueSentinel;
+        }
+      }
+    },
+
+    "catch": function(tryLoc) {
+      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
+        var entry = this.tryEntries[i];
+        if (entry.tryLoc === tryLoc) {
+          var record = entry.completion;
+          if (record.type === "throw") {
+            var thrown = record.arg;
+            resetTryEntry(entry);
+          }
+          return thrown;
+        }
+      }
+
+      // The context.catch method must only be called with a location
+      // argument that corresponds to a known catch block.
+      throw new Error("illegal catch attempt");
+    },
+
+    delegateYield: function(iterable, resultName, nextLoc) {
+      this.delegate = {
+        iterator: values(iterable),
+        resultName: resultName,
+        nextLoc: nextLoc
+      };
+
+      if (this.method === "next") {
+        // Deliberately forget the last sent value so that we don't
+        // accidentally pass it on to the delegate.
+        this.arg = undefined;
+      }
+
+      return ContinueSentinel;
+    }
+  };
+})(
+  // In sloppy mode, unbound `this` refers to the global object, fallback to
+  // Function constructor if we're in global strict mode. That is sadly a form
+  // of indirect eval which violates Content Security Policy.
+  (function() { return this })() || Function("return this")()
+);
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_redefine.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_redefine.js	(date 499162500000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/core-js/modules/library/_redefine.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('./_hide');
Index: node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/path.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/path.js	(date 1512675310000)
+++ node_modules/_async-validator@1.8.5@async-validator/node_modules/babel-runtime/node_modules/regenerator-runtime/path.js	(date 1512675310000)
@@ -0,0 +1,11 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+exports.path = require("path").join(
+  __dirname,
+  "runtime.js"
+);
Index: node_modules/_core-js@2.6.5@core-js/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/README.md	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/README.md	(date 499162500000)
@@ -0,0 +1,2289 @@
+# core-js
+
+[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/zloirock/core-js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![version](https://img.shields.io/npm/v/core-js.svg)](https://www.npmjs.com/package/core-js) [![npm downloads](https://img.shields.io/npm/dm/core-js.svg)](http://npm-stat.com/charts.html?package=core-js&author=&from=2014-11-18) [![Build Status](https://travis-ci.org/zloirock/core-js.svg)](https://travis-ci.org/zloirock/core-js) [![devDependency status](https://david-dm.org/zloirock/core-js/dev-status.svg)](https://david-dm.org/zloirock/core-js?type=dev)
+#### As advertising: the author is looking for a good job :)
+
+Modular standard library for JavaScript. Includes polyfills for [ECMAScript 5](#ecmascript-5), [ECMAScript 6](#ecmascript-6): [promises](#ecmascript-6-promise), [symbols](#ecmascript-6-symbol), [collections](#ecmascript-6-collections), iterators, [typed arrays](#ecmascript-6-typed-arrays), [ECMAScript 7+ proposals](#ecmascript-7-proposals), [setImmediate](#setimmediate), etc. Some additional features such as [dictionaries](#dict) or [extended partial application](#partial-application). You can require only needed features or use it without global namespace pollution.
+
+[*Example*](http://goo.gl/a2xexl):
+```js
+Array.from(new Set([1, 2, 3, 2, 1]));          // => [1, 2, 3]
+'*'.repeat(10);                                // => '**********'
+Promise.resolve(32).then(x => console.log(x)); // => 32
+setImmediate(x => console.log(x), 42);         // => 42
+```
+
+[*Without global namespace pollution*](http://goo.gl/paOHb0):
+```js
+var core = require('core-js/library'); // With a modular system, otherwise use global `core`
+core.Array.from(new core.Set([1, 2, 3, 2, 1]));     // => [1, 2, 3]
+core.String.repeat('*', 10);                        // => '**********'
+core.Promise.resolve(32).then(x => console.log(x)); // => 32
+core.setImmediate(x => console.log(x), 42);         // => 42
+```
+
+### Index
+- [Usage](#usage)
+  - [Basic](#basic)
+  - [CommonJS](#commonjs)
+  - [Custom build](#custom-build-from-the-command-line)
+- [Supported engines](#supported-engines)
+- [Features](#features)
+  - [ECMAScript 5](#ecmascript-5)
+  - [ECMAScript 6](#ecmascript-6)
+    - [ECMAScript 6: Object](#ecmascript-6-object)
+    - [ECMAScript 6: Function](#ecmascript-6-function)
+    - [ECMAScript 6: Array](#ecmascript-6-array)
+    - [ECMAScript 6: String](#ecmascript-6-string)
+    - [ECMAScript 6: RegExp](#ecmascript-6-regexp)
+    - [ECMAScript 6: Number](#ecmascript-6-number)
+    - [ECMAScript 6: Math](#ecmascript-6-math)
+    - [ECMAScript 6: Date](#ecmascript-6-date)
+    - [ECMAScript 6: Promise](#ecmascript-6-promise)
+    - [ECMAScript 6: Symbol](#ecmascript-6-symbol)
+    - [ECMAScript 6: Collections](#ecmascript-6-collections)
+    - [ECMAScript 6: Typed Arrays](#ecmascript-6-typed-arrays)
+    - [ECMAScript 6: Reflect](#ecmascript-6-reflect)
+  - [ECMAScript 7+ proposals](#ecmascript-7-proposals)
+    - [stage 4 proposals](#stage-4-proposals)
+    - [stage 3 proposals](#stage-3-proposals)
+    - [stage 2 proposals](#stage-2-proposals)
+    - [stage 1 proposals](#stage-1-proposals)
+    - [stage 0 proposals](#stage-0-proposals)
+    - [pre-stage 0 proposals](#pre-stage-0-proposals)
+  - [Web standards](#web-standards)
+    - [setTimeout / setInterval](#settimeout--setinterval)
+    - [setImmediate](#setimmediate)
+    - [iterable DOM collections](#iterable-dom-collections)
+  - [Non-standard](#non-standard)
+    - [Object](#object)
+    - [Dict](#dict)
+    - [partial application](#partial-application)
+    - [Number Iterator](#number-iterator)
+    - [escaping strings](#escaping-strings)
+    - [delay](#delay)
+    - [helpers for iterators](#helpers-for-iterators)
+- [Missing polyfills](#missing-polyfills)
+- [Changelog](./CHANGELOG.md)
+
+## Usage
+### Basic
+```
+npm i core-js
+bower install core.js
+```
+
+```js
+// Default
+require('core-js');
+// Without global namespace pollution
+var core = require('core-js/library');
+// Shim only
+require('core-js/shim');
+```
+If you need complete build for browser, use builds from `core-js/client` path:  
+
+* [default](https://raw.githack.com/zloirock/core-js/v2.6.5/client/core.min.js): Includes all features, standard and non-standard.
+* [as a library](https://raw.githack.com/zloirock/core-js/v2.6.5/client/library.min.js): Like "default", but does not pollute the global namespace (see [2nd example at the top](#core-js)).
+* [shim only](https://raw.githack.com/zloirock/core-js/v2.6.5/client/shim.min.js): Only includes the standard methods.
+
+Warning: if you use `core-js` with the extension of native objects, require all needed `core-js` modules at the beginning of entry point of your application, otherwise, conflicts may occur.
+
+### CommonJS
+You can require only needed modules.
+
+```js
+require('core-js/fn/set');
+require('core-js/fn/array/from');
+require('core-js/fn/array/find-index');
+Array.from(new Set([1, 2, 3, 2, 1])); // => [1, 2, 3]
+[1, 2, NaN, 3, 4].findIndex(isNaN);   // => 2
+
+// or, w/o global namespace pollution:
+
+var Set       = require('core-js/library/fn/set');
+var from      = require('core-js/library/fn/array/from');
+var findIndex = require('core-js/library/fn/array/find-index');
+from(new Set([1, 2, 3, 2, 1]));      // => [1, 2, 3]
+findIndex([1, 2, NaN, 3, 4], isNaN); // => 2
+```
+Available entry points for methods / constructors, as above examples, and namespaces: for example, `core-js/es6/array` (`core-js/library/es6/array`) contains all [ES6 `Array` features](#ecmascript-6-array), `core-js/es6` (`core-js/library/es6`) contains all ES6 features.
+
+##### Caveats when using CommonJS API:
+
+* `modules` path is internal API, does not inject all required dependencies and can be changed in minor or patch releases. Use it only for a custom build and / or if you know what are you doing.
+* `core-js` is extremely modular and uses a lot of very tiny modules, because of that for usage in browsers bundle up `core-js` instead of usage loader for each file, otherwise, you will have hundreds of requests.
+
+#### CommonJS and prototype methods without global namespace pollution
+In the `library` version, we can't pollute prototypes of native constructors. Because of that, prototype methods transformed to static methods like in examples above. `babel` `runtime` transformer also can't transform them. But with transpilers we can use one more trick - [bind operator and virtual methods](https://github.com/zenparsing/es-function-bind). Special for that, available `/virtual/` entry points. Example:
+```js
+import fill from 'core-js/library/fn/array/virtual/fill';
+import findIndex from 'core-js/library/fn/array/virtual/find-index';
+
+Array(10)::fill(0).map((a, b) => b * b)::findIndex(it => it && !(it % 8)); // => 4
+
+// or
+
+import {fill, findIndex} from 'core-js/library/fn/array/virtual';
+
+Array(10)::fill(0).map((a, b) => b * b)::findIndex(it => it && !(it % 8)); // => 4
+
+```
+
+### Custom build (from the command-line)
+```
+npm i core-js && cd node_modules/core-js && npm i
+npm run grunt build:core.dict,es6 -- --blacklist=es6.promise,es6.math --library=on --path=custom uglify
+```
+Where `core.dict` and `es6` are modules (namespaces) names, which will be added to the build, `es6.promise` and `es6.math` are modules (namespaces) names, which will be excluded from the build, `--library=on` is flag for build without global namespace pollution and `custom` is target file name.
+
+Available namespaces: for example, `es6.array` contains [ES6 `Array` features](#ecmascript-6-array), `es6` contains all modules whose names start with `es6`.
+
+### Custom build (from external scripts)
+
+[`core-js-builder`](https://www.npmjs.com/package/core-js-builder) package exports a function that takes the same parameters as the `build` target from the previous section. This will conditionally include or exclude certain parts of `core-js`:
+
+```js
+require('core-js-builder')({
+  modules: ['es6', 'core.dict'], // modules / namespaces
+  blacklist: ['es6.reflect'],    // blacklist of modules / namespaces, by default - empty list
+  library: false,                // flag for build without global namespace pollution, by default - false
+  umd: true                      // use UMD wrapper for export `core` object, by default - true
+}).then(code => {
+  // ...
+}).catch(error => {
+  // ...
+});
+```
+## Supported engines
+**Tested in:**
+- Chrome 26+
+- Firefox 4+
+- Safari 5+
+- Opera 12+
+- Internet Explorer 6+ (sure, IE8- with ES3 limitations)
+- Edge
+- Android Browser 2.3+
+- iOS Safari 5.1+
+- PhantomJS 1.9 / 2.1
+- NodeJS 0.8+
+
+...and it doesn't mean `core-js` will not work in other engines, they just have not been tested.
+
+## Features:
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)       <- all features
+core-js(/library)/shim  <- only polyfills
+```
+### ECMAScript 5
+All features moved to the [`es6` namespace](#ecmascript-6), here just a list of features:
+```js
+Object
+  .create(proto | null, descriptors?)    -> object
+  .getPrototypeOf(object)                -> proto | null
+  .defineProperty(target, key, desc)     -> target, cap for ie8-
+  .defineProperties(target, descriptors) -> target, cap for ie8-
+  .getOwnPropertyDescriptor(object, key) -> desc
+  .getOwnPropertyNames(object)           -> array
+  .keys(object)                          -> array
+  .seal(object)                          -> object, cap for ie8-
+  .freeze(object)                        -> object, cap for ie8-
+  .preventExtensions(object)             -> object, cap for ie8-
+  .isSealed(object)                      -> bool, cap for ie8-
+  .isFrozen(object)                      -> bool, cap for ie8-
+  .isExtensible(object)                  -> bool, cap for ie8-
+Array
+  .isArray(var)                                -> bool
+  #slice(start?, end?)                         -> array, fix for ie7-
+  #join(string = ',')                          -> string, fix for ie7-
+  #indexOf(var, from?)                         -> int
+  #lastIndexOf(var, from?)                     -> int
+  #every(fn(val, index, @), that)              -> bool
+  #some(fn(val, index, @), that)               -> bool
+  #forEach(fn(val, index, @), that)            -> void
+  #map(fn(val, index, @), that)                -> array
+  #filter(fn(val, index, @), that)             -> array
+  #reduce(fn(memo, val, index, @), memo?)      -> var
+  #reduceRight(fn(memo, val, index, @), memo?) -> var
+  #sort(fn?)                                   -> @, fixes for some engines
+Function
+  #bind(object, ...args) -> boundFn(...args)
+String
+  #split(separator, limit) -> array
+  #trim()                  -> str
+RegExp
+  #toString() -> str
+Number
+  #toFixed(digits)        -> string
+  #toPrecision(precision) -> string
+parseInt(str, radix) -> int
+parseFloat(str)      -> num
+Date
+  .now()         -> int
+  #toISOString() -> string
+  #toJSON()      -> string
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es5
+```
+
+### ECMAScript 6
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6
+```
+#### ECMAScript 6: Object
+Modules [`es6.object.assign`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.assign.js), [`es6.object.is`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.is.js), [`es6.object.set-prototype-of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.set-prototype-of.js) and [`es6.object.to-string`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.to-string.js).
+
+In ES6 most `Object` static methods should work with primitives. Modules [`es6.object.freeze`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.freeze.js), [`es6.object.seal`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.seal.js), [`es6.object.prevent-extensions`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.prevent-extensions.js), [`es6.object.is-frozen`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.is-frozen.js), [`es6.object.is-sealed`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.is-sealed.js), [`es6.object.is-extensible`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.is-extensible.js), [`es6.object.get-own-property-descriptor`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.get-own-property-descriptor.js), [`es6.object.get-prototype-of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.get-prototype-of.js), [`es6.object.keys`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.keys.js) and [`es6.object.get-own-property-names`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.get-own-property-names.js).
+
+Just ES5 features: [`es6.object.create`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.create.js), [`es6.object.define-property`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.define-property.js) and [`es6.object.define-properties`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.object.es6.object.define-properties.js).
+```js
+Object
+  .assign(target, ...src)                -> target
+  .is(a, b)                              -> bool
+  .setPrototypeOf(target, proto | null)  -> target (required __proto__ - IE11+)
+  .create(object | null, descriptors?)   -> object
+  .getPrototypeOf(var)                   -> object | null
+  .defineProperty(object, key, desc)     -> target
+  .defineProperties(object, descriptors) -> target
+  .getOwnPropertyDescriptor(var, key)    -> desc | undefined
+  .keys(var)                             -> array
+  .getOwnPropertyNames(var)              -> array
+  .freeze(var)                           -> var
+  .seal(var)                             -> var
+  .preventExtensions(var)                -> var
+  .isFrozen(var)                         -> bool
+  .isSealed(var)                         -> bool
+  .isExtensible(var)                     -> bool
+  #toString()                            -> string, ES6 fix: @@toStringTag support
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/object
+core-js(/library)/fn/object/assign
+core-js(/library)/fn/object/is
+core-js(/library)/fn/object/set-prototype-of
+core-js(/library)/fn/object/get-prototype-of
+core-js(/library)/fn/object/create
+core-js(/library)/fn/object/define-property
+core-js(/library)/fn/object/define-properties
+core-js(/library)/fn/object/get-own-property-descriptor
+core-js(/library)/fn/object/keys
+core-js(/library)/fn/object/get-own-property-names
+core-js(/library)/fn/object/freeze
+core-js(/library)/fn/object/seal
+core-js(/library)/fn/object/prevent-extensions
+core-js(/library)/fn/object/is-frozen
+core-js(/library)/fn/object/is-sealed
+core-js(/library)/fn/object/is-extensible
+core-js/fn/object/to-string
+```
+[*Examples*](http://goo.gl/ywdwPz):
+```js
+var foo = {q: 1, w: 2}
+  , bar = {e: 3, r: 4}
+  , baz = {t: 5, y: 6};
+Object.assign(foo, bar, baz); // => foo = {q: 1, w: 2, e: 3, r: 4, t: 5, y: 6}
+
+Object.is(NaN, NaN); // => true
+Object.is(0, -0);    // => false
+Object.is(42, 42);   // => true
+Object.is(42, '42'); // => false
+
+function Parent(){}
+function Child(){}
+Object.setPrototypeOf(Child.prototype, Parent.prototype);
+new Child instanceof Child;  // => true
+new Child instanceof Parent; // => true
+
+var O = {};
+O[Symbol.toStringTag] = 'Foo';
+'' + O; // => '[object Foo]'
+
+Object.keys('qwe'); // => ['0', '1', '2']
+Object.getPrototypeOf('qwe') === String.prototype; // => true
+```
+#### ECMAScript 6: Function
+Modules [`es6.function.name`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.function.name.js), [`es6.function.has-instance`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.function.has-instance.js). Just ES5: [`es6.function.bind`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.function.bind.js).
+```js
+Function
+  #bind(object, ...args) -> boundFn(...args)
+  #name                  -> string (IE9+)
+  #@@hasInstance(var)    -> bool
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js/es6/function
+core-js/fn/function/name
+core-js/fn/function/has-instance
+core-js/fn/function/bind
+core-js/fn/function/virtual/bind
+```
+[*Example*](http://goo.gl/zqu3Wp):
+```js
+(function foo(){}).name // => 'foo'
+
+console.log.bind(console, 42)(43); // => 42 43
+```
+#### ECMAScript 6: Array
+Modules [`es6.array.from`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.from.js), [`es6.array.of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.of.js), [`es6.array.copy-within`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.copy-within.js), [`es6.array.fill`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.fill.js), [`es6.array.find`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.find.js), [`es6.array.find-index`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.find-index.js), [`es6.array.iterator`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.iterator.js). ES5 features with fixes: [`es6.array.is-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.is-array.js), [`es6.array.slice`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.slice.js), [`es6.array.join`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.join.js), [`es6.array.index-of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.index-of.js), [`es6.array.last-index-of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.last-index-of.js), [`es6.array.every`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.every.js), [`es6.array.some`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.some.js), [`es6.array.for-each`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.for-each.js), [`es6.array.map`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.map.js), [`es6.array.filter`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.filter.js), [`es6.array.reduce`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.reduce.js), [`es6.array.reduce-right`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.reduce-right.js), [`es6.array.sort`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.array.sort.js).
+```js
+Array
+  .from(iterable | array-like, mapFn(val, index)?, that) -> array
+  .of(...args)                                           -> array
+  .isArray(var)                                          -> bool
+  #copyWithin(target = 0, start = 0, end = @length)      -> @
+  #fill(val, start = 0, end = @length)                   -> @
+  #find(fn(val, index, @), that)                         -> val
+  #findIndex(fn(val, index, @), that)                    -> index | -1
+  #values()                                              -> iterator
+  #keys()                                                -> iterator
+  #entries()                                             -> iterator
+  #join(string = ',')                                    -> string, fix for ie7-
+  #slice(start?, end?)                                   -> array, fix for ie7-
+  #indexOf(var, from?)                                   -> index | -1
+  #lastIndexOf(var, from?)                               -> index | -1
+  #every(fn(val, index, @), that)                        -> bool
+  #some(fn(val, index, @), that)                         -> bool
+  #forEach(fn(val, index, @), that)                      -> void
+  #map(fn(val, index, @), that)                          -> array
+  #filter(fn(val, index, @), that)                       -> array
+  #reduce(fn(memo, val, index, @), memo?)                -> var
+  #reduceRight(fn(memo, val, index, @), memo?)           -> var
+  #sort(fn?)                                             -> @, invalid arguments fix
+  #@@iterator()                                          -> iterator (values)
+  #@@unscopables                                         -> object (cap)
+Arguments
+  #@@iterator() -> iterator (values, available only in core-js methods)
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/array
+core-js(/library)/fn/array/from
+core-js(/library)/fn/array/of
+core-js(/library)/fn/array/is-array
+core-js(/library)/fn/array/iterator
+core-js(/library)/fn/array/copy-within
+core-js(/library)/fn/array/fill
+core-js(/library)/fn/array/find
+core-js(/library)/fn/array/find-index
+core-js(/library)/fn/array/values
+core-js(/library)/fn/array/keys
+core-js(/library)/fn/array/entries
+core-js(/library)/fn/array/slice
+core-js(/library)/fn/array/join
+core-js(/library)/fn/array/index-of
+core-js(/library)/fn/array/last-index-of
+core-js(/library)/fn/array/every
+core-js(/library)/fn/array/some
+core-js(/library)/fn/array/for-each
+core-js(/library)/fn/array/map
+core-js(/library)/fn/array/filter
+core-js(/library)/fn/array/reduce
+core-js(/library)/fn/array/reduce-right
+core-js(/library)/fn/array/sort
+core-js(/library)/fn/array/virtual/iterator
+core-js(/library)/fn/array/virtual/copy-within
+core-js(/library)/fn/array/virtual/fill
+core-js(/library)/fn/array/virtual/find
+core-js(/library)/fn/array/virtual/find-index
+core-js(/library)/fn/array/virtual/values
+core-js(/library)/fn/array/virtual/keys
+core-js(/library)/fn/array/virtual/entries
+core-js(/library)/fn/array/virtual/slice
+core-js(/library)/fn/array/virtual/join
+core-js(/library)/fn/array/virtual/index-of
+core-js(/library)/fn/array/virtual/last-index-of
+core-js(/library)/fn/array/virtual/every
+core-js(/library)/fn/array/virtual/some
+core-js(/library)/fn/array/virtual/for-each
+core-js(/library)/fn/array/virtual/map
+core-js(/library)/fn/array/virtual/filter
+core-js(/library)/fn/array/virtual/reduce
+core-js(/library)/fn/array/virtual/reduce-right
+core-js(/library)/fn/array/virtual/sort
+```
+[*Examples*](http://goo.gl/oaUFUf):
+```js
+Array.from(new Set([1, 2, 3, 2, 1]));      // => [1, 2, 3]
+Array.from({0: 1, 1: 2, 2: 3, length: 3}); // => [1, 2, 3]
+Array.from('123', Number);                 // => [1, 2, 3]
+Array.from('123', function(it){
+  return it * it;
+});                                        // => [1, 4, 9]
+
+Array.of(1);       // => [1]
+Array.of(1, 2, 3); // => [1, 2, 3]
+
+var array = ['a', 'b', 'c'];
+
+for(var val of array)console.log(val);          // => 'a', 'b', 'c'
+for(var val of array.values())console.log(val); // => 'a', 'b', 'c'
+for(var key of array.keys())console.log(key);   // => 0, 1, 2
+for(var [key, val] of array.entries()){
+  console.log(key);                             // => 0, 1, 2
+  console.log(val);                             // => 'a', 'b', 'c'
+}
+
+function isOdd(val){
+  return val % 2;
+}
+[4, 8, 15, 16, 23, 42].find(isOdd);      // => 15
+[4, 8, 15, 16, 23, 42].findIndex(isOdd); // => 2
+[4, 8, 15, 16, 23, 42].find(isNaN);      // => undefined
+[4, 8, 15, 16, 23, 42].findIndex(isNaN); // => -1
+
+Array(5).fill(42); // => [42, 42, 42, 42, 42]
+
+[1, 2, 3, 4, 5].copyWithin(0, 3); // => [4, 5, 3, 4, 5]
+```
+#### ECMAScript 6: String
+Modules [`es6.string.from-code-point`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.from-code-point.js), [`es6.string.raw`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.raw.js), [`es6.string.iterator`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.iterator.js), [`es6.string.code-point-at`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.code-point-at.js), [`es6.string.ends-with`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.ends-with.js), [`es6.string.includes`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.includes.js), [`es6.string.repeat`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.repeat.js), [`es6.string.starts-with`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.starts-with.js) and [`es6.string.trim`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.trim.js).
+
+Annex B HTML methods. Ugly, but it's also the part of the spec. Modules [`es6.string.anchor`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.anchor.js), [`es6.string.big`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.big.js), [`es6.string.blink`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.blink.js), [`es6.string.bold`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.bold.js), [`es6.string.fixed`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.fixed.js), [`es6.string.fontcolor`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.fontcolor.js), [`es6.string.fontsize`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.fontsize.js), [`es6.string.italics`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.italics.js), [`es6.string.link`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.link.js), [`es6.string.small`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.small.js), [`es6.string.strike`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.strike.js), [`es6.string.sub`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.sub.js) and [`es6.string.sup`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.string.sup.js).
+```js
+String
+  .fromCodePoint(...codePoints) -> str
+  .raw({raw}, ...substitutions) -> str
+  #includes(str, from?) -> bool
+  #startsWith(str, from?) -> bool
+  #endsWith(str, from?) -> bool
+  #repeat(num) -> str
+  #codePointAt(pos) -> uint
+  #trim() -> str, ES6 fix
+  #anchor(name)     -> str
+  #big()            -> str
+  #blink()          -> str
+  #bold()           -> str
+  #fixed()          -> str
+  #fontcolor(color) -> str
+  #fontsize(size)   -> str
+  #italics()        -> str
+  #link(url)        -> str
+  #small()          -> str
+  #strike()         -> str
+  #sub()            -> str
+  #sup()            -> str
+  #@@iterator() -> iterator (code points)
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/string
+core-js(/library)/fn/string/from-code-point
+core-js(/library)/fn/string/raw
+core-js(/library)/fn/string/includes
+core-js(/library)/fn/string/starts-with
+core-js(/library)/fn/string/ends-with
+core-js(/library)/fn/string/repeat
+core-js(/library)/fn/string/code-point-at
+core-js(/library)/fn/string/trim
+core-js(/library)/fn/string/anchor
+core-js(/library)/fn/string/big
+core-js(/library)/fn/string/blink
+core-js(/library)/fn/string/bold
+core-js(/library)/fn/string/fixed
+core-js(/library)/fn/string/fontcolor
+core-js(/library)/fn/string/fontsize
+core-js(/library)/fn/string/italics
+core-js(/library)/fn/string/link
+core-js(/library)/fn/string/small
+core-js(/library)/fn/string/strike
+core-js(/library)/fn/string/sub
+core-js(/library)/fn/string/sup
+core-js(/library)/fn/string/iterator
+core-js(/library)/fn/string/virtual/includes
+core-js(/library)/fn/string/virtual/starts-with
+core-js(/library)/fn/string/virtual/ends-with
+core-js(/library)/fn/string/virtual/repeat
+core-js(/library)/fn/string/virtual/code-point-at
+core-js(/library)/fn/string/virtual/trim
+core-js(/library)/fn/string/virtual/anchor
+core-js(/library)/fn/string/virtual/big
+core-js(/library)/fn/string/virtual/blink
+core-js(/library)/fn/string/virtual/bold
+core-js(/library)/fn/string/virtual/fixed
+core-js(/library)/fn/string/virtual/fontcolor
+core-js(/library)/fn/string/virtual/fontsize
+core-js(/library)/fn/string/virtual/italics
+core-js(/library)/fn/string/virtual/link
+core-js(/library)/fn/string/virtual/small
+core-js(/library)/fn/string/virtual/strike
+core-js(/library)/fn/string/virtual/sub
+core-js(/library)/fn/string/virtual/sup
+core-js(/library)/fn/string/virtual/iterator
+```
+[*Examples*](http://goo.gl/3UaQ93):
+```js
+for(var val of 'a𠮷b'){
+  console.log(val); // => 'a', '𠮷', 'b'
+}
+
+'foobarbaz'.includes('bar');      // => true
+'foobarbaz'.includes('bar', 4);   // => false
+'foobarbaz'.startsWith('foo');    // => true
+'foobarbaz'.startsWith('bar', 3); // => true
+'foobarbaz'.endsWith('baz');      // => true
+'foobarbaz'.endsWith('bar', 6);   // => true
+
+'string'.repeat(3); // => 'stringstringstring'
+
+'𠮷'.codePointAt(0); // => 134071
+String.fromCodePoint(97, 134071, 98); // => 'a𠮷b'
+
+var name = 'Bob';
+String.raw`Hi\n${name}!`;           // => 'Hi\\nBob!' (ES6 template string syntax)
+String.raw({raw: 'test'}, 0, 1, 2); // => 't0e1s2t'
+
+'foo'.bold();                     // => '<b>foo</b>'
+'bar'.anchor('a"b');              // => '<a name="a&quot;b">bar</a>'
+'baz'.link('http://example.com'); // => '<a href="http://example.com">baz</a>'
+```
+#### ECMAScript 6: RegExp
+Modules [`es6.regexp.constructor`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.regexp.constructor.js) and [`es6.regexp.flags`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.regexp.flags.js).
+
+Support well-known [symbols](#ecmascript-6-symbol) `@@match`, `@@replace`, `@@search` and `@@split`, modules [`es6.regexp.match`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.regexp.match.js), [`es6.regexp.replace`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.regexp.replace.js), [`es6.regexp.search`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.regexp.search.js) and [`es6.regexp.split`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.regexp.split.js).
+```
+[new] RegExp(pattern, flags?) -> regexp, ES6 fix: can alter flags (IE9+)
+  #flags -> str (IE9+)
+  #toString() -> str, ES6 fixes
+  #@@match(str)             -> array | null
+  #@@replace(str, replacer) -> string
+  #@@search(str)            -> index
+  #@@split(str, limit)      -> array
+String
+  #match(tpl)             -> var, ES6 fix for support @@match
+  #replace(tpl, replacer) -> var, ES6 fix for support @@replace
+  #search(tpl)            -> var, ES6 fix for support @@search
+  #split(tpl, limit)      -> var, ES6 fix for support @@split, some fixes for old engines
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js/es6/regexp
+core-js/fn/regexp/constructor
+core-js(/library)/fn/regexp/flags
+core-js/fn/regexp/to-string
+core-js/fn/regexp/match
+core-js/fn/regexp/replace
+core-js/fn/regexp/search
+core-js/fn/regexp/split
+```
+[*Examples*](http://goo.gl/PiJxBD):
+```js
+RegExp(/./g, 'm'); // => /./m
+
+/foo/.flags;    // => ''
+/foo/gim.flags; // => 'gim'
+
+'foo'.match({[Symbol.match]: _ => 1});     // => 1
+'foo'.replace({[Symbol.replace]: _ => 2}); // => 2
+'foo'.search({[Symbol.search]: _ => 3});   // => 3
+'foo'.split({[Symbol.split]: _ => 4});     // => 4
+
+RegExp.prototype.toString.call({source: 'foo', flags: 'bar'}); // => '/foo/bar'
+```
+#### ECMAScript 6: Number
+Module [`es6.number.constructor`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.constructor.js). `Number` constructor support binary and octal literals, [*example*](http://goo.gl/jRd6b3):
+```js
+Number('0b1010101'); // => 85
+Number('0o7654321'); // => 2054353
+```
+Modules [`es6.number.epsilon`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.epsilon.js), [`es6.number.is-finite`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.is-finite.js), [`es6.number.is-integer`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.is-integer.js), [`es6.number.is-nan`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.is-nan.js), [`es6.number.is-safe-integer`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.is-safe-integer.js), [`es6.number.max-safe-integer`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.max-safe-integer.js), [`es6.number.min-safe-integer`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.min-safe-integer.js), [`es6.number.parse-float`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.parse-float.js), [`es6.number.parse-int`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.parse-int.js), [`es6.number.to-fixed`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.to-fixed.js), [`es6.number.to-precision`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.number.to-precision.js), [`es6.parse-int`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.parse-int.js), [`es6.parse-float`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.parse-float.js).
+```js
+[new] Number(var)         -> number | number object
+  .isFinite(num)          -> bool
+  .isNaN(num)             -> bool
+  .isInteger(num)         -> bool
+  .isSafeInteger(num)     -> bool
+  .parseFloat(str)        -> num
+  .parseInt(str)          -> int
+  .EPSILON                -> num
+  .MAX_SAFE_INTEGER       -> int
+  .MIN_SAFE_INTEGER       -> int
+  #toFixed(digits)        -> string, fixes
+  #toPrecision(precision) -> string, fixes
+parseFloat(str)           -> num, fixes
+parseInt(str)             -> int, fixes
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/number
+core-js/es6/number/constructor
+core-js(/library)/fn/number/is-finite
+core-js(/library)/fn/number/is-nan
+core-js(/library)/fn/number/is-integer
+core-js(/library)/fn/number/is-safe-integer
+core-js(/library)/fn/number/parse-float
+core-js(/library)/fn/number/parse-int
+core-js(/library)/fn/number/epsilon
+core-js(/library)/fn/number/max-safe-integer
+core-js(/library)/fn/number/min-safe-integer
+core-js(/library)/fn/number/to-fixed
+core-js(/library)/fn/number/to-precision
+core-js(/library)/fn/parse-float
+core-js(/library)/fn/parse-int
+```
+#### ECMAScript 6: Math
+Modules [`es6.math.acosh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.acosh.js), [`es6.math.asinh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.asinh.js), [`es6.math.atanh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.atanh.js), [`es6.math.cbrt`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.cbrt.js), [`es6.math.clz32`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.clz32.js), [`es6.math.cosh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.cosh.js), [`es6.math.expm1`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.expm1.js), [`es6.math.fround`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.fround.js), [`es6.math.hypot`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.hypot.js), [`es6.math.imul`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.imul.js), [`es6.math.log10`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.log10.js), [`es6.math.log1p`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.log1p.js), [`es6.math.log2`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.log2.js), [`es6.math.sign`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.sign.js), [`es6.math.sinh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.sinh.js), [`es6.math.tanh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.tanh.js), [`es6.math.trunc`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.math.trunc.js).
+```js
+Math
+  .acosh(num)     -> num
+  .asinh(num)     -> num
+  .atanh(num)     -> num
+  .cbrt(num)      -> num
+  .clz32(num)     -> uint
+  .cosh(num)      -> num
+  .expm1(num)     -> num
+  .fround(num)    -> num
+  .hypot(...args) -> num
+  .imul(num, num) -> int
+  .log1p(num)     -> num
+  .log10(num)     -> num
+  .log2(num)      -> num
+  .sign(num)      -> 1 | -1 | 0 | -0 | NaN
+  .sinh(num)      -> num
+  .tanh(num)      -> num
+  .trunc(num)     -> num
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/math
+core-js(/library)/fn/math/acosh
+core-js(/library)/fn/math/asinh
+core-js(/library)/fn/math/atanh
+core-js(/library)/fn/math/cbrt
+core-js(/library)/fn/math/clz32
+core-js(/library)/fn/math/cosh
+core-js(/library)/fn/math/expm1
+core-js(/library)/fn/math/fround
+core-js(/library)/fn/math/hypot
+core-js(/library)/fn/math/imul
+core-js(/library)/fn/math/log1p
+core-js(/library)/fn/math/log10
+core-js(/library)/fn/math/log2
+core-js(/library)/fn/math/sign
+core-js(/library)/fn/math/sinh
+core-js(/library)/fn/math/tanh
+core-js(/library)/fn/math/trunc
+```
+#### ECMAScript 6: Date
+Modules [`es6.date.to-string`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.date.to-string.js), ES5 features with fixes: [`es6.date.now`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.date.now.js), [`es6.date.to-iso-string`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.date.to-iso-string.js), [`es6.date.to-json`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.date.to-json.js) and [`es6.date.to-primitive`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.date.to-primitive.js).
+```js
+Date
+  .now()               -> int
+  #toISOString()       -> string
+  #toJSON()            -> string
+  #toString()          -> string
+  #@@toPrimitive(hint) -> primitive
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js/es6/date
+core-js/fn/date/to-string
+core-js(/library)/fn/date/now
+core-js(/library)/fn/date/to-iso-string
+core-js(/library)/fn/date/to-json
+core-js(/library)/fn/date/to-primitive
+```
+[*Example*](http://goo.gl/haeHLR):
+```js
+new Date(NaN).toString(); // => 'Invalid Date'
+```
+
+#### ECMAScript 6: Promise
+Module [`es6.promise`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.promise.js).
+```js
+new Promise(executor(resolve(var), reject(var))) -> promise
+  #then(resolved(var), rejected(var))            -> promise
+  #catch(rejected(var))                          -> promise
+  .resolve(promise | var)                        -> promise
+  .reject(var)                                   -> promise
+  .all(iterable)                                 -> promise
+  .race(iterable)                                -> promise
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/promise
+core-js(/library)/fn/promise
+```
+Basic [*example*](http://goo.gl/vGrtUC):
+```js
+function sleepRandom(time){
+  return new Promise(function(resolve, reject){
+    setTimeout(resolve, time * 1e3, 0 | Math.random() * 1e3);
+  });
+}
+
+console.log('Run');                    // => Run
+sleepRandom(5).then(function(result){
+  console.log(result);                 // => 869, after 5 sec.
+  return sleepRandom(10);
+}).then(function(result){
+  console.log(result);                 // => 202, after 10 sec.
+}).then(function(){
+  console.log('immediately after');    // => immediately after
+  throw Error('Irror!');
+}).then(function(){
+  console.log('will not be displayed');
+}).catch(x => console.log(x));         // => => Error: Irror!
+```
+`Promise.resolve` and `Promise.reject` [*example*](http://goo.gl/vr8TN3):
+```js
+Promise.resolve(42).then(x => console.log(x)); // => 42
+Promise.reject(42).catch(x => console.log(x)); // => 42
+
+Promise.resolve($.getJSON('/data.json')); // => ES6 promise
+```
+`Promise.all` [*example*](http://goo.gl/RdoDBZ):
+```js
+Promise.all([
+  'foo',
+  sleepRandom(5),
+  sleepRandom(15),
+  sleepRandom(10)             // after 15 sec:
+]).then(x => console.log(x)); // => ['foo', 956, 85, 382]
+```
+`Promise.race` [*example*](http://goo.gl/L8ovkJ):
+```js
+function timeLimit(promise, time){
+  return Promise.race([promise, new Promise(function(resolve, reject){
+    setTimeout(reject, time * 1e3, Error('Await > ' + time + ' sec'));
+  })]);
+}
+
+timeLimit(sleepRandom(5), 10).then(x => console.log(x));   // => 853, after 5 sec.
+timeLimit(sleepRandom(15), 10).catch(x => console.log(x)); // Error: Await > 10 sec
+```
+ECMAScript 7 [async functions](https://tc39.github.io/ecmascript-asyncawait) [example](http://goo.gl/wnQS4j):
+```js
+var delay = time => new Promise(resolve => setTimeout(resolve, time))
+
+async function sleepRandom(time){
+  await delay(time * 1e3);
+  return 0 | Math.random() * 1e3;
+};
+async function sleepError(time, msg){
+  await delay(time * 1e3);
+  throw Error(msg);
+};
+
+(async () => {
+  try {
+    console.log('Run');                // => Run
+    console.log(await sleepRandom(5)); // => 936, after 5 sec.
+    var [a, b, c] = await Promise.all([
+      sleepRandom(5),
+      sleepRandom(15),
+      sleepRandom(10)
+    ]);
+    console.log(a, b, c);              // => 210 445 71, after 15 sec.
+    await sleepError(5, 'Irror!');
+    console.log('Will not be displayed');
+  } catch(e){
+    console.log(e);                    // => Error: 'Irror!', after 5 sec.
+  }
+})();
+```
+
+##### Unhandled rejection tracking
+
+In Node.js, like in native implementation, available events [`unhandledRejection`](https://nodejs.org/api/process.html#process_event_unhandledrejection) and [`rejectionHandled`](https://nodejs.org/api/process.html#process_event_rejectionhandled):
+```js
+process.on('unhandledRejection', (reason, promise) => console.log('unhandled', reason, promise));
+process.on('rejectionHandled', (promise) => console.log('handled', promise));
+
+var p = Promise.reject(42);
+// unhandled 42 [object Promise]
+
+setTimeout(() => p.catch(_ => _), 1e3);
+// handled [object Promise]
+```
+In a browser on rejection, by default, you will see notify in the console, or you can add a custom handler and a handler on handling unhandled, [*example*](http://goo.gl/Wozskl):
+```js
+window.onunhandledrejection = e => console.log('unhandled', e.reason, e.promise);
+window.onrejectionhandled = e => console.log('handled', e.reason, e.promise);
+
+var p = Promise.reject(42);
+// unhandled 42 [object Promise]
+
+setTimeout(() => p.catch(_ => _), 1e3);
+// handled 42 [object Promise]
+```
+
+#### ECMAScript 6: Symbol
+Module [`es6.symbol`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.symbol.js).
+```js
+Symbol(description?)  -> symbol
+  .hasInstance        -> @@hasInstance
+  .isConcatSpreadable -> @@isConcatSpreadable
+  .iterator           -> @@iterator
+  .match              -> @@match
+  .replace            -> @@replace
+  .search             -> @@search
+  .species            -> @@species
+  .split              -> @@split
+  .toPrimitive        -> @@toPrimitive
+  .toStringTag        -> @@toStringTag
+  .unscopables        -> @@unscopables
+  .for(key)           -> symbol
+  .keyFor(symbol)     -> key
+  .useSimple()        -> void
+  .useSetter()        -> void
+Object
+  .getOwnPropertySymbols(object) -> array
+```
+Also wrapped some methods for correct work with `Symbol` polyfill.
+```js
+Object
+  .create(proto | null, descriptors?)    -> object
+  .defineProperty(target, key, desc)     -> target
+  .defineProperties(target, descriptors) -> target
+  .getOwnPropertyDescriptor(var, key)    -> desc | undefined
+  .getOwnPropertyNames(var)              -> array
+  #propertyIsEnumerable(key)             -> bool
+JSON
+  .stringify(target, replacer?, space?) -> string | undefined
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/symbol
+core-js(/library)/fn/symbol
+core-js(/library)/fn/symbol/has-instance
+core-js(/library)/fn/symbol/is-concat-spreadable
+core-js(/library)/fn/symbol/iterator
+core-js(/library)/fn/symbol/match
+core-js(/library)/fn/symbol/replace
+core-js(/library)/fn/symbol/search
+core-js(/library)/fn/symbol/species
+core-js(/library)/fn/symbol/split
+core-js(/library)/fn/symbol/to-primitive
+core-js(/library)/fn/symbol/to-string-tag
+core-js(/library)/fn/symbol/unscopables
+core-js(/library)/fn/symbol/for
+core-js(/library)/fn/symbol/key-for
+```
+[*Basic example*](http://goo.gl/BbvWFc):
+```js
+var Person = (function(){
+  var NAME = Symbol('name');
+  function Person(name){
+    this[NAME] = name;
+  }
+  Person.prototype.getName = function(){
+    return this[NAME];
+  };
+  return Person;
+})();
+
+var person = new Person('Vasya');
+console.log(person.getName());          // => 'Vasya'
+console.log(person['name']);            // => undefined
+console.log(person[Symbol('name')]);    // => undefined, symbols are uniq
+for(var key in person)console.log(key); // => only 'getName', symbols are not enumerable
+```
+`Symbol.for` & `Symbol.keyFor` [*example*](http://goo.gl/0pdJjX):
+```js
+var symbol = Symbol.for('key');
+symbol === Symbol.for('key'); // true
+Symbol.keyFor(symbol);        // 'key'
+```
+[*Example*](http://goo.gl/mKVOQJ) with methods for getting own object keys:
+```js
+var O = {a: 1};
+Object.defineProperty(O, 'b', {value: 2});
+O[Symbol('c')] = 3;
+Object.keys(O);                  // => ['a']
+Object.getOwnPropertyNames(O);   // => ['a', 'b']
+Object.getOwnPropertySymbols(O); // => [Symbol(c)]
+Reflect.ownKeys(O);              // => ['a', 'b', Symbol(c)]
+```
+##### Caveats when using `Symbol` polyfill:
+
+* We can't add new primitive type, `Symbol` returns object.
+* `Symbol.for` and `Symbol.keyFor` can't be shimmed cross-realm.
+* By default, to hide the keys, `Symbol` polyfill defines setter in `Object.prototype`. For this reason, uncontrolled creation of symbols can cause memory leak and the `in` operator is not working correctly with `Symbol` polyfill: `Symbol() in {} // => true`.
+
+You can disable defining setters in `Object.prototype`. [Example](http://goo.gl/N5UD7J):
+```js
+Symbol.useSimple();
+var s1 = Symbol('s1')
+  , o1 = {};
+o1[s1] = true;
+for(var key in o1)console.log(key); // => 'Symbol(s1)_t.qamkg9f3q', w/o native Symbol
+
+Symbol.useSetter();
+var s2 = Symbol('s2')
+  , o2 = {};
+o2[s2] = true;
+for(var key in o2)console.log(key); // nothing
+```
+* Currently, `core-js` not adds setters to `Object.prototype` for well-known symbols for correct work something like `Symbol.iterator in foo`. It can cause problems with their enumerability.
+* Some problems possible with environment exotic objects (for example, IE `localStorage`).
+
+#### ECMAScript 6: Collections
+`core-js` uses native collections in most case, just fixes methods / constructor, if it's required, and in old environment uses fast polyfill (O(1) lookup).
+#### Map
+Module [`es6.map`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.map.js).
+```js
+new Map(iterable (entries) ?)     -> map
+  #clear()                        -> void
+  #delete(key)                    -> bool
+  #forEach(fn(val, key, @), that) -> void
+  #get(key)                       -> val
+  #has(key)                       -> bool
+  #set(key, val)                  -> @
+  #size                           -> uint
+  #values()                       -> iterator
+  #keys()                         -> iterator
+  #entries()                      -> iterator
+  #@@iterator()                   -> iterator (entries)
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/map
+core-js(/library)/fn/map
+```
+[*Examples*](http://goo.gl/GWR7NI):
+```js
+var a = [1];
+
+var map = new Map([['a', 1], [42, 2]]);
+map.set(a, 3).set(true, 4);
+
+console.log(map.size);        // => 4
+console.log(map.has(a));      // => true
+console.log(map.has([1]));    // => false
+console.log(map.get(a));      // => 3
+map.forEach(function(val, key){
+  console.log(val);           // => 1, 2, 3, 4
+  console.log(key);           // => 'a', 42, [1], true
+});
+map.delete(a);
+console.log(map.size);        // => 3
+console.log(map.get(a));      // => undefined
+console.log(Array.from(map)); // => [['a', 1], [42, 2], [true, 4]]
+
+var map = new Map([['a', 1], ['b', 2], ['c', 3]]);
+
+for(var [key, val] of map){
+  console.log(key);                           // => 'a', 'b', 'c'
+  console.log(val);                           // => 1, 2, 3
+}
+for(var val of map.values())console.log(val); // => 1, 2, 3
+for(var key of map.keys())console.log(key);   // => 'a', 'b', 'c'
+for(var [key, val] of map.entries()){
+  console.log(key);                           // => 'a', 'b', 'c'
+  console.log(val);                           // => 1, 2, 3
+}
+```
+#### Set
+Module [`es6.set`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.set.js).
+```js
+new Set(iterable?)              -> set
+  #add(key)                     -> @
+  #clear()                      -> void
+  #delete(key)                  -> bool
+  #forEach(fn(el, el, @), that) -> void
+  #has(key)                     -> bool
+  #size                         -> uint
+  #values()                     -> iterator
+  #keys()                       -> iterator
+  #entries()                    -> iterator
+  #@@iterator()                 -> iterator (values)
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/set
+core-js(/library)/fn/set
+```
+[*Examples*](http://goo.gl/bmhLwg):
+```js
+var set = new Set(['a', 'b', 'a', 'c']);
+set.add('d').add('b').add('e');
+console.log(set.size);        // => 5
+console.log(set.has('b'));    // => true
+set.forEach(function(it){
+  console.log(it);            // => 'a', 'b', 'c', 'd', 'e'
+});
+set.delete('b');
+console.log(set.size);        // => 4
+console.log(set.has('b'));    // => false
+console.log(Array.from(set)); // => ['a', 'c', 'd', 'e']
+
+var set = new Set([1, 2, 3, 2, 1]);
+
+for(var val of set)console.log(val);          // => 1, 2, 3
+for(var val of set.values())console.log(val); // => 1, 2, 3
+for(var key of set.keys())console.log(key);   // => 1, 2, 3
+for(var [key, val] of set.entries()){
+  console.log(key);                           // => 1, 2, 3
+  console.log(val);                           // => 1, 2, 3
+}
+```
+#### WeakMap
+Module [`es6.weak-map`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.weak-map.js).
+```js
+new WeakMap(iterable (entries) ?) -> weakmap
+  #delete(key)                    -> bool
+  #get(key)                       -> val
+  #has(key)                       -> bool
+  #set(key, val)                  -> @
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/weak-map
+core-js(/library)/fn/weak-map
+```
+[*Examples*](http://goo.gl/SILXyw):
+```js
+var a = [1]
+  , b = [2]
+  , c = [3];
+
+var wmap = new WeakMap([[a, 1], [b, 2]]);
+wmap.set(c, 3).set(b, 4);
+console.log(wmap.has(a));   // => true
+console.log(wmap.has([1])); // => false
+console.log(wmap.get(a));   // => 1
+wmap.delete(a);
+console.log(wmap.get(a));   // => undefined
+
+// Private properties store:
+var Person = (function(){
+  var names = new WeakMap;
+  function Person(name){
+    names.set(this, name);
+  }
+  Person.prototype.getName = function(){
+    return names.get(this);
+  };
+  return Person;
+})();
+
+var person = new Person('Vasya');
+console.log(person.getName());          // => 'Vasya'
+for(var key in person)console.log(key); // => only 'getName'
+```
+#### WeakSet
+Module [`es6.weak-set`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.weak-set.js).
+```js
+new WeakSet(iterable?) -> weakset
+  #add(key)            -> @
+  #delete(key)         -> bool
+  #has(key)            -> bool
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/weak-set
+core-js(/library)/fn/weak-set
+```
+[*Examples*](http://goo.gl/TdFbEx):
+```js
+var a = [1]
+  , b = [2]
+  , c = [3];
+
+var wset = new WeakSet([a, b, a]);
+wset.add(c).add(b).add(c);
+console.log(wset.has(b));   // => true
+console.log(wset.has([2])); // => false
+wset.delete(b);
+console.log(wset.has(b));   // => false
+```
+##### Caveats when using collections polyfill:
+
+* Weak-collections polyfill stores values as hidden properties of keys. It works correct and not leak in most cases. However, it is desirable to store a collection longer than its keys.
+
+#### ECMAScript 6: Typed Arrays
+Implementations and fixes `ArrayBuffer`, `DataView`, typed arrays constructors, static and prototype methods. Typed Arrays work only in environments with support descriptors (IE9+), `ArrayBuffer` and `DataView` should work anywhere.
+
+Modules [`es6.typed.array-buffer`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.array-buffer.js), [`es6.typed.data-view`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.data-view.js), [`es6.typed.int8-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.int8-array.js), [`es6.typed.uint8-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.uint8-array.js), [`es6.typed.uint8-clamped-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.uint8-clamped-array.js), [`es6.typed.int16-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.int16-array.js), [`es6.typed.uint16-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.uint16-array.js), [`es6.typed.int32-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.int32-array.js), [`es6.typed.uint32-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.uint32-array.js), [`es6.typed.float32-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.float32-array.js) and [`es6.typed.float64-array`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.typed.float64-array.js).
+```js
+new ArrayBuffer(length) -> buffer
+  .isView(var) -> bool
+  #slice(start = 0, end = @length) -> buffer
+  #byteLength -> uint
+
+new DataView(buffer, byteOffset = 0, byteLength = buffer.byteLength - byteOffset) -> view
+  #getInt8(offset)                          -> int8
+  #getUint8(offset)                         -> uint8
+  #getInt16(offset, littleEndian = false)   -> int16
+  #getUint16(offset, littleEndian = false)  -> uint16
+  #getInt32(offset, littleEndian = false)   -> int32
+  #getUint32(offset, littleEndian = false)  -> uint32
+  #getFloat32(offset, littleEndian = false) -> float32
+  #getFloat64(offset, littleEndian = false) -> float64
+  #setInt8(offset, value)                          -> void
+  #setUint8(offset, value)                         -> void
+  #setInt16(offset, value, littleEndian = false)   -> void
+  #setUint16(offset, value, littleEndian = false)  -> void
+  #setInt32(offset, value, littleEndian = false)   -> void
+  #setUint32(offset, value, littleEndian = false)  -> void
+  #setFloat32(offset, value, littleEndian = false) -> void
+  #setFloat64(offset, value, littleEndian = false) -> void
+  #buffer     -> buffer
+  #byteLength -> uint
+  #byteOffset -> uint
+
+{
+  Int8Array,
+  Uint8Array,
+  Uint8ClampedArray,
+  Int16Array,
+  Uint16Array,
+  Int32Array,
+  Uint32Array,
+  Float32Array,
+  Float64Array
+}
+  new %TypedArray%(length)    -> typed
+  new %TypedArray%(typed)     -> typed
+  new %TypedArray%(arrayLike) -> typed
+  new %TypedArray%(iterable)  -> typed
+  new %TypedArray%(buffer, byteOffset = 0, length = (buffer.byteLength - byteOffset) / @BYTES_PER_ELEMENT) -> typed
+  .BYTES_PER_ELEMENT -> uint
+  .from(arrayLike | iterable, mapFn(val, index)?, that) -> typed
+  .of(...args) -> typed
+  #BYTES_PER_ELEMENT -> uint
+  #copyWithin(target = 0, start = 0, end = @length) -> @
+  #every(fn(val, index, @), that) -> bool
+  #fill(val, start = 0, end = @length) -> @
+  #filter(fn(val, index, @), that) -> typed
+  #find(fn(val, index, @), that) -> val
+  #findIndex(fn(val, index, @), that) -> index
+  #forEach(fn(val, index, @), that) -> void
+  #indexOf(var, from?) -> int
+  #join(string = ',') -> string
+  #lastIndexOf(var, from?) -> int
+  #map(fn(val, index, @), that) -> typed
+  #reduce(fn(memo, val, index, @), memo?) -> var
+  #reduceRight(fn(memo, val, index, @), memo?) -> var
+  #reverse() -> @
+  #set(arrayLike, offset = 0) -> void
+  #slice(start = 0, end = @length) -> typed
+  #some(fn(val, index, @), that) -> bool
+  #sort(fn(a, b)?) -> @
+  #subarray(start = 0, end = @length) -> typed
+  #toString() -> string
+  #toLocaleString() -> string
+  #values()     -> iterator
+  #keys()       -> iterator
+  #entries()    -> iterator
+  #@@iterator() -> iterator (values)
+  #buffer     -> buffer
+  #byteLength -> uint
+  #byteOffset -> uint
+  #length     -> uint
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/typed
+core-js(/library)/fn/typed
+core-js(/library)/fn/typed/array-buffer
+core-js(/library)/fn/typed/data-view
+core-js(/library)/fn/typed/int8-array
+core-js(/library)/fn/typed/uint8-array
+core-js(/library)/fn/typed/uint8-clamped-array
+core-js(/library)/fn/typed/int16-array
+core-js(/library)/fn/typed/uint16-array
+core-js(/library)/fn/typed/int32-array
+core-js(/library)/fn/typed/uint32-array
+core-js(/library)/fn/typed/float32-array
+core-js(/library)/fn/typed/float64-array
+```
+[*Examples*](http://goo.gl/yla75z):
+```js
+new Int32Array(4);                          // => [0, 0, 0, 0]
+new Uint8ClampedArray([1, 2, 3, 666]);      // => [1, 2, 3, 255]
+new Float32Array(new Set([1, 2, 3, 2, 1])); // => [1, 2, 3]
+
+var buffer = new ArrayBuffer(8);
+var view   = new DataView(buffer);
+view.setFloat64(0, 123.456, true);
+new Uint8Array(buffer.slice(4)); // => [47, 221, 94, 64]
+
+Int8Array.of(1, 1.5, 5.7, 745);      // => [1, 1, 5, -23]
+Uint8Array.from([1, 1.5, 5.7, 745]); // => [1, 1, 5, 233]
+
+var typed = new Uint8Array([1, 2, 3]);
+
+var a = typed.slice(1);    // => [2, 3]
+typed.buffer === a.buffer; // => false
+var b = typed.subarray(1); // => [2, 3]
+typed.buffer === b.buffer; // => true
+
+typed.filter(it => it % 2); // => [1, 3]
+typed.map(it => it * 1.5);  // => [1, 3, 4]
+
+for(var val of typed)console.log(val);          // => 1, 2, 3
+for(var val of typed.values())console.log(val); // => 1, 2, 3
+for(var key of typed.keys())console.log(key);   // => 0, 1, 2
+for(var [key, val] of typed.entries()){
+  console.log(key);                             // => 0, 1, 2
+  console.log(val);                             // => 1, 2, 3
+}
+```
+##### Caveats when using typed arrays:
+
+* Typed Arrays polyfills works completely how should work by the spec, but because of internal use getter / setters on each instance, is slow and consumes significant memory. However, typed arrays polyfills required mainly for IE9 (and for `Uint8ClampedArray` in IE10 and early IE11), all modern engines have native typed arrays and requires only constructors fixes and methods.
+* The current version hasn't special entry points for methods, they can be added only with constructors. It can be added in the future.
+* In the `library` version we can't pollute native prototypes, so prototype methods available as constructors static.
+
+#### ECMAScript 6: Reflect
+Modules [`es6.reflect.apply`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.apply.js), [`es6.reflect.construct`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.construct.js), [`es6.reflect.define-property`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.define-property.js), [`es6.reflect.delete-property`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.delete-property.js), [`es6.reflect.enumerate`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.enumerate.js), [`es6.reflect.get`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.get.js), [`es6.reflect.get-own-property-descriptor`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.get-own-property-descriptor.js), [`es6.reflect.get-prototype-of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.get-prototype-of.js), [`es6.reflect.has`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.has.js), [`es6.reflect.is-extensible`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.is-extensible.js), [`es6.reflect.own-keys`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.own-keys.js), [`es6.reflect.prevent-extensions`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.prevent-extensions.js), [`es6.reflect.set`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.set.js), [`es6.reflect.set-prototype-of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es6.reflect.set-prototype-of.js).
+```js
+Reflect
+  .apply(target, thisArgument, argumentsList) -> var
+  .construct(target, argumentsList, newTarget?) -> object
+  .defineProperty(target, propertyKey, attributes) -> bool
+  .deleteProperty(target, propertyKey) -> bool
+  .enumerate(target) -> iterator (removed from the spec and will be removed from core-js@3)
+  .get(target, propertyKey, receiver?) -> var
+  .getOwnPropertyDescriptor(target, propertyKey) -> desc
+  .getPrototypeOf(target) -> object | null
+  .has(target, propertyKey) -> bool
+  .isExtensible(target) -> bool
+  .ownKeys(target) -> array
+  .preventExtensions(target) -> bool
+  .set(target, propertyKey, V, receiver?) -> bool
+  .setPrototypeOf(target, proto) -> bool (required __proto__ - IE11+)
+```
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es6/reflect
+core-js(/library)/fn/reflect
+core-js(/library)/fn/reflect/apply
+core-js(/library)/fn/reflect/construct
+core-js(/library)/fn/reflect/define-property
+core-js(/library)/fn/reflect/delete-property
+core-js(/library)/fn/reflect/enumerate (deprecated and will be removed from the next major release)
+core-js(/library)/fn/reflect/get
+core-js(/library)/fn/reflect/get-own-property-descriptor
+core-js(/library)/fn/reflect/get-prototype-of
+core-js(/library)/fn/reflect/has
+core-js(/library)/fn/reflect/is-extensible
+core-js(/library)/fn/reflect/own-keys
+core-js(/library)/fn/reflect/prevent-extensions
+core-js(/library)/fn/reflect/set
+core-js(/library)/fn/reflect/set-prototype-of
+```
+[*Examples*](http://goo.gl/gVT0cH):
+```js
+var O = {a: 1};
+Object.defineProperty(O, 'b', {value: 2});
+O[Symbol('c')] = 3;
+Reflect.ownKeys(O); // => ['a', 'b', Symbol(c)]
+
+function C(a, b){
+  this.c = a + b;
+}
+
+var instance = Reflect.construct(C, [20, 22]);
+instance.c; // => 42
+```
+
+### ECMAScript 7+ proposals
+[The TC39 process.](https://tc39.github.io/process-document/)
+
+[*CommonJS entry points:*](#commonjs)
+```
+core-js(/library)/es7
+core-js(/library)/es7/array
+core-js(/library)/es7/global
+core-js(/library)/es7/string
+core-js(/library)/es7/map
+core-js(/library)/es7/set
+core-js(/library)/es7/error
+core-js(/library)/es7/math
+core-js(/library)/es7/system
+core-js(/library)/es7/symbol
+core-js(/library)/es7/reflect
+core-js(/library)/es7/observable
+```
+`core-js/stage/4` entry point contains only stage 4 proposals, `core-js/stage/3` - stage 3 and stage 4, etc.
+#### Stage 4 proposals
+
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/stage/4
+```
+* `{Array, %TypedArray%}#includes` [proposal](https://github.com/tc39/Array.prototype.includes) - module [`es7.array.includes`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.array.includes.js), `%TypedArray%` version in modules from [this section](#ecmascript-6-typed-arrays).
+```js
+Array
+  #includes(var, from?) -> bool
+{
+  Int8Array,
+  Uint8Array,
+  Uint8ClampedArray,
+  Int16Array,
+  Uint16Array,
+  Int32Array,
+  Uint32Array,
+  Float32Array,
+  Float64Array
+}
+  #includes(var, from?) -> bool
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/array/includes
+```
+[*Examples*](http://goo.gl/2Gq4ma):
+```js
+[1, 2, 3].includes(2);        // => true
+[1, 2, 3].includes(4);        // => false
+[1, 2, 3].includes(2, 2);     // => false
+
+[NaN].indexOf(NaN);           // => -1
+[NaN].includes(NaN);          // => true
+Array(1).indexOf(undefined);  // => -1
+Array(1).includes(undefined); // => true
+```
+* `Object.values`, `Object.entries` [proposal](https://github.com/tc39/proposal-object-values-entries) - modules [`es7.object.values`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.values.js), [`es7.object.entries`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.entries.js)
+```js
+Object
+  .values(object) -> array
+  .entries(object) -> array
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/object/values
+core-js(/library)/fn/object/entries
+```
+[*Examples*](http://goo.gl/6kuGOn):
+```js
+Object.values({a: 1, b: 2, c: 3});  // => [1, 2, 3]
+Object.entries({a: 1, b: 2, c: 3}); // => [['a', 1], ['b', 2], ['c', 3]]
+
+for(let [key, value] of Object.entries({a: 1, b: 2, c: 3})){
+  console.log(key);   // => 'a', 'b', 'c'
+  console.log(value); // => 1, 2, 3
+}
+```
+* `Object.getOwnPropertyDescriptors` [proposal](https://github.com/tc39/proposal-object-getownpropertydescriptors) - module [`es7.object.get-own-property-descriptors`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.get-own-property-descriptors.js)
+```js
+Object
+  .getOwnPropertyDescriptors(object) -> object
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/object/get-own-property-descriptors
+```
+*Examples*:
+```js
+// Shallow object cloning with prototype and descriptors:
+var copy = Object.create(Object.getPrototypeOf(O), Object.getOwnPropertyDescriptors(O));
+// Mixin:
+Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
+```
+* `String#padStart`, `String#padEnd` [proposal](https://github.com/tc39/proposal-string-pad-start-end) - modules [`es7.string.pad-start`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.string.pad-start.js), [`es7.string.pad-end`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.string.pad-end.js)
+```js
+String
+  #padStart(length, fillStr = ' ') -> string
+  #padEnd(length, fillStr = ' ') -> string
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/string/pad-start
+core-js(/library)/fn/string/pad-end
+core-js(/library)/fn/string/virtual/pad-start
+core-js(/library)/fn/string/virtual/pad-end
+```
+[*Examples*](http://goo.gl/hK5ccv):
+```js
+'hello'.padStart(10);         // => '     hello'
+'hello'.padStart(10, '1234'); // => '12341hello'
+'hello'.padEnd(10);           // => 'hello     '
+'hello'.padEnd(10, '1234');   // => 'hello12341'
+```
+* `Object#__(define|lookup)[GS]etter__`, [annex B ES2017](https://github.com/tc39/ecma262/pull/381), but we haven't special namespace for that - modules [`es7.object.define-setter`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.define-setter.js), [`es7.object.define-getter`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.define-getter.js), [`es7.object.lookup-setter`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.lookup-setter.js) and [`es7.object.lookup-getter`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.object.lookup-getter.js).
+```js
+Object
+  #__defineSetter__(key, fn) -> void
+  #__defineGetter__(key, fn) -> void
+  #__lookupSetter__(key) -> fn | void
+  #__lookupGetter__(key) -> fn | void
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/object/define-getter
+core-js(/library)/fn/object/define-setter
+core-js(/library)/fn/object/lookup-getter
+core-js(/library)/fn/object/lookup-setter
+```
+
+#### Stage 3 proposals
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/stage/3
+```
+* `global` [proposal](https://github.com/tc39/proposal-global) - modules [`es7.global`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.global.js) and [`es7.system.global`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.system.global.js) (obsolete)
+```js
+global -> object
+System
+  .global -> object (obsolete)
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/global
+core-js(/library)/fn/system/global (obsolete)
+```
+[*Examples*](http://goo.gl/gEqMl7):
+```js
+global.Array === Array; // => true
+```
+* `Promise#finally` [proposal](https://github.com/tc39/proposal-promise-finally) - module [`es7.promise.finally`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.promise.finally.js)
+```js
+Promise
+  #finally(onFinally()) -> promise
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/promise/finally
+```
+[*Examples*](https://goo.gl/AhyBbJ):
+```js
+Promise.resolve(42).finally(() => console.log('You will see it anyway'));
+
+Promise.reject(42).finally(() => console.log('You will see it anyway'));
+
+#### Stage 2 proposals
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/stage/2
+```
+* `String#trimLeft`, `String#trimRight` / `String#trimStart`, `String#trimEnd` [proposal](https://github.com/sebmarkbage/ecmascript-string-left-right-trim) - modules [`es7.string.trim-left`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.string.trim-right.js), [`es7.string.trim-right`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.string.trim-right.js)
+```js
+String
+  #trimLeft()  -> string
+  #trimRight() -> string
+  #trimStart() -> string
+  #trimEnd()   -> string
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/string/trim-start
+core-js(/library)/fn/string/trim-end
+core-js(/library)/fn/string/trim-left
+core-js(/library)/fn/string/trim-right
+core-js(/library)/fn/string/virtual/trim-start
+core-js(/library)/fn/string/virtual/trim-end
+core-js(/library)/fn/string/virtual/trim-left
+core-js(/library)/fn/string/virtual/trim-right
+```
+[*Examples*](http://goo.gl/Er5lMJ):
+```js
+'   hello   '.trimLeft();  // => 'hello   '
+'   hello   '.trimRight(); // => '   hello'
+```
+```
+* `Symbol.asyncIterator` for [async iteration proposal](https://github.com/tc39/proposal-async-iteration) - module [`es7.symbol.async-iterator`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.symbol.async-iterator.js)
+```js
+Symbol
+  .asyncIterator -> @@asyncIterator
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/symbol/async-iterator
+```
+
+#### Stage 1 proposals
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/stage/1
+```
+* `Promise.try` [proposal](https://github.com/tc39/proposal-promise-try) - module [`es7.promise.try`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.promise.try.js)
+```js
+Promise
+  .try(function()) -> promise
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/promise/try
+```
+[*Examples*](https://goo.gl/k5GGRo):
+```js
+Promise.try(() => 42).then(it => console.log(`Promise, resolved as ${it}`));
+
+Promise.try(() => { throw 42; }).catch(it => console.log(`Promise, rejected as ${it}`));
+```
+* `Array#flatten` and `Array#flatMap` [proposal](https://tc39.github.io/proposal-flatMap) - modules [`es7.array.flatten`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.array.flatten.js) and [`es7.array.flat-map`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.array.flat-map.js)
+```js
+Array
+  #flatten(depthArg = 1) -> array
+  #flatMap(fn(val, key, @), that) -> array
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/array/flatten
+core-js(/library)/fn/array/flat-map
+core-js(/library)/fn/array/virtual/flatten
+core-js(/library)/fn/array/virtual/flat-map
+```
+[*Examples*](https://goo.gl/jTXsZi):
+```js
+[1, [2, 3], [4, 5]].flatten();    // => [1, 2, 3, 4, 5]
+[1, [2, [3, [4]]], 5].flatten();  // => [1, 2, [3, [4]], 5]
+[1, [2, [3, [4]]], 5].flatten(3); // => [1, 2, 3, 4, 5]
+
+[{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}].flatMap(it => [it.a, it.b]); // => [1, 2, 3, 4, 5, 6]
+```
+* `.of` and `.from` methods on collection constructors [proposal](https://github.com/tc39/proposal-setmap-offrom) - modules [`es7.set.of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.set.of.js), [`es7.set.from`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.set.from.js), [`es7.map.of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.map.of.js), [`es7.map.from`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.map.from.js), [`es7.weak-set.of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.weak-set.of.js), [`es7.weak-set.from`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.weak-set.from.js), [`es7.weak-map.of`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.weak-map.of.js), [`es7.weak-map.from`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.weak-map.from.js)
+```js
+Set
+  .of(...args) -> set
+  .from(iterable, mapFn(val, index)?, that?) -> set
+Map
+  .of(...args) -> map
+  .from(iterable, mapFn(val, index)?, that?) -> map
+WeakSet
+  .of(...args) -> weakset
+  .from(iterable, mapFn(val, index)?, that?) -> weakset
+WeakMap
+  .of(...args) -> weakmap
+  .from(iterable, mapFn(val, index)?, that?) -> weakmap
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/set/of
+core-js(/library)/fn/set/from
+core-js(/library)/fn/map/of
+core-js(/library)/fn/map/from
+core-js(/library)/fn/weak-set/of
+core-js(/library)/fn/weak-set/from
+core-js(/library)/fn/weak-map/of
+core-js(/library)/fn/weak-map/from
+```
+[*Examples*](https://goo.gl/mSC7eU):
+```js
+Set.of(1, 2, 3, 2, 1); // => Set {1, 2, 3}
+
+Map.from([[1, 2], [3, 4]], ([key, val]) => [key ** 2, val ** 2]); // => Map {1: 4, 9: 16}
+```
+* `String#matchAll` [proposal](https://github.com/tc39/String.prototype.matchAll) - module [`es7.string.match-all`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.string.match-all.js)
+```js
+String
+  #matchAll(regexp) -> iterator
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/string/match-all
+core-js(/library)/fn/string/virtual/match-all
+```
+[*Examples*](http://goo.gl/6kp9EB):
+```js
+for(let [_, d, D] of '1111a2b3cccc'.matchAll(/(\d)(\D)/)){
+  console.log(d, D); // => 1 a, 2 b, 3 c
+}
+```
+* `Observable` [proposal](https://github.com/zenparsing/es-observable) - modules [`es7.observable`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.observable.js) and [`es7.symbol.observable`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.symbol.observable.js)
+```js
+new Observable(fn)             -> observable
+  #subscribe(observer)         -> subscription
+  #forEach(fn)                 -> promise
+  #@@observable()              -> @
+  .of(...items)                -> observable
+  .from(observable | iterable) -> observable
+  .@@species                   -> @
+Symbol
+  .observable                  -> @@observable
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/observable
+core-js(/library)/fn/symbol/observable
+```
+[*Examples*](http://goo.gl/1LDywi):
+```js
+new Observable(observer => {
+  observer.next('hello');
+  observer.next('world');
+  observer.complete();
+}).forEach(it => console.log(it))
+  .then(_ => console.log('!'));
+```
+* `Math.{clamp, DEG_PER_RAD, degrees, fscale, rad-per-deg, radians, scale}` 
+  [proposal](https://github.com/rwaldron/proposal-math-extensions) - modules 
+  [`es7.math.clamp`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.clamp.js), 
+  [`es7.math.DEG_PER_RAD`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.DEG_PER_RAD.js), 
+  [`es7.math.degrees`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.degrees.js),
+  [`es7.math.fscale`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.fscale.js), 
+  [`es7.math.RAD_PER_DEG`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.RAD_PER_DEG.js), 
+  [`es7.math.radians`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.radians.js) and
+  [`es7.math.scale`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.scale.js)
+```js
+Math
+  .DEG_PER_RAD -> number
+  .RAD_PER_DEG -> number
+  .clamp(x, lower, upper) -> number
+  .degrees(radians) -> number
+  .fscale(x, inLow, inHigh, outLow, outHigh) -> number
+  .radians(degrees) -> number
+  .scale(x, inLow, inHigh, outLow, outHigh) -> number
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/math/clamp
+core-js(/library)/fn/math/deg-per-rad
+core-js(/library)/fn/math/degrees
+core-js(/library)/fn/math/fscale
+core-js(/library)/fn/math/rad-per-deg
+core-js(/library)/fn/math/radians
+core-js(/library)/fn/math/scale
+```
+* `Math.signbit` [proposal](http://jfbastien.github.io/papers/Math.signbit.html) - module [`es7.math.signbit`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.signbit.js)
+```js
+Math
+  .signbit(x) -> bool
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/math/signbit
+```
+[*Examples*](http://es6.zloirock.ru/):
+```js
+Math.signbit(NaN); // => NaN
+Math.signbit(1);   // => true
+Math.signbit(-1);  // => false
+Math.signbit(0);   // => true
+Math.signbit(-0);  // => false
+```
+
+#### Stage 0 proposals
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/stage/0
+```
+* `String#at` [proposal](https://github.com/mathiasbynens/String.prototype.at) - module [`es7.string.at`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.string.at.js)
+```js
+String
+  #at(index) -> string
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/string/at
+core-js(/library)/fn/string/virtual/at
+```
+[*Examples*](http://goo.gl/XluXI8):
+```js
+'a𠮷b'.at(1);        // => '𠮷'
+'a𠮷b'.at(1).length; // => 2
+```
+* `Map#toJSON`, `Set#toJSON` [proposal](https://github.com/DavidBruant/Map-Set.prototype.toJSON) - modules [`es7.map.to-json`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.map.to-json.js), [`es7.set.to-json`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.set.to-json.js) (rejected and will be removed from `core-js@3`)
+```js
+Map
+  #toJSON() -> array (rejected and will be removed from core-js@3)
+Set
+  #toJSON() -> array (rejected and will be removed from core-js@3)
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/map
+core-js(/library)/fn/set
+```
+* `Error.isError` [proposal](https://github.com/ljharb/proposal-is-error) - module [`es7.error.is-error`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.error.is-error.js) (withdrawn and will be removed from `core-js@3`)
+```js
+Error
+  .isError(it) -> bool (withdrawn and will be removed from core-js@3)
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/error/is-error
+```
+* `Math.{iaddh, isubh, imulh, umulh}` [proposal](https://gist.github.com/BrendanEich/4294d5c212a6d2254703) - modules [`es7.math.iaddh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.iaddh.js), [`es7.math.isubh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.isubh.js), [`es7.math.imulh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.imulh.js) and [`es7.math.umulh`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.math.umulh.js)
+```js
+Math
+  .iaddh(lo0, hi0, lo1, hi1) -> int32
+  .isubh(lo0, hi0, lo1, hi1) -> int32
+  .imulh(a, b) -> int32
+  .umulh(a, b) -> uint32
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/math/iaddh
+core-js(/library)/fn/math/isubh
+core-js(/library)/fn/math/imulh
+core-js(/library)/fn/math/umulh
+```
+* `global.asap`, [TC39 discussion](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask), module [`es7.asap`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.asap.js)
+```js
+asap(fn) -> void
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/asap
+```
+[*Examples*](http://goo.gl/tx3SRK):
+```js
+asap(() => console.log('called as microtask'));
+```
+
+#### Pre-stage 0 proposals
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/stage/pre
+```
+* `Reflect` metadata [proposal](https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md) - modules [`es7.reflect.define-metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.define-metadata.js), [`es7.reflect.delete-metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.delete-metadata.js), [`es7.reflect.get-metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.get-metadata.js), [`es7.reflect.get-metadata-keys`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.get-metadata-keys.js), [`es7.reflect.get-own-metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.get-own-metadata.js), [`es7.reflect.get-own-metadata-keys`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.get-own-metadata-keys.js), [`es7.reflect.has-metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.has-metadata.js), [`es7.reflect.has-own-metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.has-own-metadata.js) and [`es7.reflect.metadata`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/es7.reflect.metadata.js).
+```js
+Reflect
+  .defineMetadata(metadataKey, metadataValue, target, propertyKey?) -> void
+  .getMetadata(metadataKey, target, propertyKey?) -> var
+  .getOwnMetadata(metadataKey, target, propertyKey?) -> var
+  .hasMetadata(metadataKey, target, propertyKey?) -> bool
+  .hasOwnMetadata(metadataKey, target, propertyKey?) -> bool
+  .deleteMetadata(metadataKey, target, propertyKey?) -> bool
+  .getMetadataKeys(target, propertyKey?) -> array
+  .getOwnMetadataKeys(target, propertyKey?) -> array
+  .metadata(metadataKey, metadataValue) -> decorator(target, targetKey?) -> void
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/reflect/define-metadata
+core-js(/library)/fn/reflect/delete-metadata
+core-js(/library)/fn/reflect/get-metadata
+core-js(/library)/fn/reflect/get-metadata-keys
+core-js(/library)/fn/reflect/get-own-metadata
+core-js(/library)/fn/reflect/get-own-metadata-keys
+core-js(/library)/fn/reflect/has-metadata
+core-js(/library)/fn/reflect/has-own-metadata
+core-js(/library)/fn/reflect/metadata
+```
+[*Examples*](http://goo.gl/KCo3PS):
+```js
+var O = {};
+Reflect.defineMetadata('foo', 'bar', O);
+Reflect.ownKeys(O);               // => []
+Reflect.getOwnMetadataKeys(O);    // => ['foo']
+Reflect.getOwnMetadata('foo', O); // => 'bar'
+```
+
+### Web standards
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/web
+```
+#### setTimeout / setInterval
+Module [`web.timers`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/web.timers.js). Additional arguments fix for IE9-.
+```js
+setTimeout(fn(...args), time, ...args) -> id
+setInterval(fn(...args), time, ...args) -> id
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/web/timers
+core-js(/library)/fn/set-timeout
+core-js(/library)/fn/set-interval
+```
+```js
+// Before:
+setTimeout(log.bind(null, 42), 1000);
+// After:
+setTimeout(log, 1000, 42);
+```
+#### setImmediate
+Module [`web.immediate`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/web.immediate.js). [`setImmediate` proposal](https://developer.mozilla.org/en-US/docs/Web/API/Window.setImmediate) polyfill.
+```js
+setImmediate(fn(...args), ...args) -> id
+clearImmediate(id) -> void
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/web/immediate
+core-js(/library)/fn/set-immediate
+core-js(/library)/fn/clear-immediate
+```
+[*Examples*](http://goo.gl/6nXGrx):
+```js
+setImmediate(function(arg1, arg2){
+  console.log(arg1, arg2); // => Message will be displayed with minimum delay
+}, 'Message will be displayed', 'with minimum delay');
+
+clearImmediate(setImmediate(function(){
+  console.log('Message will not be displayed');
+}));
+```
+#### Iterable DOM collections
+Some DOM collections should have [iterable interface](https://heycam.github.io/webidl/#idl-iterable) or should be [inherited from `Array`](https://heycam.github.io/webidl/#LegacyArrayClass). That mean they should have `keys`, `values`, `entries` and `@@iterator` methods for iteration. So add them. Module [`web.dom.iterable`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/web.dom.iterable.js):
+```js
+{
+  CSSRuleList,
+  CSSStyleDeclaration,
+  CSSValueList,
+  ClientRectList,
+  DOMRectList,
+  DOMStringList,
+  DOMTokenList,
+  DataTransferItemList,
+  FileList,
+  HTMLAllCollection,
+  HTMLCollection,
+  HTMLFormElement,
+  HTMLSelectElement,
+  MediaList,
+  MimeTypeArray,
+  NamedNodeMap,
+  NodeList,
+  PaintRequestList,
+  Plugin,
+  PluginArray,
+  SVGLengthList,
+  SVGNumberList,
+  SVGPathSegList,
+  SVGPointList,
+  SVGStringList,
+  SVGTransformList,
+  SourceBufferList,
+  StyleSheetList,
+  TextTrackCueList,
+  TextTrackList,
+  TouchList
+}
+  #@@iterator() -> iterator (values)
+
+{
+  DOMTokenList,
+  NodeList
+}
+  #values()  -> iterator
+  #keys()    -> iterator
+  #entries() -> iterator
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/web/dom-collections
+core-js(/library)/fn/dom-collections/iterator
+```
+[*Examples*](http://goo.gl/lfXVFl):
+```js
+for(var {id} of document.querySelectorAll('*')){
+  if(id)console.log(id);
+}
+
+for(var [index, {id}] of document.querySelectorAll('*').entries()){
+  if(id)console.log(index, id);
+}
+```
+### Non-standard
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/core
+```
+#### Object
+Modules [`core.object.is-object`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.object.is-object.js), [`core.object.classof`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.object.classof.js), [`core.object.define`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.object.define.js), [`core.object.make`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.object.make.js).
+```js
+Object
+  .isObject(var) -> bool
+  .classof(var) -> string
+  .define(target, mixin) -> target
+  .make(proto | null, mixin?) -> object
+```
+
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/core/object
+core-js(/library)/fn/object/is-object
+core-js(/library)/fn/object/define
+core-js(/library)/fn/object/make
+```
+Object classify [*examples*](http://goo.gl/YZQmGo):
+```js
+Object.isObject({});    // => true
+Object.isObject(isNaN); // => true
+Object.isObject(null);  // => false
+
+var classof = Object.classof;
+
+classof(null);                 // => 'Null'
+classof(undefined);            // => 'Undefined'
+classof(1);                    // => 'Number'
+classof(true);                 // => 'Boolean'
+classof('string');             // => 'String'
+classof(Symbol());             // => 'Symbol'
+
+classof(new Number(1));        // => 'Number'
+classof(new Boolean(true));    // => 'Boolean'
+classof(new String('string')); // => 'String'
+
+var fn   = function(){}
+  , list = (function(){return arguments})(1, 2, 3);
+
+classof({});                   // => 'Object'
+classof(fn);                   // => 'Function'
+classof([]);                   // => 'Array'
+classof(list);                 // => 'Arguments'
+classof(/./);                  // => 'RegExp'
+classof(new TypeError);        // => 'Error'
+
+classof(new Set);              // => 'Set'
+classof(new Map);              // => 'Map'
+classof(new WeakSet);          // => 'WeakSet'
+classof(new WeakMap);          // => 'WeakMap'
+classof(new Promise(fn));      // => 'Promise'
+
+classof([].values());          // => 'Array Iterator'
+classof(new Set().values());   // => 'Set Iterator'
+classof(new Map().values());   // => 'Map Iterator'
+
+classof(Math);                 // => 'Math'
+classof(JSON);                 // => 'JSON'
+
+function Example(){}
+Example.prototype[Symbol.toStringTag] = 'Example';
+
+classof(new Example);          // => 'Example'
+```
+`Object.define` and `Object.make` [*examples*](http://goo.gl/rtpD5Z):
+```js
+// Before:
+Object.defineProperty(target, 'c', {
+  enumerable: true,
+  configurable: true,
+  get: function(){
+    return this.a + this.b;
+  }
+});
+
+// After:
+Object.define(target, {
+  get c(){
+    return this.a + this.b;
+  }
+});
+
+// Shallow object cloning with prototype and descriptors:
+var copy = Object.make(Object.getPrototypeOf(src), src);
+
+// Simple inheritance:
+function Vector2D(x, y){
+  this.x = x;
+  this.y = y;
+}
+Object.define(Vector2D.prototype, {
+  get xy(){
+    return Math.hypot(this.x, this.y);
+  }
+});
+function Vector3D(x, y, z){
+  Vector2D.apply(this, arguments);
+  this.z = z;
+}
+Vector3D.prototype = Object.make(Vector2D.prototype, {
+  constructor: Vector3D,
+  get xyz(){
+    return Math.hypot(this.x, this.y, this.z);
+  }
+});
+
+var vector = new Vector3D(9, 12, 20);
+console.log(vector.xy);  // => 15
+console.log(vector.xyz); // => 25
+vector.y++;
+console.log(vector.xy);  // => 15.811388300841896
+console.log(vector.xyz); // => 25.495097567963924
+```
+#### Dict
+Module [`core.dict`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.dict.js). Based on [TC39 discuss](https://github.com/rwaldron/tc39-notes/blob/master/es6/2012-11/nov-29.md#collection-apis-review) / [strawman](http://wiki.ecmascript.org/doku.php?id=harmony:modules_standard#dictionaries).
+```js
+[new] Dict(iterable (entries) | object ?) -> dict
+  .isDict(var) -> bool
+  .values(object) -> iterator
+  .keys(object) -> iterator
+  .entries(object) -> iterator (entries)
+  .has(object, key) -> bool
+  .get(object, key) -> val
+  .set(object, key, value) -> object
+  .forEach(object, fn(val, key, @), that) -> void
+  .map(object, fn(val, key, @), that) -> new @
+  .mapPairs(object, fn(val, key, @), that) -> new @
+  .filter(object, fn(val, key, @), that) -> new @
+  .some(object, fn(val, key, @), that) -> bool
+  .every(object, fn(val, key, @), that) -> bool
+  .find(object, fn(val, key, @), that) -> val
+  .findKey(object, fn(val, key, @), that) -> key
+  .keyOf(object, var) -> key
+  .includes(object, var) -> bool
+  .reduce(object, fn(memo, val, key, @), memo?) -> var
+```
+
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/core/dict
+core-js(/library)/fn/dict
+```
+`Dict` create object without prototype from iterable or simple object.
+
+[*Examples*](http://goo.gl/pnp8Vr):
+```js
+var map = new Map([['a', 1], ['b', 2], ['c', 3]]);
+
+Dict();                    // => {__proto__: null}
+Dict({a: 1, b: 2, c: 3});  // => {__proto__: null, a: 1, b: 2, c: 3}
+Dict(map);                 // => {__proto__: null, a: 1, b: 2, c: 3}
+Dict([1, 2, 3].entries()); // => {__proto__: null, 0: 1, 1: 2, 2: 3}
+
+var dict = Dict({a: 42});
+dict instanceof Object;   // => false
+dict.a;                   // => 42
+dict.toString;            // => undefined
+'a' in dict;              // => true
+'hasOwnProperty' in dict; // => false
+
+Dict.isDict({});     // => false
+Dict.isDict(Dict()); // => true
+```
+`Dict.keys`, `Dict.values` and `Dict.entries` returns iterators for objects.
+
+[*Examples*](http://goo.gl/xAvECH):
+```js
+var dict = {a: 1, b: 2, c: 3};
+
+for(var key of Dict.keys(dict))console.log(key); // => 'a', 'b', 'c'
+
+for(var val of Dict.values(dict))console.log(val); // => 1, 2, 3
+
+for(var [key, val] of Dict.entries(dict)){
+  console.log(key); // => 'a', 'b', 'c'
+  console.log(val); // => 1, 2, 3
+}
+
+new Map(Dict.entries(dict)); // => Map {a: 1, b: 2, c: 3}
+```
+Basic dict operations for objects with prototype [*examples*](http://goo.gl/B28UnG):
+```js
+'q' in {q: 1};            // => true
+'toString' in {};         // => true
+
+Dict.has({q: 1}, 'q');    // => true
+Dict.has({}, 'toString'); // => false
+
+({q: 1})['q'];            // => 1
+({}).toString;            // => function toString(){ [native code] }
+
+Dict.get({q: 1}, 'q');    // => 1
+Dict.get({}, 'toString'); // => undefined
+
+var O = {};
+O['q'] = 1;
+O['q'];         // => 1
+O['__proto__'] = {w: 2};
+O['__proto__']; // => {w: 2}
+O['w'];         // => 2
+
+var O = {};
+Dict.set(O, 'q', 1);
+O['q'];         // => 1
+Dict.set(O, '__proto__', {w: 2});
+O['__proto__']; // => {w: 2}
+O['w'];         // => undefined
+```
+Other methods of `Dict` module are static equivalents of `Array.prototype` methods for dictionaries.
+
+[*Examples*](http://goo.gl/xFi1RH):
+```js
+var dict = {a: 1, b: 2, c: 3};
+
+Dict.forEach(dict, console.log, console);
+// => 1, 'a', {a: 1, b: 2, c: 3}
+// => 2, 'b', {a: 1, b: 2, c: 3}
+// => 3, 'c', {a: 1, b: 2, c: 3}
+
+Dict.map(dict, function(it){
+  return it * it;
+}); // => {a: 1, b: 4, c: 9}
+
+Dict.mapPairs(dict, function(val, key){
+  if(key != 'b')return [key + key, val * val];
+}); // => {aa: 1, cc: 9}
+
+Dict.filter(dict, function(it){
+  return it % 2;
+}); // => {a: 1, c: 3}
+
+Dict.some(dict, function(it){
+  return it === 2;
+}); // => true
+
+Dict.every(dict, function(it){
+  return it === 2;
+}); // => false
+
+Dict.find(dict, function(it){
+  return it > 2;
+}); // => 3
+Dict.find(dict, function(it){
+  return it > 4;
+}); // => undefined
+
+Dict.findKey(dict, function(it){
+  return it > 2;
+}); // => 'c'
+Dict.findKey(dict, function(it){
+  return it > 4;
+}); // => undefined
+
+Dict.keyOf(dict, 2);    // => 'b'
+Dict.keyOf(dict, 4);    // => undefined
+
+Dict.includes(dict, 2); // => true
+Dict.includes(dict, 4); // => false
+
+Dict.reduce(dict, function(memo, it){
+  return memo + it;
+});     // => 6
+Dict.reduce(dict, function(memo, it){
+  return memo + it;
+}, ''); // => '123'
+```
+#### Partial application
+Module [`core.function.part`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.function.part.js).
+```js
+Function
+  #part(...args | _) -> fn(...args)
+```
+
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js/core/function
+core-js(/library)/fn/function/part
+core-js(/library)/fn/function/virtual/part
+core-js(/library)/fn/_
+```
+`Function#part` partial apply function without `this` binding. Uses global variable `_` (`core._` for builds without global namespace pollution) as placeholder and not conflict with `Underscore` / `LoDash`.
+
+[*Examples*](http://goo.gl/p9ZJ8K):
+```js
+var fn1 = log.part(1, 2);
+fn1(3, 4);    // => 1, 2, 3, 4
+
+var fn2 = log.part(_, 2, _, 4);
+fn2(1, 3);    // => 1, 2, 3, 4
+
+var fn3 = log.part(1, _, _, 4);
+fn3(2, 3);    // => 1, 2, 3, 4
+
+fn2(1, 3, 5); // => 1, 2, 3, 4, 5
+fn2(1);       // => 1, 2, undefined, 4
+```
+#### Number Iterator
+Module [`core.number.iterator`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.number.iterator.js).
+```js
+Number
+  #@@iterator() -> iterator
+```
+
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/core/number
+core-js(/library)/fn/number/iterator
+core-js(/library)/fn/number/virtual/iterator
+```
+[*Examples*](http://goo.gl/o45pCN):
+```js
+for(var i of 3)console.log(i); // => 0, 1, 2
+
+[...10]; // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
+
+Array.from(10, Math.random); // => [0.9817775336559862, 0.02720663254149258, ...]
+
+Array.from(10, function(it){
+  return this + it * it;
+}, .42); // => [0.42, 1.42, 4.42, 9.42, 16.42, 25.42, 36.42, 49.42, 64.42, 81.42]
+```
+#### Escaping strings
+Modules [`core.regexp.escape`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.regexp.escape.js), [`core.string.escape-html`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.string.escape-html.js) and [`core.string.unescape-html`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.string.unescape-html.js).
+```js
+RegExp
+  .escape(str) -> str
+String
+  #escapeHTML() -> str
+  #unescapeHTML() -> str
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/core/regexp
+core-js(/library)/core/string
+core-js(/library)/fn/regexp/escape
+core-js(/library)/fn/string/escape-html
+core-js(/library)/fn/string/unescape-html
+core-js(/library)/fn/string/virtual/escape-html
+core-js(/library)/fn/string/virtual/unescape-html
+```
+[*Examples*](http://goo.gl/6bOvsQ):
+```js
+RegExp.escape('Hello, []{}()*+?.\\^$|!'); // => 'Hello, \[\]\{\}\(\)\*\+\?\.\\\^\$\|!'
+
+'<script>doSomething();</script>'.escapeHTML(); // => '&lt;script&gt;doSomething();&lt;/script&gt;'
+'&lt;script&gt;doSomething();&lt;/script&gt;'.unescapeHTML(); // => '<script>doSomething();</script>'
+```
+#### delay
+Module [`core.delay`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.delay.js). [Promise](#ecmascript-6-promise)-returning delay function, [esdiscuss](https://esdiscuss.org/topic/promise-returning-delay-function).
+```js
+delay(ms) -> promise
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/core/delay
+core-js(/library)/fn/delay
+```
+[*Examples*](http://goo.gl/lbucba):
+```js
+delay(1e3).then(() => console.log('after 1 sec'));
+
+(async () => {
+  await delay(3e3);
+  console.log('after 3 sec');
+
+  while(await delay(3e3))console.log('each 3 sec');
+})();
+```
+#### Helpers for iterators
+Modules [`core.is-iterable`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.is-iterable.js), [`core.get-iterator`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.get-iterator.js), [`core.get-iterator-method`](https://github.com/zloirock/core-js/blob/v2.6.5/modules/core.get-iterator-method.js) - helpers for check iterability / get iterator in the `library` version or, for example, for `arguments` object:
+```js
+core
+  .isIterable(var) -> bool
+  .getIterator(iterable) -> iterator
+  .getIteratorMethod(var) -> function | undefined
+```
+[*CommonJS entry points:*](#commonjs)
+```js
+core-js(/library)/fn/is-iterable
+core-js(/library)/fn/get-iterator
+core-js(/library)/fn/get-iterator-method
+```
+[*Examples*](http://goo.gl/SXsM6D):
+```js
+var list = (function(){
+  return arguments;
+})(1, 2, 3);
+
+console.log(core.isIterable(list)); // true;
+
+var iter = core.getIterator(list);
+console.log(iter.next().value); // 1
+console.log(iter.next().value); // 2
+console.log(iter.next().value); // 3
+console.log(iter.next().value); // undefined
+
+core.getIterator({});   // TypeError: [object Object] is not iterable!
+
+var iterFn = core.getIteratorMethod(list);
+console.log(typeof iterFn);     // 'function'
+var iter = iterFn.call(list);
+console.log(iter.next().value); // 1
+console.log(iter.next().value); // 2
+console.log(iter.next().value); // 3
+console.log(iter.next().value); // undefined
+
+console.log(core.getIteratorMethod({})); // undefined
+```
+
+## Missing polyfills
+- ES5 `JSON` is missing now only in IE7- and never will it be added to `core-js`, if you need it in these old browsers, many implementations are available, for example, [json3](https://github.com/bestiejs/json3).
+- ES6 `String#normalize` is not a very useful feature, but this polyfill will be very large. If you need it, you can use [unorm](https://github.com/walling/unorm/).
+- ES6 `Proxy` can't be polyfilled, but for Node.js / Chromium with additional flags you can try [harmony-reflect](https://github.com/tvcutsem/harmony-reflect) for adapt old style `Proxy` API to final ES6 version.
+- ES6 logic for `@@isConcatSpreadable` and `@@species` (in most places) can be polyfilled without problems, but it will cause a serious slowdown in popular cases in some engines. It will be polyfilled when it will be implemented in modern engines.
+- ES7 `SIMD`. `core-js` doesn't add polyfill of this feature because of large size and some other reasons. You can use [this polyfill](https://github.com/tc39/ecmascript_simd/blob/master/src/ecmascript_simd.js).
+- `window.fetch` is not a cross-platform feature, in some environments it makes no sense. For this reason, I don't think it should be in `core-js`. Looking at a large number of requests it *may be*  added in the future. Now you can use, for example, [this polyfill](https://github.com/github/fetch).
+- ECMA-402 `Intl` is missed because of size. You can use [this polyfill](https://github.com/andyearnshaw/Intl.js/).
Index: node_modules/_core-js@2.6.5@core-js/Gruntfile.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/Gruntfile.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/Gruntfile.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('LiveScript');
+// eslint-disable-next-line import/no-unresolved
+module.exports = require('./build/Gruntfile');
Index: node_modules/_core-js@2.6.5@core-js/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/CHANGELOG.md	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/CHANGELOG.md	(date 499162500000)
@@ -0,0 +1,685 @@
+## Changelog
+##### 2.6.5 - 2019.02.15
+- Fixed buggy `String#padStart` and `String#padEnd` mobile Safari implementations, [#414](https://github.com/zloirock/core-js/issues/414).
+
+##### 2.6.4 - 2019.02.07
+- Added a workaround against crushing an old IE11.0.9600.16384 build, [#485](https://github.com/zloirock/core-js/issues/485).
+
+##### 2.6.3 - 2019.01.22
+- Added a workaround for `babel-minify` bug, [#479](https://github.com/zloirock/core-js/issues/479)
+
+##### 2.6.2 - 2019.01.10
+- Fixed handling of `$` in `String#replace`, [#471](https://github.com/zloirock/core-js/issues/471)
+
+##### 2.6.1 - 2018.12.18
+- Fixed an issue with minified version, [#463](https://github.com/zloirock/core-js/issues/463)
+
+##### 2.6.0 - 2018.12.05
+- Add direct .exec calling to `RegExp#{@@replace, @@split, @@match, @@search}`. Also, added fixes for `RegExp#exec` method. [#411](https://github.com/zloirock/core-js/issues/411), [#428](https://github.com/zloirock/core-js/issues/428), [#434](https://github.com/zloirock/core-js/issues/434), [#435](https://github.com/zloirock/core-js/issues/435), [#453](https://github.com/zloirock/core-js/issues/453), [#458](https://github.com/zloirock/core-js/issues/458), thanks [**@nicolo-ribaudo**](https://github.com/nicolo-ribaudo).
+
+##### 2.5.7 - 2018.05.26
+- Get rid of reserved variable name `final`, related [#400](https://github.com/zloirock/core-js/issues/400)
+
+##### 2.5.6 - 2018.05.07
+- Forced replace native `Promise` in V8 6.6 (Node 10 and Chrome 66) because of [a bug with resolving custom thenables](https://bugs.chromium.org/p/chromium/issues/detail?id=830565)
+- Added a workaround for usage buggy native LG WebOS 2 `Promise` in microtask implementation, [#396](https://github.com/zloirock/core-js/issues/396)
+- Added modern version internal debugging information about used versions
+
+##### 2.5.5 - 2018.04.08
+- Fix some edge cases of `Reflect.set`, [#392](https://github.com/zloirock/core-js/issues/392) and [#393](https://github.com/zloirock/core-js/issues/393)
+
+##### 2.5.4 - 2018.03.27
+- Fixed one case of deoptimization built-in iterators in V8, related [#377](https://github.com/zloirock/core-js/issues/377)
+- Fixed some cases of iterators feature detection, [#368](https://github.com/zloirock/core-js/issues/368)
+- Fixed manually entered NodeJS domains issue in `Promise`, [#367](https://github.com/zloirock/core-js/issues/367)
+- Fixed `Number.{parseInt, parseFloat}` entry points
+- Fixed `__(define|lookup)[GS]etter__` import in the `library` version
+
+##### 2.5.3 - 2017.12.12
+- Fixed calling `onunhandledrejectionhandler` multiple times for one `Promise` chain, [#318](https://github.com/zloirock/core-js/issues/318)
+- Forced replacement of `String#{padStart, padEnd}` in Safari 10 because of [a bug](https://bugs.webkit.org/show_bug.cgi?id=161944), [#280](https://github.com/zloirock/core-js/issues/280)
+- Fixed `Array#@@iterator` in a very rare version of `WebKit`, [#236](https://github.com/zloirock/core-js/issues/236) and [#237](https://github.com/zloirock/core-js/issues/237)
+- One more [#345](https://github.com/zloirock/core-js/issues/345)-related fix
+
+##### 2.5.2 - 2017.12.09
+- `MutationObserver` no longer used for microtask implementation in iOS Safari because of bug with scrolling, [#339](https://github.com/zloirock/core-js/issues/339)
+- Fixed `JSON.stringify(undefined, replacer)` case in the wrapper from the `Symbol` polyfill, [#345](https://github.com/zloirock/core-js/issues/345)
+- `Array()` calls changed to `new Array()` for V8 optimisation
+
+##### 2.5.1 - 2017.09.01
+- Updated `Promise#finally` per [tc39/proposal-promise-finally#37](https://github.com/tc39/proposal-promise-finally/issues/37)
+- Optimized usage of some internal helpers for reducing size of `shim` version
+- Fixed some entry points for virtual methods
+
+##### 2.5.0 - 2017.08.05
+- Added `Promise#finally` [stage 3 proposal](https://github.com/tc39/proposal-promise-finally), [#225](https://github.com/zloirock/core-js/issues/225)
+- Added `Promise.try` [stage 1 proposal](https://github.com/tc39/proposal-promise-try)
+- Added `Array#flatten` and `Array#flatMap` [stage 1 proposal](https://tc39.github.io/proposal-flatMap)
+- Added `.of` and `.from` methods on collection constructors [stage 1 proposal](https://github.com/tc39/proposal-setmap-offrom):
+  - `Map.of`
+  - `Set.of`
+  - `WeakSet.of`
+  - `WeakMap.of`
+  - `Map.from`
+  - `Set.from`
+  - `WeakSet.from`
+  - `WeakMap.from`
+- Added `Math` extensions [stage 1 proposal](https://github.com/rwaldron/proposal-math-extensions), [#226](https://github.com/zloirock/core-js/issues/226):
+  - `Math.clamp`
+  - `Math.DEG_PER_RAD`
+  - `Math.degrees`
+  - `Math.fscale`
+  - `Math.RAD_PER_DEG`
+  - `Math.radians`
+  - `Math.scale`
+- Added `Math.signbit` [stage 1 proposal](http://jfbastien.github.io/papers/Math.signbit.html)
+- Updated `global` [stage 3 proposal](https://github.com/tc39/proposal-global) - added `global` global object, `System.global` deprecated
+- Updated `Object.getOwnPropertyDescriptors` to the [final version](https://tc39.github.io/ecma262/2017/#sec-object.getownpropertydescriptors) - it should not create properties if descriptors are `undefined`
+- Updated the list of iterable DOM collections, [#249](https://github.com/zloirock/core-js/issues/249), added:
+  - `CSSStyleDeclaration#@@iterator`
+  - `CSSValueList#@@iterator`
+  - `ClientRectList#@@iterator`
+  - `DOMRectList#@@iterator`
+  - `DOMStringList#@@iterator`
+  - `DataTransferItemList#@@iterator`
+  - `FileList#@@iterator`
+  - `HTMLAllCollection#@@iterator`
+  - `HTMLCollection#@@iterator`
+  - `HTMLFormElement#@@iterator`
+  - `HTMLSelectElement#@@iterator`
+  - `MimeTypeArray#@@iterator`
+  - `NamedNodeMap#@@iterator`
+  - `PaintRequestList#@@iterator`
+  - `Plugin#@@iterator`
+  - `PluginArray#@@iterator`
+  - `SVGLengthList#@@iterator`
+  - `SVGNumberList#@@iterator`
+  - `SVGPathSegList#@@iterator`
+  - `SVGPointList#@@iterator`
+  - `SVGStringList#@@iterator`
+  - `SVGTransformList#@@iterator`
+  - `SourceBufferList#@@iterator`
+  - `TextTrackCueList#@@iterator`
+  - `TextTrackList#@@iterator`
+  - `TouchList#@@iterator`
+- Updated stages of proposals:
+  - [`Object.getOwnPropertyDescriptors`](https://github.com/tc39/proposal-object-getownpropertydescriptors) to [stage 4 (ES2017)](https://tc39.github.io/ecma262/2017/#sec-object.getownpropertydescriptors)
+  - [String padding](https://github.com/tc39/proposal-string-pad-start-end) to [stage 4 (ES2017)](https://tc39.github.io/ecma262/2017/#sec-string.prototype.padend)
+  - [`global`](https://github.com/tc39/proposal-global) to [stage 3](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-09/sept-28.md#revisit-systemglobal--global)
+  - [String trimming](https://github.com/tc39/proposal-string-left-right-trim) to [stage 2](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-07/jul-27.md#10iic-trimstarttrimend)
+- Updated typed arrays to the modern (ES2016+) arguments validation, 
+[#293](https://github.com/zloirock/core-js/pull/293)
+- Fixed `%TypedArray%.from` Safari bug, [#285](https://github.com/zloirock/core-js/issues/285)
+- Fixed compatibility with old version of Prototype.js, [#278](https://github.com/zloirock/core-js/issues/278), [#289](https://github.com/zloirock/core-js/issues/289)
+- `Function#name` no longer cache the result for correct behaviour with inherited constructors, [#296](https://github.com/zloirock/core-js/issues/296)
+- Added errors on incorrect context of collection methods, [#272](https://github.com/zloirock/core-js/issues/272)
+- Fixed conversion typed array constructors to string, fix [#300](https://github.com/zloirock/core-js/issues/300)
+- Fixed `Set#size` with debugger ReactNative for Android, [#297](https://github.com/zloirock/core-js/issues/297)
+- Fixed an issue with Electron-based debugger, [#230](https://github.com/zloirock/core-js/issues/230)
+- Fixed compatibility with incomplete third-party `WeakMap` polyfills, [#252](https://github.com/zloirock/core-js/pull/252)
+- Added a fallback for `Date#toJSON` in engines without native `Date#toISOString`, [#220](https://github.com/zloirock/core-js/issues/220)
+- Added support for Sphere Dispatch API, [#286](https://github.com/zloirock/core-js/pull/286)
+- Seriously changed the coding style and the [ESLint config](https://github.com/zloirock/core-js/blob/master/.eslintrc.js)
+- Updated many dev dependencies (`webpack`, `uglify`, etc)
+- Some other minor fixes and optimizations
+
+##### 2.4.1 - 2016.07.18
+- Fixed `script` tag for some parsers, [#204](https://github.com/zloirock/core-js/issues/204), [#216](https://github.com/zloirock/core-js/issues/216)
+- Removed some unused variables, [#217](https://github.com/zloirock/core-js/issues/217), [#218](https://github.com/zloirock/core-js/issues/218)
+- Fixed MS Edge `Reflect.construct` and `Reflect.apply` - they should not allow primitive as `argumentsList` argument
+
+##### 1.2.7 [LEGACY] - 2016.07.18
+- Some fixes for issues like [#159](https://github.com/zloirock/core-js/issues/159), [#186](https://github.com/zloirock/core-js/issues/186), [#194](https://github.com/zloirock/core-js/issues/194), [#207](https://github.com/zloirock/core-js/issues/207)
+
+##### 2.4.0 - 2016.05.08
+- Added `Observable`, [stage 1 proposal](https://github.com/zenparsing/es-observable)
+- Fixed behavior `Object.{getOwnPropertySymbols, getOwnPropertyDescriptor}` and `Object#propertyIsEnumerable` on `Object.prototype`
+- `Reflect.construct` and `Reflect.apply` should throw an error if `argumentsList` argument is not an object, [#194](https://github.com/zloirock/core-js/issues/194)
+
+##### 2.3.0 - 2016.04.24
+- Added `asap` for enqueuing microtasks, [stage 0 proposal](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask)
+- Added well-known symbol `Symbol.asyncIterator` for [stage 2 async iteration proposal](https://github.com/tc39/proposal-async-iteration)
+- Added well-known symbol `Symbol.observable` for [stage 1 observables proposal](https://github.com/zenparsing/es-observable)
+- `String#{padStart, padEnd}` returns original string if filler is empty string, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#stringprototypepadstartpadend)
+- `Object.values` and `Object.entries` moved to stage 4 from 3, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#objectvalues--objectentries)
+- `System.global` moved to stage 2 from 1, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#systemglobal)
+- `Map#toJSON` and `Set#toJSON` rejected and will be removed from the next major release, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-31.md#mapprototypetojsonsetprototypetojson)
+- `Error.isError` withdrawn and will be removed from the next major release, [TC39 meeting notes](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-03/march-29.md#erroriserror)
+- Added fallback for `Function#name` on non-extensible functions and functions with broken `toString` conversion, [#193](https://github.com/zloirock/core-js/issues/193)
+
+##### 2.2.2 - 2016.04.06
+- Added conversion `-0` to `+0` to `Array#{indexOf, lastIndexOf}`, [ES2016 fix](https://github.com/tc39/ecma262/pull/316)
+- Added fixes for some `Math` methods in Tor Browser
+- `Array.{from, of}` no longer calls prototype setters
+- Added workaround over Chrome DevTools strange behavior, [#186](https://github.com/zloirock/core-js/issues/186)
+
+##### 2.2.1 - 2016.03.19
+- Fixed `Object.getOwnPropertyNames(window)` `2.1+` versions bug, [#181](https://github.com/zloirock/core-js/issues/181)
+
+##### 2.2.0 - 2016.03.15
+- Added `String#matchAll`, [proposal](https://github.com/tc39/String.prototype.matchAll)
+- Added `Object#__(define|lookup)[GS]etter__`, [annex B ES2017](https://github.com/tc39/ecma262/pull/381)
+- Added `@@toPrimitive` methods to `Date` and `Symbol`
+- Fixed `%TypedArray%#slice` in Edge ~ 13 (throws with `@@species` and wrapped / inherited constructor)
+- Some other minor fixes
+
+##### 2.1.5 - 2016.03.12
+- Improved support NodeJS domains in `Promise#then`, [#180](https://github.com/zloirock/core-js/issues/180)
+- Added fallback for `Date#toJSON` bug in Qt Script, [#173](https://github.com/zloirock/core-js/issues/173#issuecomment-193972502)
+
+##### 2.1.4 - 2016.03.08
+- Added fallback for `Symbol` polyfill in Qt Script, [#173](https://github.com/zloirock/core-js/issues/173)
+- Added one more fallback for IE11 `Script Access Denied` error with iframes, [#165](https://github.com/zloirock/core-js/issues/165)
+
+##### 2.1.3 - 2016.02.29
+- Added fallback for [`es6-promise` package bug](https://github.com/stefanpenner/es6-promise/issues/169), [#176](https://github.com/zloirock/core-js/issues/176)
+
+##### 2.1.2 - 2016.02.29
+- Some minor `Promise` fixes:
+  - Browsers `rejectionhandled` event better HTML spec complaint
+  - Errors in unhandled rejection handlers should not cause any problems
+  - Fixed typo in feature detection
+
+##### 2.1.1 - 2016.02.22
+- Some `Promise` improvements:
+  - Feature detection:
+    - **Added detection unhandled rejection tracking support - now it's available everywhere**, [#140](https://github.com/zloirock/core-js/issues/140)
+    - Added detection `@@species` pattern support for completely correct subclassing
+    - Removed usage `Object.setPrototypeOf` from feature detection and noisy console message about it in FF
+  - `Promise.all` fixed for some very specific cases
+
+##### 2.1.0 - 2016.02.09
+- **API**:
+  - ES5 polyfills are split and logic, used in other polyfills, moved to internal modules
+    - **All entry point works in ES3 environment like IE8- without `core-js/(library/)es5`**
+    - **Added all missed single entry points for ES5 polyfills**
+    - Separated ES5 polyfills moved to the ES6 namespace. Why?
+      - Mainly, for prevent duplication features in different namespaces - logic of most required ES5 polyfills changed in ES6+:
+        - Already added changes for: `Object` statics - should accept primitives, new whitespaces lists in `String#trim`, `parse(Int|float)`, `RegExp#toString` logic, `String#split`, etc
+        - Should be changed in the future: `@@species` and `ToLength` logic in `Array` methods, `Date` parsing, `Function#bind`, etc
+        - Should not be changed only several features like `Array.isArray` and `Date.now`
+      - Some ES5 polyfills required for modern engines
+    - All old entry points should work fine, but in the next major release API can be changed
+  - `Object.getOwnPropertyDescriptors` moved to the stage 3, [January TC39 meeting](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-01/2016-01-28.md#objectgetownpropertydescriptors-to-stage-3-jordan-harband-low-priority-but-super-quick)
+  - Added `umd` option for [custom build process](https://github.com/zloirock/core-js#custom-build-from-external-scripts), [#169](https://github.com/zloirock/core-js/issues/169)
+  - Returned entry points for `Array` statics, removed in `2.0`, for compatibility with `babel` `6` and for future fixes
+- **Deprecated**:
+  - `Reflect.enumerate` deprecated and will be removed from the next major release, [January TC39 meeting](https://github.com/rwaldron/tc39-notes/blob/master/es7/2016-01/2016-01-28.md#5xix-revisit-proxy-enumerate---revisit-decision-to-exhaust-iterator)
+- **New Features**:
+  - Added [`Reflect` metadata API](https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md) as a pre-strawman feature, [#152](https://github.com/zloirock/core-js/issues/152):
+    - `Reflect.defineMetadata`
+    - `Reflect.deleteMetadata`
+    - `Reflect.getMetadata`
+    - `Reflect.getMetadataKeys`
+    - `Reflect.getOwnMetadata`
+    - `Reflect.getOwnMetadataKeys`
+    - `Reflect.hasMetadata`
+    - `Reflect.hasOwnMetadata`
+    - `Reflect.metadata`
+  - Implementation / fixes `Date#toJSON`
+  - Fixes for `parseInt` and `Number.parseInt`
+  - Fixes for `parseFloat` and `Number.parseFloat`
+  - Fixes for `RegExp#toString`
+  - Fixes for `Array#sort`
+  - Fixes for `Number#toFixed`
+  - Fixes for `Number#toPrecision`
+  - Additional fixes for `String#split` (`RegExp#@@split`)
+- **Improvements**:
+  - Correct subclassing wrapped collections, `Number` and `RegExp` constructors with native class syntax
+  - Correct support `SharedArrayBuffer` and buffers from other realms in typed arrays wrappers 
+  - Additional validations for `Object.{defineProperty, getOwnPropertyDescriptor}` and `Reflect.defineProperty`
+- **Bug Fixes**:
+  - Fixed some cases `Array#lastIndexOf` with negative second argument
+
+##### 2.0.3 - 2016.01.11
+- Added fallback for V8 ~ Chrome 49 `Promise` subclassing bug causes unhandled rejection on feature detection, [#159](https://github.com/zloirock/core-js/issues/159)
+- Added fix for very specific environments with global `window === null`
+
+##### 2.0.2 - 2016.01.04
+- Temporarily removed `length` validation from `Uint8Array` constructor wrapper. Reason - [bug in `ws` module](https://github.com/websockets/ws/pull/645) (-> `socket.io`) which passes to `Buffer` constructor -> `Uint8Array` float and uses [the `V8` bug](https://code.google.com/p/v8/issues/detail?id=4552) for conversion to int (by the spec should be thrown an error). [It creates problems for many people.](https://github.com/karma-runner/karma/issues/1768) I hope, it will be returned after fixing this bug in `V8`.
+
+##### 2.0.1 - 2015.12.31
+- Forced usage `Promise.resolve` polyfill in the `library` version for correct work with wrapper
+- `Object.assign` should be defined in the strict mode -> throw an error on extension non-extensible objects, [#154](https://github.com/zloirock/core-js/issues/154)
+
+##### 2.0.0 - 2015.12.24
+- Added implementations and fixes [Typed Arrays](https://github.com/zloirock/core-js#ecmascript-6-typed-arrays)-related features
+  - `ArrayBuffer`, `ArrayBuffer.isView`, `ArrayBuffer#slice`
+  - `DataView` with all getter / setter methods
+  - `Int8Array`, `Uint8Array`, `Uint8ClampedArray`, `Int16Array`, `Uint16Array`, `Int32Array`, `Uint32Array`, `Float32Array` and `Float64Array` constructors
+  - `%TypedArray%.{for, of}`, `%TypedArray%#{copyWithin, every, fill, filter, find, findIndex, forEach, indexOf, includes, join, lastIndexOf, map, reduce, reduceRight, reverse, set, slice, some, sort, subarray, values, keys, entries, @@iterator, ...}`
+- Added [`System.global`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/tc39/proposal-global), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-19.md#systemglobal-jhd)
+- Added [`Error.isError`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/ljharb/proposal-is-error), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-19.md#jhd-erroriserror)
+- Added [`Math.{iaddh, isubh, imulh, umulh}`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://gist.github.com/BrendanEich/4294d5c212a6d2254703)
+- `RegExp.escape` moved from the `es7` to the non-standard `core` namespace, [July TC39 meeting](https://github.com/rwaldron/tc39-notes/blob/master/es7/2015-07/july-28.md#62-regexpescape) - too slow, but it's condition of stability, [#116](https://github.com/zloirock/core-js/issues/116)
+- [`Promise`](https://github.com/zloirock/core-js#ecmascript-6-promise)
+  - Some performance optimisations
+  - Added basic support [`rejectionHandled` event / `onrejectionhandled` handler](https://github.com/zloirock/core-js#unhandled-rejection-tracking) to the polyfill
+  - Removed usage `@@species` from `Promise.{all, race}`, [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-18.md#conclusionresolution-2)
+- Some improvements [collections polyfills](https://github.com/zloirock/core-js#ecmascript-6-collections)
+  - `O(1)` and preventing possible leaks with frozen keys, [#134](https://github.com/zloirock/core-js/issues/134)
+  - Correct observable state object keys
+- Renamed `String#{padLeft, padRight}` -> [`String#{padStart, padEnd}`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/tc39/proposal-string-pad-start-end), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-17.md#conclusionresolution-2) (they want to rename it on each meeting?O_o), [#132](https://github.com/zloirock/core-js/issues/132)
+- Added [`String#{trimStart, trimEnd}` as aliases for `String#{trimLeft, trimRight}`](https://github.com/zloirock/core-js#ecmascript-7-proposals), [proposal](https://github.com/sebmarkbage/ecmascript-string-left-right-trim), [November TC39 meeting](https://github.com/rwaldron/tc39-notes/tree/master/es7/2015-11/nov-17.md#conclusionresolution-2)
+- Added [annex B HTML methods](https://github.com/zloirock/core-js#ecmascript-6-string) - ugly, but also [the part of the spec](http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.anchor)
+- Added little fix for [`Date#toString`](https://github.com/zloirock/core-js#ecmascript-6-date) - `new Date(NaN).toString()` [should be `'Invalid Date'`](http://www.ecma-international.org/ecma-262/6.0/#sec-todatestring)
+- Added [`{keys, values, entries, @@iterator}` methods to DOM collections](https://github.com/zloirock/core-js#iterable-dom-collections) which should have [iterable interface](https://heycam.github.io/webidl/#idl-iterable) or should be [inherited from `Array`](https://heycam.github.io/webidl/#LegacyArrayClass) - `NodeList`, `DOMTokenList`, `MediaList`, `StyleSheetList`, `CSSRuleList`.
+- Removed Mozilla `Array` generics - [deprecated and will be removed from FF](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Array_generic_methods), [looks like strawman is dead](http://wiki.ecmascript.org/doku.php?id=strawman:array_statics), available [alternative shim](https://github.com/plusdude/array-generics)
+- Removed `core.log` module
+- CommonJS API
+  - Added entry points for [virtual methods](https://github.com/zloirock/core-js#commonjs-and-prototype-methods-without-global-namespace-pollution)
+  - Added entry points for [stages proposals](https://github.com/zloirock/core-js#ecmascript-7-proposals)
+  - Some other minor changes
+- [Custom build from external scripts](https://github.com/zloirock/core-js#custom-build-from-external-scripts) moved to the separate package for preventing problems with dependencies
+- Changed `$` prefix for internal modules file names because Team Foundation Server does not support it, [#129](https://github.com/zloirock/core-js/issues/129)
+- Additional fix for `SameValueZero` in V8 ~ Chromium 39-42 collections
+- Additional fix for FF27 `Array` iterator
+- Removed usage shortcuts for `arguments` object - old WebKit bug, [#150](https://github.com/zloirock/core-js/issues/150)
+- `{Map, Set}#forEach` non-generic, [#144](https://github.com/zloirock/core-js/issues/144)
+- Many other improvements
+
+##### 1.2.6 - 2015.11.09
+* Reject with `TypeError` on attempt resolve promise itself
+* Correct behavior with broken `Promise` subclass constructors / methods
+* Added `Promise`-based fallback for microtask
+* Fixed V8 and FF `Array#{values, @@iterator}.name`
+* Fixed IE7- `[1, 2].join(undefined) -> '1,2'`
+* Some other fixes / improvements / optimizations
+
+##### 1.2.5 - 2015.11.02
+* Some more `Number` constructor fixes:
+  * Fixed V8 ~ Node 0.8 bug: `Number('+0x1')` should be `NaN`
+  * Fixed `Number(' 0b1\n')` case, should be `1`
+  * Fixed `Number()` case, should be `0`
+
+##### 1.2.4 - 2015.11.01
+* Fixed `Number('0b12') -> NaN` case in the shim
+* Fixed V8 ~ Chromium 40- bug - `Weak(Map|Set)#{delete, get, has}` should not throw errors [#124](https://github.com/zloirock/core-js/issues/124)
+* Some other fixes and optimizations
+
+##### 1.2.3 - 2015.10.23
+* Fixed some problems related old V8 bug `Object('a').propertyIsEnumerable(0) // => false`, for example, `Object.assign({}, 'qwe')` from the last release
+* Fixed `.name` property and `Function#toString` conversion some polyfilled methods
+* Fixed `Math.imul` arity in Safari 8-
+
+##### 1.2.2 - 2015.10.18
+* Improved optimisations for V8
+* Fixed build process from external packages, [#120](https://github.com/zloirock/core-js/pull/120)
+* One more `Object.{assign, values, entries}` fix for [**very** specific case](https://github.com/ljharb/proposal-object-values-entries/issues/5)
+
+##### 1.2.1 - 2015.10.02
+* Replaced fix `JSON.stringify` + `Symbol` behavior from `.toJSON` method to wrapping `JSON.stringify` - little more correct, [compat-table/642](https://github.com/kangax/compat-table/pull/642)
+* Fixed typo which broke tasks scheduler in WebWorkers in old FF, [#114](https://github.com/zloirock/core-js/pull/114)
+
+##### 1.2.0 - 2015.09.27
+* Added browser [`Promise` rejection hook](#unhandled-rejection-tracking), [#106](https://github.com/zloirock/core-js/issues/106)
+* Added correct [`IsRegExp`](http://www.ecma-international.org/ecma-262/6.0/#sec-isregexp) logic to [`String#{includes, startsWith, endsWith}`](https://github.com/zloirock/core-js/#ecmascript-6-string) and [`RegExp` constructor](https://github.com/zloirock/core-js/#ecmascript-6-regexp), `@@match` case, [example](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match#Disabling_the_isRegExp_check)
+* Updated [`String#leftPad`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) [with proposal](https://github.com/ljharb/proposal-string-pad-left-right/issues/6): string filler truncated from the right side
+* Replaced V8 [`Object.assign`](https://github.com/zloirock/core-js/#ecmascript-6-object) - its properties order not only [incorrect](https://github.com/sindresorhus/object-assign/issues/22), it is non-deterministic and it causes some problems
+* Fixed behavior with deleted in getters properties for `Object.{`[`assign`](https://github.com/zloirock/core-js/#ecmascript-6-object)`, `[`entries, values`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)`}`, [example](http://goo.gl/iQE01c)
+* Fixed [`Math.sinh`](https://github.com/zloirock/core-js/#ecmascript-6-math) with very small numbers in V8 near Chromium 38
+* Some other fixes and optimizations
+
+##### 1.1.4 - 2015.09.05
+* Fixed support symbols in FF34-35 [`Object.assign`](https://github.com/zloirock/core-js/#ecmascript-6-object)
+* Fixed [collections iterators](https://github.com/zloirock/core-js/#ecmascript-6-iterators) in FF25-26
+* Fixed non-generic WebKit [`Array.of`](https://github.com/zloirock/core-js/#ecmascript-6-array)
+* Some other fixes and optimizations
+
+##### 1.1.3 - 2015.08.29
+* Fixed support Node.js domains in [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise), [#103](https://github.com/zloirock/core-js/issues/103)
+
+##### 1.1.2 - 2015.08.28
+* Added `toJSON` method to [`Symbol`](https://github.com/zloirock/core-js/#ecmascript-6-symbol) polyfill and to MS Edge implementation for expected `JSON.stringify` result w/o patching this method
+* Replaced [`Reflect.construct`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) implementations w/o correct support third argument
+* Fixed `global` detection with changed `document.domain` in ~IE8, [#100](https://github.com/zloirock/core-js/issues/100)
+
+##### 1.1.1 - 2015.08.20
+* Added more correct microtask implementation for [`Promise`](#ecmascript-6-promise)
+
+##### 1.1.0 - 2015.08.17
+* Updated [string padding](https://github.com/zloirock/core-js/#ecmascript-7-proposals) to [actual proposal](https://github.com/ljharb/proposal-string-pad-left-right) - renamed, minor internal changes:
+  * `String#lpad` -> `String#padLeft`
+  * `String#rpad` -> `String#padRight`
+* Added [string trim functions](#ecmascript-7-proposals) - [proposal](https://github.com/sebmarkbage/ecmascript-string-left-right-trim), defacto standard - required only for IE11- and fixed for some old engines:
+  * `String#trimLeft`
+  * `String#trimRight`
+* [`String#trim`](https://github.com/zloirock/core-js/#ecmascript-6-string) fixed for some engines by es6 spec and moved from `es5` to single `es6` module
+* Splitted [`es6.object.statics-accept-primitives`](https://github.com/zloirock/core-js/#ecmascript-6-object)
+* Caps for `freeze`-family `Object` methods moved from `es5` to `es6` namespace and joined with [es6 wrappers](https://github.com/zloirock/core-js/#ecmascript-6-object)
+* `es5` [namespace](https://github.com/zloirock/core-js/#commonjs) also includes modules, moved to `es6` namespace - you can use it as before
+* Increased `MessageChannel` priority in `$.task`, [#95](https://github.com/zloirock/core-js/issues/95)
+* Does not get `global.Symbol` on each getting iterator, if you wanna use alternative `Symbol` shim - add it before `core-js`
+* [`Reflect.construct`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) optimized and fixed for some cases
+* Simplified [`Reflect.enumerate`](https://github.com/zloirock/core-js/#ecmascript-6-reflect), see [this question](https://esdiscuss.org/topic/question-about-enumerate-and-property-decision-timing)
+* Some corrections in [`Math.acosh`](https://github.com/zloirock/core-js/#ecmascript-6-math)
+* Fixed [`Math.imul`](https://github.com/zloirock/core-js/#ecmascript-6-math) for old WebKit
+* Some fixes in string / RegExp [well-known symbols](https://github.com/zloirock/core-js/#ecmascript-6-regexp) logic
+* Some other fixes and optimizations
+
+##### 1.0.1 - 2015.07.31
+* Some fixes for final MS Edge, replaced broken native `Reflect.defineProperty`
+* Some minor fixes and optimizations
+* Changed compression `client/*.min.js` options for safe `Function#name` and `Function#length`, should be fixed [#92](https://github.com/zloirock/core-js/issues/92)
+
+##### 1.0.0 - 2015.07.22
+* Added logic for [well-known symbols](https://github.com/zloirock/core-js/#ecmascript-6-regexp):
+  * `Symbol.match`
+  * `Symbol.replace`
+  * `Symbol.split`
+  * `Symbol.search`
+* Actualized and optimized work with iterables:
+  * Optimized  [`Map`, `Set`, `WeakMap`, `WeakSet` constructors](https://github.com/zloirock/core-js/#ecmascript-6-collections), [`Promise.all`, `Promise.race`](https://github.com/zloirock/core-js/#ecmascript-6-promise) for default `Array Iterator`
+  * Optimized  [`Array.from`](https://github.com/zloirock/core-js/#ecmascript-6-array) for default `Array Iterator`
+  * Added [`core.getIteratorMethod`](https://github.com/zloirock/core-js/#ecmascript-6-iterators) helper
+* Uses enumerable properties in shimmed instances - collections, iterators, etc for optimize performance
+* Added support native constructors to [`Reflect.construct`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) with 2 arguments
+* Added support native constructors to [`Function#bind`](https://github.com/zloirock/core-js/#ecmascript-5) shim with `new`
+* Removed obsolete `.clear` methods native [`Weak`-collections](https://github.com/zloirock/core-js/#ecmascript-6-collections)
+* Maximum modularity, reduced minimal custom build size, separated into submodules:
+  * [`es6.reflect`](https://github.com/zloirock/core-js/#ecmascript-6-reflect)
+  * [`es6.regexp`](https://github.com/zloirock/core-js/#ecmascript-6-regexp)
+  * [`es6.math`](https://github.com/zloirock/core-js/#ecmascript-6-math)
+  * [`es6.number`](https://github.com/zloirock/core-js/#ecmascript-6-number)
+  * [`es7.object.to-array`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+  * [`core.object`](https://github.com/zloirock/core-js/#object)
+  * [`core.string`](https://github.com/zloirock/core-js/#escaping-strings)
+  * [`core.iter-helpers`](https://github.com/zloirock/core-js/#ecmascript-6-iterators)
+  * Internal modules (`$`, `$.iter`, etc)
+* Many other optimizations
+* Final cleaning non-standard features
+  * Moved `$for` to [separate library](https://github.com/zloirock/forof). This work for syntax - `for-of` loop and comprehensions
+  * Moved `Date#{format, formatUTC}` to [separate library](https://github.com/zloirock/dtf). Standard way for this - `ECMA-402`
+  * Removed `Math` methods from `Number.prototype`. Slight sugar for simple `Math` methods calling
+  * Removed `{Array#, Array, Dict}.turn`
+  * Removed `core.global`
+* Uses `ToNumber` instead of `ToLength` in [`Number Iterator`](https://github.com/zloirock/core-js/#number-iterator), `Array.from(2.5)` will be `[0, 1, 2]` instead of `[0, 1]`
+* Fixed [#85](https://github.com/zloirock/core-js/issues/85) - invalid `Promise` unhandled rejection message in nested `setTimeout`
+* Fixed [#86](https://github.com/zloirock/core-js/issues/86) - support FF extensions
+* Fixed [#89](https://github.com/zloirock/core-js/issues/89) - behavior `Number` constructor in strange case
+
+##### 0.9.18 - 2015.06.17
+* Removed `/` from [`RegExp.escape`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) escaped characters
+
+##### 0.9.17 - 2015.06.14
+* Updated [`RegExp.escape`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) to the [latest proposal](https://github.com/benjamingr/RexExp.escape)
+* Fixed conflict with webpack dev server + IE buggy behavior
+
+##### 0.9.16 - 2015.06.11
+* More correct order resolving thenable in [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) polyfill
+* Uses polyfill instead of [buggy V8 `Promise`](https://github.com/zloirock/core-js/issues/78)
+
+##### 0.9.15 - 2015.06.09
+* [Collections](https://github.com/zloirock/core-js/#ecmascript-6-collections) from `library` version return wrapped native instances
+* Fixed collections prototype methods in `library` version
+* Optimized [`Math.hypot`](https://github.com/zloirock/core-js/#ecmascript-6-math)
+
+##### 0.9.14 - 2015.06.04
+* Updated [`Promise.resolve` behavior](https://esdiscuss.org/topic/fixing-promise-resolve)
+* Added fallback for IE11 buggy `Object.getOwnPropertyNames` + iframe
+* Some other fixes
+
+##### 0.9.13 - 2015.05.25
+* Added fallback for [`Symbol` polyfill](https://github.com/zloirock/core-js/#ecmascript-6-symbol) for old Android
+* Some other fixes
+
+##### 0.9.12 - 2015.05.24
+* Different instances `core-js` should use / recognize the same symbols
+* Some fixes
+
+##### 0.9.11 - 2015.05.18
+* Simplified [custom build](https://github.com/zloirock/core-js/#custom-build)
+  * Added custom build js api
+  * Added `grunt-cli` to `devDependencies` for `npm run grunt`
+* Some fixes
+
+##### 0.9.10 - 2015.05.16
+* Wrapped `Function#toString` for correct work wrapped methods / constructors with methods similar to the [`lodash` `isNative`](https://github.com/lodash/lodash/issues/1197)
+* Added proto versions of methods to export object in `default` version for consistency with `library` version
+
+##### 0.9.9 - 2015.05.14
+* Wrapped `Object#propertyIsEnumerable` for [`Symbol` polyfill](https://github.com/zloirock/core-js/#ecmascript-6-symbol)
+* [Added proto versions of methods to `library` for ES7 bind syntax](https://github.com/zloirock/core-js/issues/65)
+* Some other fixes
+
+##### 0.9.8 - 2015.05.12
+* Fixed [`Math.hypot`](https://github.com/zloirock/core-js/#ecmascript-6-math) with negative arguments
+* Added `Object#toString.toString` as fallback for [`lodash` `isNative`](https://github.com/lodash/lodash/issues/1197)
+
+##### 0.9.7 - 2015.05.07
+* Added [support DOM collections](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice#Streamlining_cross-browser_behavior) to IE8- `Array#slice`
+
+##### 0.9.6 - 2015.05.01
+* Added [`String#lpad`, `String#rpad`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+
+##### 0.9.5 - 2015.04.30
+* Added cap for `Function#@@hasInstance`
+* Some fixes and optimizations
+
+##### 0.9.4 - 2015.04.27
+* Fixed `RegExp` constructor
+
+##### 0.9.3 - 2015.04.26
+* Some fixes and optimizations
+
+##### 0.9.2 - 2015.04.25
+* More correct [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) unhandled rejection tracking and resolving / rejection priority
+
+##### 0.9.1 - 2015.04.25
+* Fixed `__proto__`-based [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) subclassing in some environments
+
+##### 0.9.0 - 2015.04.24
+* Added correct [symbols](https://github.com/zloirock/core-js/#ecmascript-6-symbol) descriptors
+  * Fixed behavior `Object.{assign, create, defineProperty, defineProperties, getOwnPropertyDescriptor, getOwnPropertyDescriptors}` with symbols
+  * Added [single entry points](https://github.com/zloirock/core-js/#commonjs) for `Object.{create, defineProperty, defineProperties}`
+* Added [`Map#toJSON`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+* Removed non-standard methods `Object#[_]` and `Function#only` - they solves syntax problems, but now in compilers available arrows and ~~in near future will be available~~ [available](http://babeljs.io/blog/2015/05/14/function-bind/) [bind syntax](https://github.com/zenparsing/es-function-bind)
+* Removed non-standard undocumented methods `Symbol.{pure, set}`
+* Some fixes and internal changes
+
+##### 0.8.4 - 2015.04.18
+* Uses `webpack` instead of `browserify` for browser builds - more compression-friendly result
+
+##### 0.8.3 - 2015.04.14
+* Fixed `Array` statics with single entry points
+
+##### 0.8.2 - 2015.04.13
+* [`Math.fround`](https://github.com/zloirock/core-js/#ecmascript-6-math) now also works in IE9-
+* Added [`Set#toJSON`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+* Some optimizations and fixes
+
+##### 0.8.1 - 2015.04.03
+* Fixed `Symbol.keyFor`
+
+##### 0.8.0 - 2015.04.02
+* Changed [CommonJS API](https://github.com/zloirock/core-js/#commonjs)
+* Splitted and renamed some modules
+* Added support ES3 environment (ES5 polyfill) to **all** default versions - size increases slightly (+ ~4kb w/o gzip), many issues disappear, if you don't need it - [simply include only required namespaces / features / modules](https://github.com/zloirock/core-js/#commonjs)
+* Removed [abstract references](https://github.com/zenparsing/es-abstract-refs) support - proposal has been superseded =\
+* [`$for.isIterable` -> `core.isIterable`, `$for.getIterator` -> `core.getIterator`](https://github.com/zloirock/core-js/#ecmascript-6-iterators), temporary available in old namespace
+* Fixed iterators support in v8 `Promise.all` and `Promise.race`
+* Many other fixes
+
+##### 0.7.2 - 2015.03.09
+* Some fixes
+
+##### 0.7.1 - 2015.03.07
+* Some fixes
+
+##### 0.7.0 - 2015.03.06
+* Rewritten and splitted into [CommonJS modules](https://github.com/zloirock/core-js/#commonjs)
+
+##### 0.6.1 - 2015.02.24
+* Fixed support [`Object.defineProperty`](https://github.com/zloirock/core-js/#ecmascript-5) with accessors on DOM elements on IE8
+
+##### 0.6.0 - 2015.02.23
+* Added support safe closing iteration - calling `iterator.return` on abort iteration, if it exists
+* Added basic support [`Promise`](https://github.com/zloirock/core-js/#ecmascript-6-promise) unhandled rejection tracking in shim
+* Added [`Object.getOwnPropertyDescriptors`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+* Removed `console` cap - creates too many problems
+* Restructuring [namespaces](https://github.com/zloirock/core-js/#custom-build)
+* Some fixes
+
+##### 0.5.4 - 2015.02.15
+* Some fixes
+
+##### 0.5.3 - 2015.02.14
+* Added [support binary and octal literals](https://github.com/zloirock/core-js/#ecmascript-6-number) to `Number` constructor
+* Added [`Date#toISOString`](https://github.com/zloirock/core-js/#ecmascript-5)
+
+##### 0.5.2 - 2015.02.10
+* Some fixes
+
+##### 0.5.1 - 2015.02.09
+* Some fixes
+
+##### 0.5.0 - 2015.02.08
+* Systematization of modules
+* Splitted [`es6` module](https://github.com/zloirock/core-js/#ecmascript-6)
+* Splitted `console` module: `web.console` - only cap for missing methods, `core.log` - bound methods & additional features
+* Added [`delay` method](https://github.com/zloirock/core-js/#delay)
+* Some fixes
+
+##### 0.4.10 - 2015.01.28
+* [`Object.getOwnPropertySymbols`](https://github.com/zloirock/core-js/#ecmascript-6-symbol) polyfill returns array of wrapped keys
+
+##### 0.4.9 - 2015.01.27
+* FF20-24 fix
+
+##### 0.4.8 - 2015.01.25
+* Some [collections](https://github.com/zloirock/core-js/#ecmascript-6-collections) fixes
+
+##### 0.4.7 - 2015.01.25
+* Added support frozen objects as [collections](https://github.com/zloirock/core-js/#ecmascript-6-collections) keys
+
+##### 0.4.6 - 2015.01.21
+* Added [`Object.getOwnPropertySymbols`](https://github.com/zloirock/core-js/#ecmascript-6-symbol)
+* Added [`NodeList.prototype[@@iterator]`](https://github.com/zloirock/core-js/#ecmascript-6-iterators)
+* Added basic `@@species` logic - getter in native constructors
+* Removed `Function#by`
+* Some fixes
+
+##### 0.4.5 - 2015.01.16
+* Some fixes
+
+##### 0.4.4 - 2015.01.11
+* Enabled CSP support
+
+##### 0.4.3 - 2015.01.10
+* Added `Function` instances `name` property for IE9+
+
+##### 0.4.2 - 2015.01.10
+* `Object` static methods accept primitives
+* `RegExp` constructor can alter flags (IE9+)
+* Added `Array.prototype[Symbol.unscopables]`
+
+##### 0.4.1 - 2015.01.05
+* Some fixes
+
+##### 0.4.0 - 2015.01.03
+* Added [`es6.reflect`](https://github.com/zloirock/core-js/#ecmascript-6-reflect) module:
+  * Added `Reflect.apply`
+  * Added `Reflect.construct`
+  * Added `Reflect.defineProperty`
+  * Added `Reflect.deleteProperty`
+  * Added `Reflect.enumerate`
+  * Added `Reflect.get`
+  * Added `Reflect.getOwnPropertyDescriptor`
+  * Added `Reflect.getPrototypeOf`
+  * Added `Reflect.has`
+  * Added `Reflect.isExtensible`
+  * Added `Reflect.preventExtensions`
+  * Added `Reflect.set`
+  * Added `Reflect.setPrototypeOf`
+* `core-js` methods now can use external `Symbol.iterator` polyfill
+* Some fixes
+
+##### 0.3.3 - 2014.12.28
+* [Console cap](https://github.com/zloirock/core-js/#console) excluded from node.js default builds
+
+##### 0.3.2 - 2014.12.25
+* Added cap for [ES5](https://github.com/zloirock/core-js/#ecmascript-5) freeze-family methods
+* Fixed `console` bug
+
+##### 0.3.1 - 2014.12.23
+* Some fixes
+
+##### 0.3.0 - 2014.12.23
+* Optimize [`Map` & `Set`](https://github.com/zloirock/core-js/#ecmascript-6-collections):
+  * Use entries chain on hash table
+  * Fast & correct iteration
+  * Iterators moved to [`es6`](https://github.com/zloirock/core-js/#ecmascript-6) and [`es6.collections`](https://github.com/zloirock/core-js/#ecmascript-6-collections) modules
+
+##### 0.2.5 - 2014.12.20
+* `console` no longer shortcut for `console.log` (compatibility problems)
+* Some fixes
+
+##### 0.2.4 - 2014.12.17
+* Better compliance of ES6
+* Added [`Math.fround`](https://github.com/zloirock/core-js/#ecmascript-6-math) (IE10+)
+* Some fixes
+
+##### 0.2.3 - 2014.12.15
+* [Symbols](https://github.com/zloirock/core-js/#ecmascript-6-symbol):
+  * Added option to disable addition setter to `Object.prototype` for Symbol polyfill:
+    * Added `Symbol.useSimple`
+    * Added `Symbol.useSetter`
+  * Added cap for well-known Symbols:
+    * Added `Symbol.hasInstance`
+    * Added `Symbol.isConcatSpreadable`
+    * Added `Symbol.match`
+    * Added `Symbol.replace`
+    * Added `Symbol.search`
+    * Added `Symbol.species`
+    * Added `Symbol.split`
+    * Added `Symbol.toPrimitive`
+    * Added `Symbol.unscopables`
+
+##### 0.2.2 - 2014.12.13
+* Added [`RegExp#flags`](https://github.com/zloirock/core-js/#ecmascript-6-regexp) ([December 2014 Draft Rev 29](http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#december_6_2014_draft_rev_29))
+* Added [`String.raw`](https://github.com/zloirock/core-js/#ecmascript-6-string)
+
+##### 0.2.1 - 2014.12.12
+* Repair converting -0 to +0 in [native collections](https://github.com/zloirock/core-js/#ecmascript-6-collections)
+
+##### 0.2.0 - 2014.12.06
+* Added [`es7.proposals`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) and [`es7.abstract-refs`](https://github.com/zenparsing/es-abstract-refs) modules
+* Added [`String#at`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+* Added real [`String Iterator`](https://github.com/zloirock/core-js/#ecmascript-6-iterators), older versions used Array Iterator
+* Added abstract references support:
+  * Added `Symbol.referenceGet`
+  * Added `Symbol.referenceSet`
+  * Added `Symbol.referenceDelete`
+  * Added `Function#@@referenceGet`
+  * Added `Map#@@referenceGet`
+  * Added `Map#@@referenceSet`
+  * Added `Map#@@referenceDelete`
+  * Added `WeakMap#@@referenceGet`
+  * Added `WeakMap#@@referenceSet`
+  * Added `WeakMap#@@referenceDelete`
+  * Added `Dict.{...methods}[@@referenceGet]`
+* Removed deprecated `.contains` methods
+* Some fixes
+
+##### 0.1.5 - 2014.12.01
+* Added [`Array#copyWithin`](https://github.com/zloirock/core-js/#ecmascript-6-array)
+* Added [`String#codePointAt`](https://github.com/zloirock/core-js/#ecmascript-6-string)
+* Added [`String.fromCodePoint`](https://github.com/zloirock/core-js/#ecmascript-6-string)
+
+##### 0.1.4 - 2014.11.27
+* Added [`Dict.mapPairs`](https://github.com/zloirock/core-js/#dict)
+
+##### 0.1.3 - 2014.11.20
+* [TC39 November meeting](https://github.com/rwaldron/tc39-notes/tree/master/es6/2014-11):
+  * [`.contains` -> `.includes`](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-18.md#51--44-arrayprototypecontains-and-stringprototypecontains)
+    * `String#contains` -> [`String#includes`](https://github.com/zloirock/core-js/#ecmascript-6-string)
+    * `Array#contains` -> [`Array#includes`](https://github.com/zloirock/core-js/#ecmascript-7-proposals)
+    * `Dict.contains` -> [`Dict.includes`](https://github.com/zloirock/core-js/#dict)
+  * [Removed `WeakMap#clear`](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-19.md#412-should-weakmapweakset-have-a-clear-method-markm)
+  * [Removed `WeakSet#clear`](https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-19.md#412-should-weakmapweakset-have-a-clear-method-markm)
+
+##### 0.1.2 - 2014.11.19
+* `Map` & `Set` bug fix
+
+##### 0.1.1 - 2014.11.18
+* Public release
\ No newline at end of file
Index: node_modules/_core-js@2.6.5@core-js/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/package.json	(date 1553691965594)
+++ node_modules/_core-js@2.6.5@core-js/package.json	(date 1553691965594)
@@ -0,0 +1,75 @@
+{
+  "name": "core-js",
+  "description": "Standard library",
+  "version": "2.6.5",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/zloirock/core-js.git"
+  },
+  "main": "index.js",
+  "devDependencies": {
+    "LiveScript": "1.3.x",
+    "es-observable-tests": "0.2.x",
+    "eslint": "4.19.x",
+    "eslint-plugin-import": "2.12.x",
+    "grunt": "^1.0.2",
+    "grunt-cli": "^1.2.0",
+    "grunt-contrib-clean": "^1.1.0",
+    "grunt-contrib-copy": "^1.0.0",
+    "grunt-contrib-uglify": "3.3.x",
+    "grunt-contrib-watch": "^1.0.0",
+    "grunt-karma": "^2.0.0",
+    "grunt-livescript": "0.6.x",
+    "karma": "^2.0.0",
+    "karma-qunit": "^2.1.0",
+    "karma-chrome-launcher": "^2.2.0",
+    "karma-firefox-launcher": "^1.0.1",
+    "karma-ie-launcher": "^1.0.0",
+    "karma-phantomjs-launcher": "1.0.x",
+    "phantomjs-prebuilt": "2.1.x",
+    "promises-aplus-tests": "^2.1.2",
+    "qunit": "2.6.x",
+    "temp": "^0.8.3",
+    "webpack": "^3.11.0"
+  },
+  "scripts": {
+    "grunt": "grunt",
+    "lint": "eslint ./",
+    "promises-tests": "promises-aplus-tests tests/promises-aplus/adapter",
+    "observables-tests": "node tests/observables/adapter && node tests/observables/adapter-library",
+    "test": "npm run grunt clean copy && npm run lint && npm run grunt livescript client karma:default && npm run grunt library karma:library && npm run promises-tests && npm run observables-tests && lsc tests/commonjs"
+  },
+  "license": "MIT",
+  "keywords": [
+    "ES3",
+    "ES5",
+    "ES6",
+    "ES7",
+    "ES2015",
+    "ES2016",
+    "ES2017",
+    "ECMAScript 3",
+    "ECMAScript 5",
+    "ECMAScript 6",
+    "ECMAScript 7",
+    "ECMAScript 2015",
+    "ECMAScript 2016",
+    "ECMAScript 2017",
+    "Harmony",
+    "Strawman",
+    "Map",
+    "Set",
+    "WeakMap",
+    "WeakSet",
+    "Promise",
+    "Symbol",
+    "TypedArray",
+    "setImmediate",
+    "Dict",
+    "polyfill",
+    "shim"
+  ],
+  "__npminstall_done": "Wed Mar 27 2019 21:06:05 GMT+0800 (GMT+08:00)",
+  "_from": "core-js@2.6.5",
+  "_resolved": "http://registry.npm.taobao.org/core-js/download/core-js-2.6.5.tgz"
+}
\ No newline at end of file
Index: node_modules/_core-js@2.6.5@core-js/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/index.js	(date 499162500000)
@@ -0,0 +1,16 @@
+require('./shim');
+require('./modules/core.dict');
+require('./modules/core.get-iterator-method');
+require('./modules/core.get-iterator');
+require('./modules/core.is-iterable');
+require('./modules/core.delay');
+require('./modules/core.function.part');
+require('./modules/core.object.is-object');
+require('./modules/core.object.classof');
+require('./modules/core.object.define');
+require('./modules/core.object.make');
+require('./modules/core.number.iterator');
+require('./modules/core.regexp.escape');
+require('./modules/core.string.escape-html');
+require('./modules/core.string.unescape-html');
+module.exports = require('./modules/_core');
Index: node_modules/_core-js@2.6.5@core-js/bower.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/bower.json	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/bower.json	(date 499162500000)
@@ -0,0 +1,49 @@
+{
+  "name": "core.js",
+  "main": "client/core.js",
+  "version": "2.6.5",
+  "description": "Standard Library",
+  "keywords": [
+    "ES3",
+    "ES5",
+    "ES6",
+    "ES7",
+    "ES2015",
+    "ES2016",
+    "ES2017",
+    "ECMAScript 3",
+    "ECMAScript 5",
+    "ECMAScript 6",
+    "ECMAScript 7",
+    "ECMAScript 2015",
+    "ECMAScript 2016",
+    "ECMAScript 2017",
+    "Harmony",
+    "Strawman",
+    "Map",
+    "Set",
+    "WeakMap",
+    "WeakSet",
+    "Promise",
+    "Symbol",
+    "TypedArray",
+    "setImmediate",
+    "Dict",
+    "polyfill",
+    "shim"
+  ],
+  "authors": [
+    "Denis Pushkarev <zloirock@zloirock.ru> (http://zloirock.ru/)"
+  ],
+  "license": "MIT",
+  "homepage": "https://github.com/zloirock/core-js",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/zloirock/core-js.git"
+  },
+  "ignore": [
+    "build",
+    "node_modules",
+    "tests"
+  ]
+}
Index: node_modules/_core-js@2.6.5@core-js/fn/dict.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/dict.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/dict.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.dict');
+module.exports = require('../modules/_core').Dict;
Index: node_modules/_core-js@2.6.5@core-js/fn/weak-set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/weak-set.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/weak-set.js	(date 499162500000)
@@ -0,0 +1,6 @@
+require('../modules/es6.object.to-string');
+require('../modules/web.dom.iterable');
+require('../modules/es6.weak-set');
+require('../modules/es7.weak-set.of');
+require('../modules/es7.weak-set.from');
+module.exports = require('../modules/_core').WeakSet;
Index: node_modules/_core-js@2.6.5@core-js/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/LICENSE	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/LICENSE	(date 499162500000)
@@ -0,0 +1,19 @@
+Copyright (c) 2014-2019 Denis Pushkarev
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
Index: node_modules/_core-js@2.6.5@core-js/fn/map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/map.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/map.js	(date 499162500000)
@@ -0,0 +1,8 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.map');
+require('../modules/es7.map.to-json');
+require('../modules/es7.map.of');
+require('../modules/es7.map.from');
+module.exports = require('../modules/_core').Map;
Index: node_modules/_core-js@2.6.5@core-js/fn/get-iterator-method.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/get-iterator-method.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/get-iterator-method.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/web.dom.iterable');
+require('../modules/es6.string.iterator');
+module.exports = require('../modules/core.get-iterator-method');
Index: node_modules/_core-js@2.6.5@core-js/fn/weak-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/weak-map.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/weak-map.js	(date 499162500000)
@@ -0,0 +1,6 @@
+require('../modules/es6.object.to-string');
+require('../modules/web.dom.iterable');
+require('../modules/es6.weak-map');
+require('../modules/es7.weak-map.of');
+require('../modules/es7.weak-map.from');
+module.exports = require('../modules/_core').WeakMap;
Index: node_modules/_core-js@2.6.5@core-js/fn/promise.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/promise.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/promise.js	(date 499162500000)
@@ -0,0 +1,7 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.promise');
+require('../modules/es7.promise.finally');
+require('../modules/es7.promise.try');
+module.exports = require('../modules/_core').Promise;
Index: node_modules/_core-js@2.6.5@core-js/fn/is-iterable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/is-iterable.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/is-iterable.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/web.dom.iterable');
+require('../modules/es6.string.iterator');
+module.exports = require('../modules/core.is-iterable');
Index: node_modules/_core-js@2.6.5@core-js/fn/set.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set.js	(date 499162500000)
@@ -0,0 +1,8 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.set');
+require('../modules/es7.set.to-json');
+require('../modules/es7.set.of');
+require('../modules/es7.set.from');
+module.exports = require('../modules/_core').Set;
Index: node_modules/_core-js@2.6.5@core-js/fn/_.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/_.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/_.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.function.part');
+module.exports = require('../modules/_core')._;
Index: node_modules/_core-js@2.6.5@core-js/fn/parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/parse-int.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/parse-int.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es6.parse-int');
+module.exports = require('../modules/_core').parseInt;
Index: node_modules/_core-js@2.6.5@core-js/fn/clear-immediate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/clear-immediate.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/clear-immediate.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.immediate');
+module.exports = require('../modules/_core').clearImmediate;
Index: node_modules/_core-js@2.6.5@core-js/fn/global.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/global.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/global.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es7.global');
+module.exports = require('../modules/_core').global;
Index: node_modules/_core-js@2.6.5@core-js/fn/get-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/get-iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/get-iterator.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../modules/web.dom.iterable');
+require('../modules/es6.string.iterator');
+module.exports = require('../modules/core.get-iterator');
Index: node_modules/_core-js@2.6.5@core-js/fn/set-timeout.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set-timeout.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set-timeout.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.timers');
+module.exports = require('../modules/_core').setTimeout;
Index: node_modules/_core-js@2.6.5@core-js/fn/parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/parse-float.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/parse-float.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es6.parse-float');
+module.exports = require('../modules/_core').parseFloat;
Index: node_modules/_core-js@2.6.5@core-js/fn/observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/observable.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/observable.js	(date 499162500000)
@@ -0,0 +1,7 @@
+require('../modules/es6.object.to-string');
+require('../modules/es6.string.iterator');
+require('../modules/web.dom.iterable');
+require('../modules/es6.promise');
+require('../modules/es7.symbol.observable');
+require('../modules/es7.observable');
+module.exports = require('../modules/_core').Observable;
Index: node_modules/_core-js@2.6.5@core-js/fn/asap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/asap.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/asap.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/es7.asap');
+module.exports = require('../modules/_core').asap;
Index: node_modules/_core-js@2.6.5@core-js/fn/delay.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/delay.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/delay.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/core.delay');
+module.exports = require('../modules/_core').delay;
Index: node_modules/_core-js@2.6.5@core-js/fn/set-immediate.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set-immediate.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set-immediate.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.immediate');
+module.exports = require('../modules/_core').setImmediate;
Index: node_modules/_core-js@2.6.5@core-js/fn/set-interval.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set-interval.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set-interval.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../modules/web.timers');
+module.exports = require('../modules/_core').setInterval;
Index: node_modules/_core-js@2.6.5@core-js/fn/set/from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set/from.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set/from.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.set');
+require('../../modules/es7.set.from');
+var $Set = require('../../modules/_core').Set;
+var $from = $Set.from;
+module.exports = function from(source, mapFn, thisArg) {
+  return $from.call(typeof this === 'function' ? this : $Set, source, mapFn, thisArg);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/date/to-iso-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/date/to-iso-string.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/date/to-iso-string.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es6.date.to-json');
+require('../../modules/es6.date.to-iso-string');
+module.exports = require('../../modules/_core').Date.toISOString;
Index: node_modules/_core-js@2.6.5@core-js/fn/set/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set/index.js	(date 499162500000)
@@ -0,0 +1,8 @@
+require('../../modules/es6.object.to-string');
+require('../../modules/es6.string.iterator');
+require('../../modules/web.dom.iterable');
+require('../../modules/es6.set');
+require('../../modules/es7.set.to-json');
+require('../../modules/es7.set.of');
+require('../../modules/es7.set.from');
+module.exports = require('../../modules/_core').Set;
Index: node_modules/_core-js@2.6.5@core-js/fn/set/of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/set/of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/set/of.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.set');
+require('../../modules/es7.set.of');
+var $Set = require('../../modules/_core').Set;
+var $of = $Set.of;
+module.exports = function of() {
+  return $of.apply(typeof this === 'function' ? this : $Set, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/map/of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/map/of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/map/of.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.map');
+require('../../modules/es7.map.of');
+var $Map = require('../../modules/_core').Map;
+var $of = $Map.of;
+module.exports = function of() {
+  return $of.apply(typeof this === 'function' ? this : $Map, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/map/from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/map/from.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/map/from.js	(date 499162500000)
@@ -0,0 +1,8 @@
+'use strict';
+require('../../modules/es6.map');
+require('../../modules/es7.map.from');
+var $Map = require('../../modules/_core').Map;
+var $from = $Map.from;
+module.exports = function from(source, mapFn, thisArg) {
+  return $from.call(typeof this === 'function' ? this : $Map, source, mapFn, thisArg);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/map/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/map/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/map/index.js	(date 499162500000)
@@ -0,0 +1,8 @@
+require('../../modules/es6.object.to-string');
+require('../../modules/es6.string.iterator');
+require('../../modules/web.dom.iterable');
+require('../../modules/es6.map');
+require('../../modules/es7.map.to-json');
+require('../../modules/es7.map.of');
+require('../../modules/es7.map.from');
+module.exports = require('../../modules/_core').Map;
Index: node_modules/_core-js@2.6.5@core-js/fn/json/stringify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/json/stringify.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/json/stringify.js	(date 499162500000)
@@ -0,0 +1,5 @@
+var core = require('../../modules/_core');
+var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
+module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
+  return $JSON.stringify.apply($JSON, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/math/isubh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/isubh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/isubh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.isubh');
+module.exports = require('../../modules/_core').Math.isubh;
Index: node_modules/_core-js@2.6.5@core-js/fn/date/to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/date/to-string.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/date/to-string.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.date.to-string');
+var $toString = Date.prototype.toString;
+module.exports = function toString(it) {
+  return $toString.call(it);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/json/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/json/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/json/index.js	(date 499162500000)
@@ -0,0 +1,2 @@
+var core = require('../../modules/_core');
+module.exports = core.JSON || (core.JSON = { stringify: JSON.stringify });
Index: node_modules/_core-js@2.6.5@core-js/fn/date/now.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/date/now.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/date/now.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.date.now');
+module.exports = require('../../modules/_core').Date.now;
Index: node_modules/_core-js@2.6.5@core-js/fn/date/to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/date/to-primitive.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/date/to-primitive.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.date.to-primitive');
+var toPrimitive = require('../../modules/_date-to-primitive');
+module.exports = function (it, hint) {
+  return toPrimitive.call(it, hint);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/date/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/date/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/date/index.js	(date 499162500000)
@@ -0,0 +1,6 @@
+require('../../modules/es6.date.now');
+require('../../modules/es6.date.to-json');
+require('../../modules/es6.date.to-iso-string');
+require('../../modules/es6.date.to-string');
+require('../../modules/es6.date.to-primitive');
+module.exports = require('../../modules/_core').Date;
Index: node_modules/_core-js@2.6.5@core-js/fn/date/to-json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/date/to-json.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/date/to-json.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.date.to-json');
+module.exports = require('../../modules/_core').Date.toJSON;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/radians.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/radians.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/radians.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.radians');
+module.exports = require('../../modules/_core').Math.radians;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/signbit.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/signbit.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/signbit.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es7.math.signbit');
+
+module.exports = require('../../modules/_core').Math.signbit;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/fscale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/fscale.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/fscale.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.fscale');
+module.exports = require('../../modules/_core').Math.fscale;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/iaddh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/iaddh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/iaddh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.iaddh');
+module.exports = require('../../modules/_core').Math.iaddh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/umulh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/umulh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/umulh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.umulh');
+module.exports = require('../../modules/_core').Math.umulh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/cbrt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/cbrt.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/cbrt.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.cbrt');
+module.exports = require('../../modules/_core').Math.cbrt;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/log2.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/log2.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/log2.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.log2');
+module.exports = require('../../modules/_core').Math.log2;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/atanh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/atanh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/atanh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.atanh');
+module.exports = require('../../modules/_core').Math.atanh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/degrees.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/degrees.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/degrees.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.degrees');
+module.exports = require('../../modules/_core').Math.degrees;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/rad-per-deg.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/rad-per-deg.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/rad-per-deg.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.rad-per-deg');
+module.exports = 180 / Math.PI;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/index.js	(date 499162500000)
@@ -0,0 +1,30 @@
+require('../../modules/es6.math.acosh');
+require('../../modules/es6.math.asinh');
+require('../../modules/es6.math.atanh');
+require('../../modules/es6.math.cbrt');
+require('../../modules/es6.math.clz32');
+require('../../modules/es6.math.cosh');
+require('../../modules/es6.math.expm1');
+require('../../modules/es6.math.fround');
+require('../../modules/es6.math.hypot');
+require('../../modules/es6.math.imul');
+require('../../modules/es6.math.log10');
+require('../../modules/es6.math.log1p');
+require('../../modules/es6.math.log2');
+require('../../modules/es6.math.sign');
+require('../../modules/es6.math.sinh');
+require('../../modules/es6.math.tanh');
+require('../../modules/es6.math.trunc');
+require('../../modules/es7.math.clamp');
+require('../../modules/es7.math.deg-per-rad');
+require('../../modules/es7.math.degrees');
+require('../../modules/es7.math.fscale');
+require('../../modules/es7.math.iaddh');
+require('../../modules/es7.math.isubh');
+require('../../modules/es7.math.imulh');
+require('../../modules/es7.math.rad-per-deg');
+require('../../modules/es7.math.radians');
+require('../../modules/es7.math.scale');
+require('../../modules/es7.math.umulh');
+require('../../modules/es7.math.signbit');
+module.exports = require('../../modules/_core').Math;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/acosh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/acosh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/acosh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.acosh');
+module.exports = require('../../modules/_core').Math.acosh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/asinh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/asinh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/asinh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.asinh');
+module.exports = require('../../modules/_core').Math.asinh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/log1p.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/log1p.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/log1p.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.log1p');
+module.exports = require('../../modules/_core').Math.log1p;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/imul.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/imul.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/imul.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.imul');
+module.exports = require('../../modules/_core').Math.imul;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/fround.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/fround.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/fround.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.fround');
+module.exports = require('../../modules/_core').Math.fround;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/expm1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/expm1.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/expm1.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.expm1');
+module.exports = require('../../modules/_core').Math.expm1;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/hypot.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/hypot.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/hypot.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.hypot');
+module.exports = require('../../modules/_core').Math.hypot;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/clz32.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/clz32.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/clz32.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.clz32');
+module.exports = require('../../modules/_core').Math.clz32;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/sign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/sign.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/sign.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.sign');
+module.exports = require('../../modules/_core').Math.sign;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/tanh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/tanh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/tanh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.tanh');
+module.exports = require('../../modules/_core').Math.tanh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/log10.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/log10.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/log10.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.log10');
+module.exports = require('../../modules/_core').Math.log10;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/cosh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/cosh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/cosh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.cosh');
+module.exports = require('../../modules/_core').Math.cosh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/imulh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/imulh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/imulh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.imulh');
+module.exports = require('../../modules/_core').Math.imulh;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/is-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/is-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/is-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.is-array');
+module.exports = require('../../modules/_core').Array.isArray;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/entries.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/entries.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/entries.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.iterator');
+module.exports = require('../../modules/_core').Array.entries;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/scale.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/scale.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/scale.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.scale');
+module.exports = require('../../modules/_core').Math.scale;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/deg-per-rad.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/deg-per-rad.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/deg-per-rad.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.deg-per-rad');
+module.exports = Math.PI / 180;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/trunc.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/trunc.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/trunc.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.trunc');
+module.exports = require('../../modules/_core').Math.trunc;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/sinh.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/sinh.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/sinh.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.math.sinh');
+module.exports = require('../../modules/_core').Math.sinh;
Index: node_modules/_core-js@2.6.5@core-js/fn/math/clamp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/math/clamp.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/math/clamp.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.math.clamp');
+module.exports = require('../../modules/_core').Math.clamp;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/sort.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/sort.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/sort.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.sort');
+module.exports = require('../../modules/_core').Array.sort;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/reduce-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/reduce-right.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/reduce-right.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.reduce-right');
+module.exports = require('../../modules/_core').Array.reduceRight;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/splice.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/splice.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/splice.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.splice, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.of');
+module.exports = require('../../modules/_core').Array.of;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/flatten.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/flatten.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/flatten.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.array.flatten');
+module.exports = require('../../modules/_core').Array.flatten;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/reverse.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/reverse.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/reverse.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.reverse, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/some.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/some.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/some.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.some');
+module.exports = require('../../modules/_core').Array.some;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/filter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/filter.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/filter.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.filter');
+module.exports = require('../../modules/_core').Array.filter;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/reduce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/reduce.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/reduce.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.reduce');
+module.exports = require('../../modules/_core').Array.reduce;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/shift.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/shift.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/shift.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.shift, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/fill.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/fill.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/fill.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.fill');
+module.exports = require('../../modules/_core').Array.fill;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/last-index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/last-index-of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/last-index-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.last-index-of');
+module.exports = require('../../modules/_core').Array.lastIndexOf;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/map.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/map.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.map');
+module.exports = require('../../modules/_core').Array.map;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/for-each.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/for-each.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/for-each.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.for-each');
+module.exports = require('../../modules/_core').Array.forEach;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.iterator');
+module.exports = require('../../modules/_core').Array.values;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/index.js	(date 499162500000)
@@ -0,0 +1,26 @@
+require('../../modules/es6.string.iterator');
+require('../../modules/es6.array.is-array');
+require('../../modules/es6.array.from');
+require('../../modules/es6.array.of');
+require('../../modules/es6.array.join');
+require('../../modules/es6.array.slice');
+require('../../modules/es6.array.sort');
+require('../../modules/es6.array.for-each');
+require('../../modules/es6.array.map');
+require('../../modules/es6.array.filter');
+require('../../modules/es6.array.some');
+require('../../modules/es6.array.every');
+require('../../modules/es6.array.reduce');
+require('../../modules/es6.array.reduce-right');
+require('../../modules/es6.array.index-of');
+require('../../modules/es6.array.last-index-of');
+require('../../modules/es6.array.copy-within');
+require('../../modules/es6.array.fill');
+require('../../modules/es6.array.find');
+require('../../modules/es6.array.find-index');
+require('../../modules/es6.array.species');
+require('../../modules/es6.array.iterator');
+require('../../modules/es7.array.includes');
+require('../../modules/es7.array.flat-map');
+require('../../modules/es7.array.flatten');
+module.exports = require('../../modules/_core').Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/every.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/every.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/every.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.every');
+module.exports = require('../../modules/_core').Array.every;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/keys.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.iterator');
+module.exports = require('../../modules/_core').Array.keys;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/copy-within.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/copy-within.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/copy-within.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.copy-within');
+module.exports = require('../../modules/_core').Array.copyWithin;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/index-of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/index-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.index-of');
+module.exports = require('../../modules/_core').Array.indexOf;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/pop.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/pop.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/pop.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.pop, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/unshift.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/unshift.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/unshift.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.unshift, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/from.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/from.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/from.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es6.string.iterator');
+require('../../modules/es6.array.from');
+module.exports = require('../../modules/_core').Array.from;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/concat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/concat.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/concat.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.concat, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/values.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/values.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/values.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.iterator');
+module.exports = require('../../modules/_core').Array.values;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/includes.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/includes.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.array.includes');
+module.exports = require('../../modules/_core').Array.includes;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/find.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/find.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/find.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.find');
+module.exports = require('../../modules/_core').Array.find;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/flat-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/flat-map.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/flat-map.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.array.flat-map');
+module.exports = require('../../modules/_core').Array.flatMap;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/find-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/find-index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/find-index.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.find-index');
+module.exports = require('../../modules/_core').Array.findIndex;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/push.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/push.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/push.js	(date 499162500000)
@@ -0,0 +1,4 @@
+// for a legacy code and future fixes
+module.exports = function () {
+  return Function.call.apply(Array.prototype.push, arguments);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/array/slice.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/slice.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/slice.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.slice');
+module.exports = require('../../modules/_core').Array.slice;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/join.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/join.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/join.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.array.join');
+module.exports = require('../../modules/_core').Array.join;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.iterator');
+module.exports = require('../../../modules/_iterators').Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/index.js	(date 499162500000)
@@ -0,0 +1,20 @@
+require('../../../modules/es6.array.join');
+require('../../../modules/es6.array.slice');
+require('../../../modules/es6.array.sort');
+require('../../../modules/es6.array.for-each');
+require('../../../modules/es6.array.map');
+require('../../../modules/es6.array.filter');
+require('../../../modules/es6.array.some');
+require('../../../modules/es6.array.every');
+require('../../../modules/es6.array.reduce');
+require('../../../modules/es6.array.reduce-right');
+require('../../../modules/es6.array.index-of');
+require('../../../modules/es6.array.last-index-of');
+require('../../../modules/es6.string.iterator');
+require('../../../modules/es6.array.iterator');
+require('../../../modules/es6.array.copy-within');
+require('../../../modules/es6.array.fill');
+require('../../../modules/es6.array.find');
+require('../../../modules/es6.array.find-index');
+require('../../../modules/es7.array.includes');
+module.exports = require('../../../modules/_entry-virtual')('Array');
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/sort.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/sort.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/sort.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.sort');
+module.exports = require('../../../modules/_entry-virtual')('Array').sort;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/reduce-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/reduce-right.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/reduce-right.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.reduce-right');
+module.exports = require('../../../modules/_entry-virtual')('Array').reduceRight;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/filter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/filter.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/filter.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.filter');
+module.exports = require('../../../modules/_entry-virtual')('Array').filter;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/flatten.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/flatten.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/flatten.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.array.flatten');
+module.exports = require('../../../modules/_entry-virtual')('Array').flatten;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/entries.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/entries.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/entries.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.iterator');
+module.exports = require('../../../modules/_entry-virtual')('Array').entries;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/some.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/some.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/some.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.some');
+module.exports = require('../../../modules/_entry-virtual')('Array').some;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/index-of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/index-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.index-of');
+module.exports = require('../../../modules/_entry-virtual')('Array').indexOf;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/every.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/every.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/every.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.every');
+module.exports = require('../../../modules/_entry-virtual')('Array').every;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/reduce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/reduce.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/reduce.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.reduce');
+module.exports = require('../../../modules/_entry-virtual')('Array').reduce;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/copy-within.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/copy-within.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/copy-within.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.copy-within');
+module.exports = require('../../../modules/_entry-virtual')('Array').copyWithin;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/fill.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/fill.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/fill.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.fill');
+module.exports = require('../../../modules/_entry-virtual')('Array').fill;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/last-index-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/last-index-of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/last-index-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.last-index-of');
+module.exports = require('../../../modules/_entry-virtual')('Array').lastIndexOf;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/map.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/map.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.map');
+module.exports = require('../../../modules/_entry-virtual')('Array').map;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/for-each.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/for-each.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/for-each.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.for-each');
+module.exports = require('../../../modules/_entry-virtual')('Array').forEach;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/values.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/values.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/values.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.iterator');
+module.exports = require('../../../modules/_iterators').Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/includes.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/includes.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.array.includes');
+module.exports = require('../../../modules/_entry-virtual')('Array').includes;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/find.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/find.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/find.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.find');
+module.exports = require('../../../modules/_entry-virtual')('Array').find;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/flat-map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/flat-map.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/flat-map.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.array.flat-map');
+module.exports = require('../../../modules/_entry-virtual')('Array').flatMap;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/join.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/join.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/join.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.join');
+module.exports = require('../../../modules/_entry-virtual')('Array').join;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/find-index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/find-index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/find-index.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.find-index');
+module.exports = require('../../../modules/_entry-virtual')('Array').findIndex;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/keys.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.iterator');
+module.exports = require('../../../modules/_entry-virtual')('Array').keys;
Index: node_modules/_core-js@2.6.5@core-js/fn/array/virtual/slice.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/array/virtual/slice.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/array/virtual/slice.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.array.slice');
+module.exports = require('../../../modules/_entry-virtual')('Array').slice;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/float32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/float32-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/float32-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.float32-array');
+module.exports = require('../../modules/_core').Float32Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/float64-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/float64-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/float64-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.float64-array');
+module.exports = require('../../modules/_core').Float64Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/int16-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/int16-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/int16-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.int16-array');
+module.exports = require('../../modules/_core').Int16Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/uint16-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/uint16-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/uint16-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.uint16-array');
+module.exports = require('../../modules/_core').Uint16Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/uint8-clamped-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/uint8-clamped-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/uint8-clamped-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.uint8-clamped-array');
+module.exports = require('../../modules/_core').Uint8ClampedArray;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/data-view.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/data-view.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/data-view.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es6.typed.data-view');
+require('../../modules/es6.object.to-string');
+module.exports = require('../../modules/_core').DataView;
Index: node_modules/_core-js@2.6.5@core-js/fn/error/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/error/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/error/index.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.error.is-error');
+module.exports = require('../../modules/_core').Error;
Index: node_modules/_core-js@2.6.5@core-js/fn/error/is-error.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/error/is-error.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/error/is-error.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.error.is-error');
+module.exports = require('../../modules/_core').Error.isError;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/parse-float.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/parse-float.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/parse-float.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.parse-float');
+module.exports = require('../../modules/_core').Number.parseFloat;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/constructor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/constructor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.constructor');
+module.exports = Number;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/uint32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/uint32-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/uint32-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.uint32-array');
+module.exports = require('../../modules/_core').Uint32Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/int32-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/int32-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/int32-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.int32-array');
+module.exports = require('../../modules/_core').Int32Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/array-buffer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/array-buffer.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/array-buffer.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es6.typed.array-buffer');
+require('../../modules/es6.object.to-string');
+module.exports = require('../../modules/_core').ArrayBuffer;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/int8-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/int8-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/int8-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.int8-array');
+module.exports = require('../../modules/_core').Int8Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/index.js	(date 499162500000)
@@ -0,0 +1,13 @@
+require('../../modules/es6.typed.array-buffer');
+require('../../modules/es6.typed.data-view');
+require('../../modules/es6.typed.int8-array');
+require('../../modules/es6.typed.uint8-array');
+require('../../modules/es6.typed.uint8-clamped-array');
+require('../../modules/es6.typed.int16-array');
+require('../../modules/es6.typed.uint16-array');
+require('../../modules/es6.typed.int32-array');
+require('../../modules/es6.typed.uint32-array');
+require('../../modules/es6.typed.float32-array');
+require('../../modules/es6.typed.float64-array');
+require('../../modules/es6.object.to-string');
+module.exports = require('../../modules/_core');
Index: node_modules/_core-js@2.6.5@core-js/fn/typed/uint8-array.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/typed/uint8-array.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/typed/uint8-array.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.typed.uint8-array');
+module.exports = require('../../modules/_core').Uint8Array;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/index.js	(date 499162500000)
@@ -0,0 +1,14 @@
+require('../../modules/es6.number.constructor');
+require('../../modules/es6.number.epsilon');
+require('../../modules/es6.number.is-finite');
+require('../../modules/es6.number.is-integer');
+require('../../modules/es6.number.is-nan');
+require('../../modules/es6.number.is-safe-integer');
+require('../../modules/es6.number.max-safe-integer');
+require('../../modules/es6.number.min-safe-integer');
+require('../../modules/es6.number.parse-float');
+require('../../modules/es6.number.parse-int');
+require('../../modules/es6.number.to-fixed');
+require('../../modules/es6.number.to-precision');
+require('../../modules/core.number.iterator');
+module.exports = require('../../modules/_core').Number;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/parse-int.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/parse-int.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/parse-int.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.parse-int');
+module.exports = require('../../modules/_core').Number.parseInt;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/is-nan.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/is-nan.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/is-nan.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.is-nan');
+module.exports = require('../../modules/_core').Number.isNaN;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/iterator.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/core.number.iterator');
+var get = require('../../modules/_iterators').Number;
+module.exports = function (it) {
+  return get.call(it);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/number/to-precision.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/to-precision.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/to-precision.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.to-precision');
+module.exports = require('../../modules/_core').Number.toPrecision;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/max-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/max-safe-integer.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/max-safe-integer.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.max-safe-integer');
+module.exports = 0x1fffffffffffff;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/is-finite.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/is-finite.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/is-finite.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.is-finite');
+module.exports = require('../../modules/_core').Number.isFinite;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/virtual/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/virtual/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/virtual/index.js	(date 499162500000)
@@ -0,0 +1,4 @@
+require('../../../modules/core.number.iterator');
+var $Number = require('../../../modules/_entry-virtual')('Number');
+$Number.iterator = require('../../../modules/_iterators').Number;
+module.exports = $Number;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/virtual/to-precision.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/virtual/to-precision.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/virtual/to-precision.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.number.to-precision');
+module.exports = require('../../../modules/_entry-virtual')('Number').toPrecision;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/to-fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/to-fixed.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/to-fixed.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.to-fixed');
+module.exports = require('../../modules/_core').Number.toFixed;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/virtual/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/virtual/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/virtual/iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/core.number.iterator');
+module.exports = require('../../../modules/_iterators').Number;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/min-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/min-safe-integer.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/min-safe-integer.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.min-safe-integer');
+module.exports = -0x1fffffffffffff;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/is-safe-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/is-safe-integer.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/is-safe-integer.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.is-safe-integer');
+module.exports = require('../../modules/_core').Number.isSafeInteger;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/epsilon.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/epsilon.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/epsilon.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.epsilon');
+module.exports = Math.pow(2, -52);
Index: node_modules/_core-js@2.6.5@core-js/fn/number/is-integer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/is-integer.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/is-integer.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.number.is-integer');
+module.exports = require('../../modules/_core').Number.isInteger;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/create.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/create.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.object.create');
+var $Object = require('../../modules/_core').Object;
+module.exports = function create(P, D) {
+  return $Object.create(P, D);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/object/lookup-getter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/lookup-getter.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/lookup-getter.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.lookup-setter');
+module.exports = require('../../modules/_core').Object.__lookupGetter__;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/entries.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/entries.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/entries.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.entries');
+module.exports = require('../../modules/_core').Object.entries;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/index.js	(date 499162500000)
@@ -0,0 +1,30 @@
+require('../../modules/es6.symbol');
+require('../../modules/es6.object.create');
+require('../../modules/es6.object.define-property');
+require('../../modules/es6.object.define-properties');
+require('../../modules/es6.object.get-own-property-descriptor');
+require('../../modules/es6.object.get-prototype-of');
+require('../../modules/es6.object.keys');
+require('../../modules/es6.object.get-own-property-names');
+require('../../modules/es6.object.freeze');
+require('../../modules/es6.object.seal');
+require('../../modules/es6.object.prevent-extensions');
+require('../../modules/es6.object.is-frozen');
+require('../../modules/es6.object.is-sealed');
+require('../../modules/es6.object.is-extensible');
+require('../../modules/es6.object.assign');
+require('../../modules/es6.object.is');
+require('../../modules/es6.object.set-prototype-of');
+require('../../modules/es6.object.to-string');
+require('../../modules/es7.object.get-own-property-descriptors');
+require('../../modules/es7.object.values');
+require('../../modules/es7.object.entries');
+require('../../modules/es7.object.define-getter');
+require('../../modules/es7.object.define-setter');
+require('../../modules/es7.object.lookup-getter');
+require('../../modules/es7.object.lookup-setter');
+require('../../modules/core.object.is-object');
+require('../../modules/core.object.classof');
+require('../../modules/core.object.define');
+require('../../modules/core.object.make');
+module.exports = require('../../modules/_core').Object;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/is-object.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/is-object.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/is-object.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.object.is-object');
+module.exports = require('../../modules/_core').Object.isObject;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/classof.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/classof.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/classof.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.object.classof');
+module.exports = require('../../modules/_core').Object.classof;
Index: node_modules/_core-js@2.6.5@core-js/fn/number/virtual/to-fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/number/virtual/to-fixed.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/number/virtual/to-fixed.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.number.to-fixed');
+module.exports = require('../../../modules/_entry-virtual')('Number').toFixed;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-descriptors.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-descriptors.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-descriptors.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.get-own-property-descriptors');
+module.exports = require('../../modules/_core').Object.getOwnPropertyDescriptors;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/is-sealed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/is-sealed.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/is-sealed.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.is-sealed');
+module.exports = require('../../modules/_core').Object.isSealed;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/assign.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/assign.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/assign.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.assign');
+module.exports = require('../../modules/_core').Object.assign;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/freeze.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/freeze.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/freeze.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.freeze');
+module.exports = require('../../modules/_core').Object.freeze;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/get-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/get-prototype-of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/get-prototype-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.get-prototype-of');
+module.exports = require('../../modules/_core').Object.getPrototypeOf;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/set-prototype-of.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/set-prototype-of.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/set-prototype-of.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.set-prototype-of');
+module.exports = require('../../modules/_core').Object.setPrototypeOf;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/lookup-setter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/lookup-setter.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/lookup-setter.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.lookup-setter');
+module.exports = require('../../modules/_core').Object.__lookupSetter__;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/seal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/seal.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/seal.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.seal');
+module.exports = require('../../modules/_core').Object.seal;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/make.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/make.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/make.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.object.make');
+module.exports = require('../../modules/_core').Object.make;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/define-property.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/define-property.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/define-property.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.object.define-property');
+var $Object = require('../../modules/_core').Object;
+module.exports = function defineProperty(it, key, desc) {
+  return $Object.defineProperty(it, key, desc);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/object/is.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/is.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/is.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.is');
+module.exports = require('../../modules/_core').Object.is;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/define.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/define.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/define.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.object.define');
+module.exports = require('../../modules/_core').Object.define;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-symbols.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-symbols.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-symbols.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.symbol');
+module.exports = require('../../modules/_core').Object.getOwnPropertySymbols;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-names.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-names.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-names.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.object.get-own-property-names');
+var $Object = require('../../modules/_core').Object;
+module.exports = function getOwnPropertyNames(it) {
+  return $Object.getOwnPropertyNames(it);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/object/define-properties.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/define-properties.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/define-properties.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.object.define-properties');
+var $Object = require('../../modules/_core').Object;
+module.exports = function defineProperties(T, D) {
+  return $Object.defineProperties(T, D);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/object/prevent-extensions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/prevent-extensions.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/prevent-extensions.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.prevent-extensions');
+module.exports = require('../../modules/_core').Object.preventExtensions;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/is-frozen.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/is-frozen.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/is-frozen.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.is-frozen');
+module.exports = require('../../modules/_core').Object.isFrozen;
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/constructor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/constructor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/constructor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.constructor');
+module.exports = RegExp;
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/index.js	(date 499162500000)
@@ -0,0 +1,10 @@
+require('../../modules/es6.regexp.constructor');
+require('../../modules/es6.regexp.exec');
+require('../../modules/es6.regexp.to-string');
+require('../../modules/es6.regexp.flags');
+require('../../modules/es6.regexp.match');
+require('../../modules/es6.regexp.replace');
+require('../../modules/es6.regexp.search');
+require('../../modules/es6.regexp.split');
+require('../../modules/core.regexp.escape');
+module.exports = require('../../modules/_core').RegExp;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/define-setter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/define-setter.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/define-setter.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.define-setter');
+module.exports = require('../../modules/_core').Object.__defineSetter__;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/values.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/values.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/values.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.values');
+module.exports = require('../../modules/_core').Object.values;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/is-extensible.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/is-extensible.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/is-extensible.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.is-extensible');
+module.exports = require('../../modules/_core').Object.isExtensible;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-descriptor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-descriptor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/get-own-property-descriptor.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.object.get-own-property-descriptor');
+var $Object = require('../../modules/_core').Object;
+module.exports = function getOwnPropertyDescriptor(it, key) {
+  return $Object.getOwnPropertyDescriptor(it, key);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/object/keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/keys.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.keys');
+module.exports = require('../../modules/_core').Object.keys;
Index: node_modules/_core-js@2.6.5@core-js/fn/object/define-getter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/object/define-getter.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/object/define-getter.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.object.define-getter');
+module.exports = require('../../modules/_core').Object.__defineGetter__;
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/flags.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/flags.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/flags.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.regexp.flags');
+var flags = require('../../modules/_flags');
+module.exports = function (it) {
+  return flags.call(it);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/string/trim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/trim.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/trim.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.trim');
+module.exports = require('../../modules/_core').String.trim;
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/escape.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/escape.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/escape.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.regexp.escape');
+module.exports = require('../../modules/_core').RegExp.escape;
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/to-string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/to-string.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/to-string.js	(date 499162500000)
@@ -0,0 +1,5 @@
+'use strict';
+require('../../modules/es6.regexp.to-string');
+module.exports = function toString(it) {
+  return RegExp.prototype.toString.call(it);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/search.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/search.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.regexp.search');
+var SEARCH = require('../../modules/_wks')('search');
+module.exports = function (it, str) {
+  return RegExp.prototype[SEARCH].call(it, str);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/split.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/split.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/split.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.regexp.split');
+var SPLIT = require('../../modules/_wks')('split');
+module.exports = function (it, str, limit) {
+  return RegExp.prototype[SPLIT].call(it, str, limit);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/match.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/match.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.regexp.match');
+var MATCH = require('../../modules/_wks')('match');
+module.exports = function (it, str) {
+  return RegExp.prototype[MATCH].call(it, str);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/regexp/replace.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/regexp/replace.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/regexp/replace.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.regexp.replace');
+var REPLACE = require('../../modules/_wks')('replace');
+module.exports = function (it, str, replacer) {
+  return RegExp.prototype[REPLACE].call(it, str, replacer);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/string/strike.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/strike.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/strike.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.strike');
+module.exports = require('../../modules/_core').String.strike;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/iterator.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.string.iterator');
+var get = require('../../modules/_iterators').String;
+module.exports = function (it) {
+  return get.call(it);
+};
Index: node_modules/_core-js@2.6.5@core-js/fn/string/small.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/small.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/small.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.small');
+module.exports = require('../../modules/_core').String.small;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/sup.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/sup.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/sup.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.sup');
+module.exports = require('../../modules/_core').String.sup;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/big.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/big.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/big.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.big');
+module.exports = require('../../modules/_core').String.big;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/fontcolor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/fontcolor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/fontcolor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.fontcolor');
+module.exports = require('../../modules/_core').String.fontcolor;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/fontsize.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/fontsize.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/fontsize.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.fontsize');
+module.exports = require('../../modules/_core').String.fontsize;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/match-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/match-all.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/match-all.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.match-all');
+module.exports = require('../../modules/_core').String.matchAll;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/pad-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/pad-start.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/pad-start.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.pad-start');
+module.exports = require('../../modules/_core').String.padStart;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/raw.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/raw.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/raw.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.raw');
+module.exports = require('../../modules/_core').String.raw;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/blink.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/blink.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/blink.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.blink');
+module.exports = require('../../modules/_core').String.blink;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/repeat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/repeat.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/repeat.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.repeat');
+module.exports = require('../../modules/_core').String.repeat;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/from-code-point.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/from-code-point.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/from-code-point.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.from-code-point');
+module.exports = require('../../modules/_core').String.fromCodePoint;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/index.js	(date 499162500000)
@@ -0,0 +1,35 @@
+require('../../modules/es6.string.from-code-point');
+require('../../modules/es6.string.raw');
+require('../../modules/es6.string.trim');
+require('../../modules/es6.string.iterator');
+require('../../modules/es6.string.code-point-at');
+require('../../modules/es6.string.ends-with');
+require('../../modules/es6.string.includes');
+require('../../modules/es6.string.repeat');
+require('../../modules/es6.string.starts-with');
+require('../../modules/es6.regexp.match');
+require('../../modules/es6.regexp.replace');
+require('../../modules/es6.regexp.search');
+require('../../modules/es6.regexp.split');
+require('../../modules/es6.string.anchor');
+require('../../modules/es6.string.big');
+require('../../modules/es6.string.blink');
+require('../../modules/es6.string.bold');
+require('../../modules/es6.string.fixed');
+require('../../modules/es6.string.fontcolor');
+require('../../modules/es6.string.fontsize');
+require('../../modules/es6.string.italics');
+require('../../modules/es6.string.link');
+require('../../modules/es6.string.small');
+require('../../modules/es6.string.strike');
+require('../../modules/es6.string.sub');
+require('../../modules/es6.string.sup');
+require('../../modules/es7.string.at');
+require('../../modules/es7.string.pad-start');
+require('../../modules/es7.string.pad-end');
+require('../../modules/es7.string.trim-left');
+require('../../modules/es7.string.trim-right');
+require('../../modules/es7.string.match-all');
+require('../../modules/core.string.escape-html');
+require('../../modules/core.string.unescape-html');
+module.exports = require('../../modules/_core').String;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/trim-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/trim-end.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/trim-end.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.trim-right');
+module.exports = require('../../modules/_core').String.trimRight;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/sub.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/sub.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/sub.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.sub');
+module.exports = require('../../modules/_core').String.sub;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/link.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/link.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/link.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.link');
+module.exports = require('../../modules/_core').String.link;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/at.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/at.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.at');
+module.exports = require('../../modules/_core').String.at;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/fixed.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/fixed.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.fixed');
+module.exports = require('../../modules/_core').String.fixed;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/anchor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/anchor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/anchor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.anchor');
+module.exports = require('../../modules/_core').String.anchor;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/pad-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/pad-end.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/pad-end.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.pad-end');
+module.exports = require('../../modules/_core').String.padEnd;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/trim-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/trim-right.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/trim-right.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.trim-right');
+module.exports = require('../../modules/_core').String.trimRight;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/trim-left.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/trim-left.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/trim-left.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.trim-left');
+module.exports = require('../../modules/_core').String.trimLeft;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/bold.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/bold.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/bold.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.bold');
+module.exports = require('../../modules/_core').String.bold;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/ends-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/ends-with.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/ends-with.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.ends-with');
+module.exports = require('../../modules/_core').String.endsWith;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/code-point-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/code-point-at.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/code-point-at.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.code-point-at');
+module.exports = require('../../modules/_core').String.codePointAt;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/italics.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/italics.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/italics.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.italics');
+module.exports = require('../../modules/_core').String.italics;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/starts-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/starts-with.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/starts-with.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.starts-with');
+module.exports = require('../../modules/_core').String.startsWith;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/escape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/escape-html.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/escape-html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.string.escape-html');
+module.exports = require('../../modules/_core').String.escapeHTML;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/trim-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/trim-start.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/trim-start.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.string.trim-left');
+module.exports = require('../../modules/_core').String.trimLeft;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/unescape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/unescape-html.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/unescape-html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/core.string.unescape-html');
+module.exports = require('../../modules/_core').String.unescapeHTML;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/sup.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/sup.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/sup.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.sup');
+module.exports = require('../../../modules/_entry-virtual')('String').sup;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/strike.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/strike.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/strike.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.strike');
+module.exports = require('../../../modules/_entry-virtual')('String').strike;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fontcolor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fontcolor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fontcolor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.fontcolor');
+module.exports = require('../../../modules/_entry-virtual')('String').fontcolor;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/small.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/small.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/small.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.small');
+module.exports = require('../../../modules/_entry-virtual')('String').small;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fontsize.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fontsize.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fontsize.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.fontsize');
+module.exports = require('../../../modules/_entry-virtual')('String').fontsize;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/big.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/big.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/big.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.big');
+module.exports = require('../../../modules/_entry-virtual')('String').big;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/includes.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/includes.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.string.includes');
+module.exports = require('../../modules/_core').String.includes;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.trim');
+module.exports = require('../../../modules/_entry-virtual')('String').trim;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/pad-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/pad-start.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/pad-start.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.pad-start');
+module.exports = require('../../../modules/_entry-virtual')('String').padStart;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-right.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-right.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-right.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-right');
+module.exports = require('../../../modules/_entry-virtual')('String').trimRight;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/blink.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/blink.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/blink.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.blink');
+module.exports = require('../../../modules/_entry-virtual')('String').blink;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/match-all.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/match-all.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/match-all.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.match-all');
+module.exports = require('../../../modules/_entry-virtual')('String').matchAll;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-end.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-end.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-right');
+module.exports = require('../../../modules/_entry-virtual')('String').trimRight;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/repeat.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/repeat.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/repeat.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.repeat');
+module.exports = require('../../../modules/_entry-virtual')('String').repeat;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.iterator');
+module.exports = require('../../../modules/_iterators').String;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/index.js	(date 499162500000)
@@ -0,0 +1,33 @@
+require('../../../modules/es6.string.trim');
+require('../../../modules/es6.string.iterator');
+require('../../../modules/es6.string.code-point-at');
+require('../../../modules/es6.string.ends-with');
+require('../../../modules/es6.string.includes');
+require('../../../modules/es6.string.repeat');
+require('../../../modules/es6.string.starts-with');
+require('../../../modules/es6.regexp.match');
+require('../../../modules/es6.regexp.replace');
+require('../../../modules/es6.regexp.search');
+require('../../../modules/es6.regexp.split');
+require('../../../modules/es6.string.anchor');
+require('../../../modules/es6.string.big');
+require('../../../modules/es6.string.blink');
+require('../../../modules/es6.string.bold');
+require('../../../modules/es6.string.fixed');
+require('../../../modules/es6.string.fontcolor');
+require('../../../modules/es6.string.fontsize');
+require('../../../modules/es6.string.italics');
+require('../../../modules/es6.string.link');
+require('../../../modules/es6.string.small');
+require('../../../modules/es6.string.strike');
+require('../../../modules/es6.string.sub');
+require('../../../modules/es6.string.sup');
+require('../../../modules/es7.string.at');
+require('../../../modules/es7.string.pad-start');
+require('../../../modules/es7.string.pad-end');
+require('../../../modules/es7.string.trim-left');
+require('../../../modules/es7.string.trim-right');
+require('../../../modules/es7.string.match-all');
+require('../../../modules/core.string.escape-html');
+require('../../../modules/core.string.unescape-html');
+module.exports = require('../../../modules/_entry-virtual')('String');
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/link.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/link.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/link.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.link');
+module.exports = require('../../../modules/_entry-virtual')('String').link;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-start.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-start.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-left');
+module.exports = require('../../../modules/_entry-virtual')('String').trimLeft;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fixed.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fixed.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/fixed.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.fixed');
+module.exports = require('../../../modules/_entry-virtual')('String').fixed;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/sub.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/sub.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/sub.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.sub');
+module.exports = require('../../../modules/_entry-virtual')('String').sub;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/pad-end.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/pad-end.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/pad-end.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.pad-end');
+module.exports = require('../../../modules/_entry-virtual')('String').padEnd;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/at.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/at.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.at');
+module.exports = require('../../../modules/_entry-virtual')('String').at;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-left.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-left.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/trim-left.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es7.string.trim-left');
+module.exports = require('../../../modules/_entry-virtual')('String').trimLeft;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/anchor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/anchor.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/anchor.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.anchor');
+module.exports = require('../../../modules/_entry-virtual')('String').anchor;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/ends-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/ends-with.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/ends-with.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.ends-with');
+module.exports = require('../../../modules/_entry-virtual')('String').endsWith;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/includes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/includes.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/includes.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.includes');
+module.exports = require('../../../modules/_entry-virtual')('String').includes;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/italics.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/italics.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/italics.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.italics');
+module.exports = require('../../../modules/_entry-virtual')('String').italics;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/bold.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/bold.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/bold.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.bold');
+module.exports = require('../../../modules/_entry-virtual')('String').bold;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/escape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/escape-html.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/escape-html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/core.string.escape-html');
+module.exports = require('../../../modules/_entry-virtual')('String').escapeHTML;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/code-point-at.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/code-point-at.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/code-point-at.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.code-point-at');
+module.exports = require('../../../modules/_entry-virtual')('String').codePointAt;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/unescape-html.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/unescape-html.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/unescape-html.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/core.string.unescape-html');
+module.exports = require('../../../modules/_entry-virtual')('String').unescapeHTML;
Index: node_modules/_core-js@2.6.5@core-js/fn/string/virtual/starts-with.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/string/virtual/starts-with.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/string/virtual/starts-with.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../../modules/es6.string.starts-with');
+module.exports = require('../../../modules/_entry-virtual')('String').startsWith;
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/for.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/for.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/for.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.symbol');
+module.exports = require('../../modules/_core').Symbol['for'];
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/index.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/index.js	(date 499162500000)
@@ -0,0 +1,5 @@
+require('../../modules/es6.symbol');
+require('../../modules/es6.object.to-string');
+require('../../modules/es7.symbol.async-iterator');
+require('../../modules/es7.symbol.observable');
+module.exports = require('../../modules/_core').Symbol;
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/key-for.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/key-for.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/key-for.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.symbol');
+module.exports = require('../../modules/_core').Symbol.keyFor;
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/iterator.js	(date 499162500000)
@@ -0,0 +1,3 @@
+require('../../modules/es6.string.iterator');
+require('../../modules/web.dom.iterable');
+module.exports = require('../../modules/_wks-ext').f('iterator');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/species.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/species.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/species.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('species');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/is-concat-spreadable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/is-concat-spreadable.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/is-concat-spreadable.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('isConcatSpreadable');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/match.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/match.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.match');
+module.exports = require('../../modules/_wks-ext').f('match');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/replace.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/replace.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/replace.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.replace');
+module.exports = require('../../modules/_wks-ext').f('replace');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/to-string-tag.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/to-string-tag.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/to-string-tag.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.object.to-string');
+module.exports = require('../../modules/_wks-ext').f('toStringTag');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/unscopables.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/unscopables.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/unscopables.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('unscopables');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/to-primitive.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/to-primitive.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/to-primitive.js	(date 499162500000)
@@ -0,0 +1,1 @@
+module.exports = require('../../modules/_wks-ext').f('toPrimitive');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/async-iterator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/async-iterator.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/async-iterator.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.symbol.async-iterator');
+module.exports = require('../../modules/_wks-ext').f('asyncIterator');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/observable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/observable.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/observable.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es7.symbol.observable');
+module.exports = require('../../modules/_wks-ext').f('observable');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/has-instance.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/has-instance.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/has-instance.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.function.has-instance');
+module.exports = require('../../modules/_wks-ext').f('hasInstance');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/search.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/search.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.search');
+module.exports = require('../../modules/_wks-ext').f('search');
Index: node_modules/_core-js@2.6.5@core-js/fn/symbol/split.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/symbol/split.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/symbol/split.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.regexp.split');
+module.exports = require('../../modules/_wks-ext').f('split');
Index: node_modules/_core-js@2.6.5@core-js/fn/reflect/own-keys.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/reflect/own-keys.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/reflect/own-keys.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.own-keys');
+module.exports = require('../../modules/_core').Reflect.ownKeys;
Index: node_modules/_core-js@2.6.5@core-js/fn/reflect/construct.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/_core-js@2.6.5@core-js/fn/reflect/construct.js	(date 499162500000)
+++ node_modules/_core-js@2.6.5@core-js/fn/reflect/construct.js	(date 499162500000)
@@ -0,0 +1,2 @@
+require('../../modules/es6.reflect.construct');
+module.exports = require('../../modules/_core').Reflect.construct;
